<refentry id="glLineStipple.3G">
	<refmeta id="glLineStipple.3G-meta">
		<refentrytitle>glLineStipple</refentrytitle>
		<manvolnum>3G</manvolnum>
	</refmeta>
	<refnamediv id="glLineStipple.3G-name">
		<refname>glLineStipple</refname>
		<refpurpose>specify the line stipple pattern</refpurpose>
	</refnamediv>
	<refsynopsisdiv id="glLineStipple.3G-c_spec">
		<title>C Specification</title>
		<funcsynopsis>
			<funcprototype>
				<funcdef>void&nbsp;<function>glLineStipple</function></funcdef>
				<paramdef>GLint&nbsp;<parameter>factor</parameter></paramdef>
				<paramdef>GLushort&nbsp;<parameter>pattern</parameter></paramdef>
			</funcprototype>
		</funcsynopsis>
	</refsynopsisdiv>
	<refsect1 id="glLineStipple.3G-parameters">
		<title>Parameters</title>
		<variablelist>
			<varlistentry>
				<term><parameter>factor</parameter></term>
				<listitem>
					<simpara>
						Specifies a multiplier for each bit in the line stipple pattern. If <parameter>factor</parameter> is 3, for
						example, each bit in the pattern is used three times before the next bit in the pattern is used.
						<parameter>factor</parameter> is clamped to the range [1, 256] and defaults to 1.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>pattern</parameter></term>
				<listitem>
					<simpara>
						Specifies a 16-bit integer whose bit pattern determines which fragments of a line will be drawn when the
						line is rasterized. Bit zero is used first; the default pattern is all 1's.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsect1>
	<refsect1 id="glLineStipple.3G-description">
		<title>Description</title>
		<para>
			Line stippling masks out certain fragments produced by rasterization; those fragments will not be drawn. The masking is
			achieved by using three parameters: the 16-bit line stipple pattern <parameter>pattern</parameter>, the repeat count
			<parameter>factor</parameter>, and an integer stipple counter <inlineequation>
				<mml:math>
					<mml:mi>s</mml:mi>
				</mml:math>
			</inlineequation>.
		</para>
		<para>
			Counter <inlineequation>
				<mml:math>
					<mml:mi>s</mml:mi>
				</mml:math>
			</inlineequation> is reset to 0 whenever <function moreinfo="refentry">glBegin</function> is called, and before each
			line segment of a <function moreinfo="refentry">glBegin</function>(<constant>GL_LINES</constant>)/<function
			moreinfo="refentry">glEnd</function> sequence is generated. It is incremented after each fragment of a unit width
			aliased line segment is generated, or after each <inlineequation>
				<mml:math>
					<mml:mi>i</mml:mi>
				</mml:math>
			</inlineequation> fragments of an <inlineequation>
				<mml:math>
					<mml:mi>i</mml:mi>
				</mml:math>
			</inlineequation> width line segment are generated. The <inlineequation>
				<mml:math>
					<mml:mi>i</mml:mi>
				</mml:math>
			</inlineequation> fragments associated with count <inlineequation>
				<mml:math>
					<mml:mi>s</mml:mi>
				</mml:math>
			</inlineequation> are masked out if <parameter>pattern</parameter> bit <inlineequation>
				<mml:math>
					<mml:mrow>
						<mml:mo>(</mml:mo>
						<mml:mi>s</mml:mi>
						<mml:mo>/</mml:mo>
						<mml:mi>factor</mml:mi>
						<mml:mo>)</mml:mo>
						<mml:mi>mod</mml:mi>
						<mml:mn>16</mml:mn>
					</mml:mrow>
				</mml:math>
			</inlineequation> is 0, otherwise these fragments are sent to the frame buffer. Bit zero of
			<parameter>pattern</parameter> is the least significant bit.
		</para>
		<para>
			Antialiased lines are treated as a sequence of <inlineequation>
				<mml:math>
					<mml:mrow>
						<mml:mn>1</mml:mn>
						<mml:mo>&times;</mml:mo>
						<mml:mi>width</mml:mi>
					</mml:mrow>
				</mml:math>
			</inlineequation> rectangles for purposes of stippling. Whether rectagle <inlineequation>
				<mml:math>
					<mml:mi>s</mml:mi>
				</mml:math>
			</inlineequation> is rasterized or not depends on the fragment rule described for aliased lines, counting rectangles
			rather than groups of fragments.
		</para>
		<para>
			To enable and disable line stippling, call <function moreinfo="refentry">glEnable</function> and <function
			moreinfo="refentry">glDisable</function> with argument <constant>GL_LINE_STIPPLE</constant>. When enabled, the line
			stipple pattern is applied as described above. When disabled, it is as if the pattern were all 1's. Initially, line
			stippling is disabled.
		</para>
	</refsect1>
	<refsect1 id="glLineStipple.3G-errors">
		<title>Errors</title>
		<para>
			<constant>GL_INVALID_OPERATION</constant> is generated if <function>glLineStipple</function> is executed between the
			execution of <function moreinfo="refentry">glBegin</function> and the corresponding execution of <function
			moreinfo="refentry">glEnd</function>.
		</para>
	</refsect1>
	<refsect1 id="glLineStipple.3G-associated_gets">
		<title>Associated Gets</title>
		<para>
			<function moreinfo="refentry">glGet</function> with argument <constant>GL_LINE_STIPPLE_PATTERN</constant>
		</para>
		<para>
			<function moreinfo="refentry">glGet</function> with argument <constant>GL_LINE_STIPPLE_REPEAT</constant>
		</para>
		<para>
			<function moreinfo="refentry">glIsEnabled</function> with argument <constant>GL_LINE_STIPPLE</constant>
		</para>
	</refsect1>
	<refsect1 id="glLineStipple.3G-see_also">
		<title>See Also</title>
		<para>
			<simplelist type="inline">
				<member><citerefentry>
					<refentrytitle>glLineWidth</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glPolygonStipple</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
			</simplelist>
		</para>
	</refsect1>
</refentry>
