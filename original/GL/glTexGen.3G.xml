<refentry id="glTexGen.3G">
	<refmeta id="glTexGen.3G-meta">
		<refentrytitle>glTexGen</refentrytitle>
		<manvolnum>3G</manvolnum>
	</refmeta>
	<refnamediv id="glTexGen.3G-name">
		<refname>glTexGend</refname>
		<refname>glTexGenf</refname>
		<refname>glTexGeni</refname>
		<refname>glTexGendv</refname>
		<refname>glTexGenfv</refname>
		<refname>glTexGeniv</refname>
		<refpurpose>control the generation of texture coordinates</refpurpose>
	</refnamediv>
	<refsynopsisdiv id="glTexGen.3G-c_spec">
		<title>C Specification</title>
		<funcsynopsis>
			<funcprototype>
				<funcdef>void&nbsp;<function>glTexGend</function></funcdef>
				<paramdef>GLenum&nbsp;<parameter>coord</parameter></paramdef>
				<paramdef>GLenum&nbsp;<parameter>pname</parameter></paramdef>
				<paramdef>GLdouble&nbsp;<parameter>param</parameter></paramdef>
			</funcprototype>
			<funcprototype>
				<funcdef>void&nbsp;<function>glTexGenf</function></funcdef>
				<paramdef>GLenum&nbsp;<parameter>coord</parameter></paramdef>
				<paramdef>GLenum&nbsp;<parameter>pname</parameter></paramdef>
				<paramdef>GLfloat&nbsp;<parameter>param</parameter></paramdef>
			</funcprototype>
			<funcprototype>
				<funcdef>void&nbsp;<function>glTexGeni</function></funcdef>
				<paramdef>GLenum&nbsp;<parameter>coord</parameter></paramdef>
				<paramdef>GLenum&nbsp;<parameter>pname</parameter></paramdef>
				<paramdef>GLint&nbsp;<parameter>param</parameter></paramdef>
			</funcprototype>
		</funcsynopsis>
	</refsynopsisdiv>
	<refsect1 id="glTexGen.3G-parameters">
		<title>Parameters</title>
		<variablelist>
			<varlistentry>
				<term><parameter>coord</parameter></term>
				<listitem>
					<simpara>
						Specifies a texture coordinate. Must be one of <constant>GL_S</constant>, <constant>GL_T</constant>,
						<constant>GL_R</constant>, or <constant>GL_Q</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>pname</parameter></term>
				<listitem>
					<simpara>
						Specifies the symbolic name of the texture-coordinate generation function. Must be
						<constant>GL_TEXTURE_GEN_MODE</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>param</parameter></term>
				<listitem>
					<simpara>
						Specifies a single-valued texture generation parameter, one of <constant>GL_OBJECT_LINEAR</constant>,
						<constant>GL_EYE_LINEAR</constant>, or <constant>GL_SPHERE_MAP</constant>.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsect1>
	<refsynopsisdiv id="glTexGen.3G-c_spec-v">
		<title>C Specification</title>
		<funcsynopsis>
			<funcprototype>
				<funcdef>void&nbsp;<function>glTexGendv</function></funcdef>
				<paramdef>GLenum&nbsp;<parameter>coord</parameter></paramdef>
				<paramdef>GLenum&nbsp;<parameter>pname</parameter></paramdef>
				<paramdef>const&nbsp;GLdouble&nbsp;*<parameter>params</parameter></paramdef>
			</funcprototype>
			<funcprototype>
				<funcdef>void&nbsp;<function>glTexGenfv</function></funcdef>
				<paramdef>GLenum&nbsp;<parameter>coord</parameter></paramdef>
				<paramdef>GLenum&nbsp;<parameter>pname</parameter></paramdef>
				<paramdef>const&nbsp;GLfloat&nbsp;*<parameter>params</parameter></paramdef>
			</funcprototype>
			<funcprototype>
				<funcdef>void&nbsp;<function>glTexGeniv</function></funcdef>
				<paramdef>GLenum&nbsp;<parameter>coord</parameter></paramdef>
				<paramdef>GLenum&nbsp;<parameter>pname</parameter></paramdef>
				<paramdef>const&nbsp;GLint&nbsp;*<parameter>params</parameter></paramdef>
			</funcprototype>
		</funcsynopsis>
	</refsynopsisdiv>
	<refsect1 id="glTexGen.3G-parameters-v">
		<title>Parameters</title>
		<variablelist>
			<varlistentry>
				<term><parameter>coord</parameter></term>
				<listitem>
					<simpara>
						Specifies a texture coordinate. Must be one of <constant>GL_S</constant>, <constant>GL_T</constant>,
						<constant>GL_R</constant>, or <constant>GL_Q</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>pname</parameter></term>
				<listitem>
					<simpara>
						Specifies the symbolic name of the texture-coordinate generation function or function parameters. Must be
						<constant>GL_TEXTURE_GEN_MODE</constant>, <constant>GL_OBJECT_PLANE</constant>, or
						<constant>GL_EYE_PLANE</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>params</parameter></term>
				<listitem>
					<simpara>
						Specifies a pointer to an array of texture generation parameters. If <parameter>pname</parameter> is
						<constant>GL_TEXTURE_GEN_MODE</constant>, then the array must contain a single symbolic constant, one of
						<constant>GL_OBJECT_LINEAR</constant>, <constant>GL_EYE_LINEAR</constant>, or
						<constant>GL_SPHERE_MAP</constant>. Otherwise, <parameter>params</parameter> holds the coefficients for the
						texture-coordinate generation function specified by <parameter>pname</parameter>.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsect1>
	<refsect1 id="glTexGen.3G-description">
		<title>Description</title>
		<para>
			<function moreinfo="refentry">glTexGen</function> selects a texture-coordinate generation function or supplies
			coefficients for one of the functions. <parameter>coord</parameter> names one of the (<parameter>s</parameter>,
			<parameter>t</parameter>, <parameter>r</parameter>, <parameter>q</parameter>) texture coordinates; it must be one of
			the symbols <constant>GL_S</constant>, <constant>GL_T</constant>, <constant>GL_R</constant>, or
			<constant>GL_Q</constant>. <parameter>pname</parameter> must be one of three symbolic constants:
			<constant>GL_TEXTURE_GEN_MODE</constant>, <constant>GL_OBJECT_PLANE</constant>, or <constant>GL_EYE_PLANE</constant>.
			If <parameter>pname</parameter> is <constant>GL_TEXTURE_GEN_MODE</constant>, then <parameter>params</parameter> chooses
			a mode, one of <constant>GL_OBJECT_LINEAR</constant>, <constant>GL_EYE_LINEAR</constant>, or
			<constant>GL_SPHERE_MAP</constant>. If <parameter>pname</parameter> is either <constant>GL_OBJECT_PLANE</constant> or
			<constant>GL_EYE_PLANE</constant>, <parameter>params</parameter> contains coefficients for the corresponding texture
			generation function.
		</para>
		<para>
			If the texture generation function is <constant>GL_OBJECT_LINEAR</constant>, the function
		</para>
		<para>
			<inlineequation>
				<mml:math>
					<mml:mrow>
						<mml:mi>g</mml:mi>
						<mml:mo>=</mml:mo>
						<mml:msub>
							<mml:mi>p</mml:mi>
							<mml:mn>1</mml:mn>
						</mml:msub>
						<mml:msub>
							<mml:mi>x</mml:mi>
							<mml:mi>o</mml:mi>
						</mml:msub>
						<mml:mo>+</mml:mo>
						<mml:msub>
							<mml:mi>p</mml:mi>
							<mml:mn>2</mml:mn>
						</mml:msub>
						<mml:msub>
							<mml:mi>y</mml:mi>
							<mml:mi>o</mml:mi>
						</mml:msub>
						<mml:mo>+</mml:mo>
						<mml:msub>
							<mml:mi>p</mml:mi>
							<mml:mn>3</mml:mn>
						</mml:msub>
						<mml:msub>
							<mml:mi>z</mml:mi>
							<mml:mi>o</mml:mi>
						</mml:msub>
						<mml:mo>+</mml:mo>
						<mml:msub>
							<mml:mi>p</mml:mi>
							<mml:mn>4</mml:mn>
						</mml:msub>
						<mml:msub>
							<mml:mi>w</mml:mi>
							<mml:mi>o</mml:mi>
						</mml:msub>
					</mml:mrow>
				</mml:math>
			</inlineequation>
		</para>
		<para>
			is used, where <inlineequation>
				<mml:math>
					<mml:mi>g</mml:mi>
				</mml:math>
			</inlineequation> is the value computed for the coordinate named in <parameter>coord</parameter>, <inlineequation>
				<mml:math>
					<mml:msub>
						<mml:mi>p</mml:mi>
						<mml:mn>1</mml:mn>
					</mml:msub>
				</mml:math>
			</inlineequation>, <inlineequation>
				<mml:math>
					<mml:msub>
						<mml:mi>p</mml:mi>
						<mml:mn>2</mml:mn>
					</mml:msub>
				</mml:math>
			</inlineequation>, <inlineequation>
				<mml:math>
					<mml:msub>
						<mml:mi>p</mml:mi>
						<mml:mn>3</mml:mn>
					</mml:msub>
				</mml:math>
			</inlineequation>, and <inlineequation>
				<mml:math>
					<mml:msub>
						<mml:mi>p</mml:mi>
						<mml:mn>4</mml:mn>
					</mml:msub>
				</mml:math>
			</inlineequation> are the four values supplied in <parameter>params</parameter>, and <inlineequation>
				<mml:math>
					<mml:msub>
						<mml:mi>x</mml:mi>
						<mml:mi>o</mml:mi>
					</mml:msub>
				</mml:math>
			</inlineequation>, <inlineequation>
				<mml:math>
					<mml:msub>
						<mml:mi>y</mml:mi>
						<mml:mi>o</mml:mi>
					</mml:msub>
				</mml:math>
			</inlineequation>, <inlineequation>
				<mml:math>
					<mml:msub>
						<mml:mi>z</mml:mi>
						<mml:mi>o</mml:mi>
					</mml:msub>
				</mml:math>
			</inlineequation>, and <inlineequation>
				<mml:math>
					<mml:msub>
						<mml:mi>w</mml:mi>
						<mml:mi>o</mml:mi>
					</mml:msub>
				</mml:math>
			</inlineequation> are the object coordinates of the vertex. This function can be used, for example, to texture-map
			terrain using sea level as a reference plane (defined by <inlineequation>
				<mml:math>
					<mml:msub>
						<mml:mi>p</mml:mi>
						<mml:mn>1</mml:mn>
					</mml:msub>
				</mml:math>
			</inlineequation>, <inlineequation>
				<mml:math>
					<mml:msub>
						<mml:mi>p</mml:mi>
						<mml:mn>2</mml:mn>
					</mml:msub>
				</mml:math>
			</inlineequation>, <inlineequation>
				<mml:math>
					<mml:msub>
						<mml:mi>p</mml:mi>
						<mml:mn>3</mml:mn>
					</mml:msub>
				</mml:math>
			</inlineequation>, and <inlineequation>
				<mml:math>
					<mml:msub>
						<mml:mi>p</mml:mi>
						<mml:mn>4</mml:mn>
					</mml:msub>
				</mml:math>
			</inlineequation>). The altitude of a terrain vertex is computed by the <constant>GL_OBJECT_LINEAR</constant>
			coordinate generation function as its distance from sea level; that altitude can then be used to index the texture
			image to map white snow onto peaks and green grass onto foothills.
		</para>
		<para>
			If the texture generation function is <constant>GL_EYE_LINEAR</constant>, the function
		</para>
		<para>
			<inlineequation>
				<mml:math>
					<mml:mrow>
						<mml:mi>g</mml:mi>
						<mml:mo>=</mml:mo>
						<mml:msup>
							<mml:msub>
								<mml:mi>p</mml:mi>
								<mml:mn>1</mml:mn>
							</mml:msub>
							<mml:mo>'</mml:mo>
						</mml:msup>
						<mml:msub>
							<mml:mi>x</mml:mi>
							<mml:mi>e</mml:mi>
						</mml:msub>
						<mml:mo>+</mml:mo>
						<mml:msup>
							<mml:msub>
								<mml:mi>p</mml:mi>
								<mml:mn>2</mml:mn>
							</mml:msub>
							<mml:mo>'</mml:mo>
						</mml:msup>
						<mml:msub>
							<mml:mi>y</mml:mi>
							<mml:mi>e</mml:mi>
						</mml:msub>
						<mml:mo>+</mml:mo>
						<mml:msup>
							<mml:msub>
								<mml:mi>p</mml:mi>
								<mml:mn>3</mml:mn>
							</mml:msub>
							<mml:mo>'</mml:mo>
						</mml:msup>
						<mml:msub>
							<mml:mi>z</mml:mi>
							<mml:mi>e</mml:mi>
						</mml:msub>
						<mml:mo>+</mml:mo>
						<mml:msup>
							<mml:msub>
								<mml:mi>p</mml:mi>
								<mml:mn>4</mml:mn>
							</mml:msub>
							<mml:mo>'</mml:mo>
						</mml:msup>
						<mml:msub>
							<mml:mi>w</mml:mi>
							<mml:mi>e</mml:mi>
						</mml:msub>
					</mml:mrow>
				</mml:math>
			</inlineequation>
		</para>
		<para>
			is used, where
		</para>
		<para>
			<inlineequation>
				<mml:math>
					<mml:mrow>
						<mml:mo>(</mml:mo>
						<mml:msup>
							<mml:msub>
								<mml:mi>p</mml:mi>
								<mml:mn>1</mml:mn>
							</mml:msub>
							<mml:mo>'</mml:mo>
						</mml:msup>
						<mml:msup>
							<mml:msub>
								<mml:mi>p</mml:mi>
								<mml:mn>2</mml:mn>
							</mml:msub>
							<mml:mo>'</mml:mo>
						</mml:msup>
						<mml:msup>
							<mml:msub>
								<mml:mi>p</mml:mi>
								<mml:mn>3</mml:mn>
							</mml:msub>
							<mml:mo>'</mml:mo>
						</mml:msup>
						<mml:msup>
							<mml:msub>
								<mml:mi>p</mml:mi>
								<mml:mn>4</mml:mn>
							</mml:msub>
							<mml:mo>'</mml:mo>
						</mml:msup>
						<mml:mo>)</mml:mo>
						<mml:mo>=</mml:mo>
						<mml:mo>(</mml:mo>
						<mml:msub>
							<mml:mi>p</mml:mi>
							<mml:mn>1</mml:mn>
						</mml:msub>
						<mml:msub>
							<mml:mi>p</mml:mi>
							<mml:mn>2</mml:mn>
						</mml:msub>
						<mml:msub>
							<mml:mi>p</mml:mi>
							<mml:mn>3</mml:mn>
						</mml:msub>
						<mml:msub>
							<mml:mi>p</mml:mi>
							<mml:mn>4</mml:mn>
						</mml:msub>
						<mml:mo>)</mml:mo>
						<mml:msup>
							<mml:mi>M</mml:mi>
							<mml:mn>-1</mml:mn>
						</mml:msup>
					</mml:mrow>
				</mml:math>
			</inlineequation>
		</para>
		<para>
			and <inlineequation>
				<mml:math>
					<mml:msub>
						<mml:mi>x</mml:mi>
						<mml:mi>e</mml:mi>
					</mml:msub>
				</mml:math>
			</inlineequation>, <inlineequation>
				<mml:math>
					<mml:msub>
						<mml:mi>y</mml:mi>
						<mml:mi>e</mml:mi>
					</mml:msub>
				</mml:math>
			</inlineequation>, <inlineequation>
				<mml:math>
					<mml:msub>
						<mml:mi>z</mml:mi>
						<mml:mi>e</mml:mi>
					</mml:msub>
				</mml:math>
			</inlineequation>, and <inlineequation>
				<mml:math>
					<mml:msub>
						<mml:mi>w</mml:mi>
						<mml:mi>e</mml:mi>
					</mml:msub>
				</mml:math>
			</inlineequation> are the eye coordinates of the vertex, <inlineequation>
				<mml:math>
					<mml:msub>
						<mml:mi>p</mml:mi>
						<mml:mn>1</mml:mn>
					</mml:msub>
				</mml:math>
			</inlineequation>, <inlineequation>
				<mml:math>
					<mml:msub>
						<mml:mi>p</mml:mi>
						<mml:mn>2</mml:mn>
					</mml:msub>
				</mml:math>
			</inlineequation>, <inlineequation>
				<mml:math>
					<mml:msub>
						<mml:mi>p</mml:mi>
						<mml:mn>3</mml:mn>
					</mml:msub>
				</mml:math>
			</inlineequation>, and <inlineequation>
				<mml:math>
					<mml:msub>
						<mml:mi>p</mml:mi>
						<mml:mn>4</mml:mn>
					</mml:msub>
				</mml:math>
			</inlineequation> are the values supplied in <parameter>params</parameter>, and <inlineequation>
				<mml:math>
					<mml:mi>M</mml:mi>
				</mml:math>
			</inlineequation> is the modelview matrix when <function moreinfo="refentry">glTexGen</function> is invoked. If
			<inlineequation>
				<mml:math>
					<mml:mi>M</mml:mi>
				</mml:math>
			</inlineequation> is poorly conditioned or singular, texture coordinates generated by the resulting function may be
			inaccurate or undefined.
		</para>
		<para>
			Note that the values in <parameter>params</parameter> define a reference plane in eye coordinates. The modelview matrix
			that is applied to them may not be the same one in effect when the polygon vertices are transformed. This function
			establishes a field of texture coordinates that can produce dynamic contour lines on moving objects.
		</para>
		<para>
			If <parameter>pname</parameter> is <constant>GL_SPHERE_MAP</constant> and <parameter>coord</parameter> is either
			<constant>GL_S</constant> or <constant>GL_T</constant>, <inlineequation>
				<mml:math>
					<mml:mi>s</mml:mi>
				</mml:math>
			</inlineequation> and <inlineequation>
				<mml:math>
					<mml:mi>t</mml:mi>
				</mml:math>
			</inlineequation> texture coordinates are generated as follows. Let <parameter>u</parameter> be the unit vector
			pointing from the origin to the polygon vertex (in eye coordinates). Let <parameter>n</parameter> sup prime be the
			current normal, after transformation to eye coordinates. Let
		</para>
		<para>
			<inlineequation>
				<mml:math>
					<mml:mrow>
						<mml:mi>f</mml:mi>
						<mml:mo>=</mml:mo>
						<mml:mo>(</mml:mo>
						<mml:msub>
							<mml:mi>f</mml:mi>
							<mml:mi>x</mml:mi>
						</mml:msub>
						<mml:msub>
							<mml:mi>f</mml:mi>
							<mml:mi>y</mml:mi>
						</mml:msub>
						<mml:msub>
							<mml:mi>f</mml:mi>
							<mml:mi>z</mml:mi>
						</mml:msub>
						<mml:msup>
							<mml:mo>)</mml:mo>
							<mml:mi>T</mml:mi>
						</mml:msup>
					</mml:mrow>
				</mml:math>
			</inlineequation> be the reflection vector such that
		</para>
		<para>
			<inlineequation>
				<mml:math>
					<mml:mrow>
						<mml:mi>f</mml:mi>
						<mml:mo>=</mml:mo>
						<mml:mi>u</mml:mi>
						<mml:mo>-</mml:mo>
						<mml:mn>2</mml:mn>
						<mml:msup>
							<mml:mi>n</mml:mi>
							<mml:mo>'</mml:mo>
						</mml:msup>
						<mml:msup>
							<mml:msup>
								<mml:mi>n</mml:mi>
								<mml:mo>'</mml:mo>
							</mml:msup>
							<mml:mi>T</mml:mi>
						</mml:msup>
						<mml:mi>u</mml:mi>
					</mml:mrow>
				</mml:math>
			</inlineequation>
		</para>
		<para>
			Finally, let <inlineequation>
				<mml:math>
					<mml:mrow>
						<mml:mi>m</mml:mi>
						<mml:mo>=</mml:mo>
						<mml:mn>2</mml:mn>
						<mml:msqrt>
							<mml:mrow>
								<mml:msup>
									<mml:msub>
										<mml:mi>f</mml:mi>
										<mml:mi>x</mml:mi>
									</mml:msub>
									<mml:mrow>
										<mml:mn>2</mml:mn>
									</mml:mrow>
								</mml:msup>
								<mml:mo>+</mml:mo>
								<mml:msup>
									<mml:msub>
										<mml:mi>f</mml:mi>
										<mml:mi>y</mml:mi>
									</mml:msub>
									<mml:mrow>
										<mml:mn>2</mml:mn>
									</mml:mrow>
								</mml:msup>
								<mml:mo>+</mml:mo>
								<mml:mo>(</mml:mo>
								<mml:msub>
									<mml:mi>f</mml:mi>
									<mml:mi>z</mml:mi>
								</mml:msub>
								<mml:mo>+</mml:mo>
								<mml:mn>1</mml:mn>
								<mml:msup>
									<mml:mo>)</mml:mo>
									<mml:mn>2</mml:mn>
								</mml:msup>
							</mml:mrow>
						</mml:msqrt>
					</mml:mrow>
				</mml:math>
			</inlineequation>. Then the values assigned to the <inlineequation>
				<mml:math>
					<mml:mi>s</mml:mi>
				</mml:math>
			</inlineequation> and <inlineequation>
				<mml:math>
					<mml:mi>t</mml:mi>
				</mml:math>
			</inlineequation> texture coordinates are
		</para>
		<para>
			<inlineequation>
				<mml:math>
					<mml:mrow>
						<mml:mi>s</mml:mi>
						<mml:mo>=</mml:mo>
						<mml:mfrac>
							<mml:msub>
								<mml:mi>f</mml:mi>
								<mml:mi>x</mml:mi>
							</mml:msub>
							<mml:mi>m</mml:mi>
						</mml:mfrac>
						<mml:mo>+</mml:mo>
						<mml:mfrac>
							<mml:mn>1</mml:mn>
							<mml:mn>2</mml:mn>
						</mml:mfrac>
					</mml:mrow>
				</mml:math>
			</inlineequation> <inlineequation>
				<mml:math>
					<mml:mrow>
						<mml:mi>t</mml:mi>
						<mml:mo>=</mml:mo>
						<mml:mfrac>
							<mml:msub>
								<mml:mi>f</mml:mi>
								<mml:mi>y</mml:mi>
							</mml:msub>
							<mml:mi>m</mml:mi>
						</mml:mfrac>
						<mml:mo>+</mml:mo>
						<mml:mfrac>
							<mml:mn>1</mml:mn>
							<mml:mn>2</mml:mn>
						</mml:mfrac>
					</mml:mrow>
				</mml:math>
			</inlineequation>
		</para>
		<para>
			To enable or disable a texture-coordinate generation function, call <function moreinfo="refentry">glEnable</function>
			or <function moreinfo="refentry">glDisable</function> with one of the symbolic texture-coordinate names
			(<constant>GL_TEXTURE_GEN_S</constant>, <constant>GL_TEXTURE_GEN_T</constant>, <constant>GL_TEXTURE_GEN_R</constant>,
			or <constant>GL_TEXTURE_GEN_Q</constant>) as the argument. When enabled, the specified texture coordinate is computed
			according to the generating function associated with that coordinate. When disabled, subsequent vertices take the
			specified texture coordinate from the current set of texture coordinates. Initially, all texture generation functions
			are set to <constant>GL_EYE_LINEAR</constant> and are disabled. Both <inlineequation>
				<mml:math>
					<mml:mi>s</mml:mi>
				</mml:math>
			</inlineequation> plane equations are (1, 0, 0, 0), both <inlineequation>
				<mml:math>
					<mml:mi>t</mml:mi>
				</mml:math>
			</inlineequation> plane equations are (0, 1, 0, 0), and all <inlineequation>
				<mml:math>
					<mml:mi>r</mml:mi>
				</mml:math>
			</inlineequation> and <inlineequation>
				<mml:math>
					<mml:mi>q</mml:mi>
				</mml:math>
			</inlineequation> plane equations are (0, 0, 0, 0).
		</para>
		<para>
			When the <constant>GL_ARB_multitexture</constant> extension is supported, <function
			moreinfo="refentry">glTexGen</function> set the texture generation parameters for the currently active texture unit,
			selected with <function moreinfo="refentry">glActiveTextureARB</function>.
		</para>
	</refsect1>
	<refsect1 id="glTexGen.3G-errors">
		<title>Errors</title>
		<para>
			<constant>GL_INVALID_ENUM</constant> is generated when <parameter>coord</parameter> or <parameter>pname</parameter> is
			not an accepted defined value, or when <parameter>pname</parameter> is <constant>GL_TEXTURE_GEN_MODE</constant> and
			<parameter>params</parameter> is not an accepted defined value.
		</para>
		<para>
			<constant>GL_INVALID_ENUM</constant> is generated when <parameter>pname</parameter> is
			<constant>GL_TEXTURE_GEN_MODE</constant>, <parameter>params</parameter> is <constant>GL_SPHERE_MAP</constant>, and
			<parameter>coord</parameter> is either <constant>GL_R</constant> or <constant>GL_Q</constant>.
		</para>
		<para>
			<constant>GL_INVALID_OPERATION</constant> is generated if <function moreinfo="refentry">glTexGen</function> is executed
			between the execution of <function moreinfo="refentry">glBegin</function> and the corresponding execution of <function
			moreinfo="refentry">glEnd</function>.
		</para>
	</refsect1>
	<refsect1 id="glTexGen.3G-associated_gets">
		<title>Associated Gets</title>
		<para>
			<function moreinfo="refentry">glGetTexGen</function>
		</para>
		<para>
			<function moreinfo="refentry">glIsEnabled</function> with argument <constant>GL_TEXTURE_GEN_S</constant>
		</para>
		<para>
			<function moreinfo="refentry">glIsEnabled</function> with argument <constant>GL_TEXTURE_GEN_T</constant>
		</para>
		<para>
			<function moreinfo="refentry">glIsEnabled</function> with argument <constant>GL_TEXTURE_GEN_R</constant>
		</para>
		<para>
			<function moreinfo="refentry">glIsEnabled</function> with argument <constant>GL_TEXTURE_GEN_Q</constant>
		</para>
	</refsect1>
	<refsect1 id="glTexGen.3G-see_also">
		<title>See Also</title>
		<para>
			<simplelist type="inline">
				<member><citerefentry>
					<refentrytitle>glActiveTextureARB</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glCopyPixels</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glCopyTexImage2D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glCopyTexSubImage1D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glCopyTexSubImage2D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glCopyTexSubImage3D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexEnv</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexImage1D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexImage2D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexImage3D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexParameter</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexSubImage1D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexSubImage2D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexSubImage3D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
			</simplelist>
		</para>
	</refsect1>
</refentry>
