<refentry id="glBegin.3G">
	<refmeta id="glBegin.3G-meta">
		<refentrytitle>glBegin</refentrytitle>
		<manvolnum>3G</manvolnum>
	</refmeta>
	<refnamediv id="glBegin.3G-name">
		<refname>glBegin</refname>
		<refname>glEnd</refname>
		<refpurpose>delimit the vertices of a primitive or a group of like primitives</refpurpose>
	</refnamediv>
	<refsynopsisdiv id="glBegin.3G-c_spec-begin">
		<title>C Specification</title>
		<funcsynopsis>
			<funcprototype>
				<funcdef>void&nbsp;<function>glBegin</function></funcdef>
				<paramdef>GLenum&nbsp;<parameter>mode</parameter></paramdef>
			</funcprototype>
		</funcsynopsis>
	</refsynopsisdiv>
	<refsect1 id="glBegin.3G-parameters-begin">
		<title>Parameters</title>
		<variablelist>
			<varlistentry>
				<term><parameter>mode</parameter></term>
				<listitem>
					<simpara>
						Specifies the primitive or primitives that will be created from vertices presented between
						<function>glBegin</function> and the subsequent <function>glEnd</function>. Ten symbolic constants are
						accepted: <constant>GL_POINTS</constant>, <constant>GL_LINES</constant>,
						<constant>GL_LINE_STRIP</constant>, <constant>GL_LINE_LOOP</constant>, <constant>GL_TRIANGLES</constant>,
						<constant>GL_TRIANGLE_STRIP</constant>, <constant>GL_TRIANGLE_FAN</constant>,
						<constant>GL_QUADS</constant>, <constant>GL_QUAD_STRIP</constant>, and <constant>GL_POLYGON</constant>.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsect1>
	<refsynopsisdiv id="glBegin.3G-c_spec-end">
		<title>C Specification</title>
		<funcsynopsis>
			<funcprototype>
				<funcdef>void&nbsp;<function>glEnd</function></funcdef>
				<void/>
			</funcprototype>
		</funcsynopsis>
	</refsynopsisdiv>
	<refsect1 id="glBegin.3G-description">
		<title>Description</title>
		<para>
			<function>glBegin</function> and <function>glEnd</function> delimit the vertices that define a primitive or a group of
			like primitives. <function>glBegin</function> accepts a single argument that specifies in which of ten ways the
			vertices are interpreted. Taking <inlineequation>
				<mml:math>
					<mml:mi>n</mml:mi>
				</mml:math>
			</inlineequation> as an integer count starting at one, and <inlineequation>
				<mml:math>
					<mml:mi>N</mml:mi>
				</mml:math>
			</inlineequation> as the total number of vertices specified, the interpretations are as follows:
		</para>
		<variablelist>
			<varlistentry>
				<term><constant>GL_POINTS</constant></term>
				<listitem>
					<simpara>
						Treats each vertex as a single point. Vertex <inlineequation>
							<mml:math>
								<mml:mi>n</mml:mi>
							</mml:math>
						</inlineequation> defines point <inlineequation>
							<mml:math>
								<mml:mi>n</mml:mi>
							</mml:math>
						</inlineequation>. <inlineequation>
							<mml:math>
								<mml:mi>N</mml:mi>
							</mml:math>
						</inlineequation> points are drawn.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_LINES</constant></term>
				<listitem>
					<simpara>
						Treats each pair of vertices as an independent line segment. Vertices <inlineequation>
							<mml:math>
								<mml:mrow>
									<mml:mn>2</mml:mn>
									<mml:mi>n</mml:mi>
								</mml:mrow>
								<mml:mo>-</mml:mo>
								<mml:mn>1</mml:mn>
							</mml:math>
						</inlineequation> and <inlineequation>
							<mml:math>
								<mml:mn>2</mml:mn>
								<mml:mi>n</mml:mi>
							</mml:math>
						</inlineequation> define line <inlineequation>
							<mml:math>
								<mml:mi>n</mml:mi>
							</mml:math>
						</inlineequation>. <inlineequation>
							<mml:math>
								<mml:mi>N</mml:mi>
								<mml:mo>/</mml:mo>
								<mml:mn>2</mml:mn>
							</mml:math>
						</inlineequation> lines are drawn.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_LINE_STRIP</constant></term>
				<listitem>
					<simpara>
						Draws a connected group of line segments from the first vertex to the last. Vertices <inlineequation>
							<mml:math>
								<mml:mi>n</mml:mi>
							</mml:math>
						</inlineequation> and <inlineequation>
							<mml:math>
								<mml:mi>n</mml:mi>
								<mml:mo>+</mml:mo>
								<mml:mn>1</mml:mn>
							</mml:math>
						</inlineequation> define line <inlineequation>
							<mml:math>
								<mml:mi>n</mml:mi>
							</mml:math>
						</inlineequation>. <inlineequation>
							<mml:math>
								<mml:mi>N</mml:mi>
								<mml:mo>-</mml:mo>
								<mml:mn>1</mml:mn>
							</mml:math>
						</inlineequation> lines are drawn.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_LINE_LOOP</constant></term>
				<listitem>
					<simpara>
						Draws a connected group of line segments from the first vertex to the last, then back to the first.
						Vertices <inlineequation>
							<mml:math>
								<mml:mi>n</mml:mi>
							</mml:math>
						</inlineequation> and <inlineequation>
							<mml:math>
								<mml:mi>n</mml:mi>
								<mml:mo>+</mml:mo>
								<mml:mn>1</mml:mn>
							</mml:math>
						</inlineequation> define line <inlineequation>
							<mml:math>
								<mml:mi>n</mml:mi>
							</mml:math>
						</inlineequation>. The last line, however, is defined by vertices <inlineequation>
							<mml:math>
								<mml:mi>N</mml:mi>
							</mml:math>
						</inlineequation> and <inlineequation>
							<mml:math>
								<mml:mn>1</mml:mn>
							</mml:math>
						</inlineequation>. <inlineequation>
							<mml:math>
								<mml:mi>N</mml:mi>
							</mml:math>
						</inlineequation> lines are drawn.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_TRIANGLES</constant></term>
				<listitem>
					<simpara>
						Treats each triplet of vertices as an independent triangle. Vertices <inlineequation>
							<mml:math>
								<mml:mrow>
									<mml:mn>3</mml:mn>
									<mml:mi>n</mml:mi>
								</mml:mrow>
								<mml:mo>-</mml:mo>
								<mml:mn>2</mml:mn>
							</mml:math>
						</inlineequation>, <inlineequation>
							<mml:math>
								<mml:mrow>
									<mml:mo>3</mml:mo>
									<mml:mi>n</mml:mi>
								</mml:mrow>
								<mml:mo>-</mml:mo>
								<mml:mn>1</mml:mn>
							</mml:math>
						</inlineequation>, and <inlineequation>
							<mml:math>
								<mml:mo>3</mml:mo>
								<mml:mi>n</mml:mi>
							</mml:math>
						</inlineequation> define triangle <inlineequation>
							<mml:math>
								<mml:mi>n</mml:mi>
							</mml:math>
						</inlineequation>. <inlineequation>
							<mml:math>
								<mml:mrow>
									<mml:mi>N</mml:mi>
									<mml:mo>/</mml:mo>
									<mml:mn>3</mml:mn>
								</mml:mrow>
							</mml:math>
						</inlineequation> triangles are drawn.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_TRIANGLE_STRIP</constant></term>
				<listitem>
					<simpara>
						Draws a connected group of triangles. One triangle is defined for each vertex presented after the first two
						vertices. For odd <inlineequation>
							<mml:math>
								<mml:mi>n</mml:mi>
							</mml:math>
						</inlineequation>, vertices <inlineequation>
							<mml:math>
								<mml:mi>n</mml:mi>
							</mml:math>
						</inlineequation>, <inlineequation>
							<mml:math>
								<mml:mrow>
									<mml:mi>n</mml:mi>
									<mml:mo>+</mml:mo>
									<mml:mn>1</mml:mn>
								</mml:mrow>
							</mml:math>
						</inlineequation>, and <inlineequation>
							<mml:math>
								<mml:mrow>
									<mml:mi>n</mml:mi>
									<mml:mo>+</mml:mo>
									<mml:mn>2</mml:mn>
								</mml:mrow>
							</mml:math>
						</inlineequation> define triangle <inlineequation>
							<mml:math>
								<mml:mi>n</mml:mi>
							</mml:math>
						</inlineequation>. For even <inlineequation>
							<mml:math>
								<mml:mi>n</mml:mi>
							</mml:math>
						</inlineequation>, vertices <inlineequation>
							<mml:math>
								<mml:mrow>
									<mml:mi>n</mml:mi>
									<mml:mo>+</mml:mo>
									<mml:mn>1</mml:mn>
								</mml:mrow>
							</mml:math>
						</inlineequation>, <inlineequation>
							<mml:math>
								<mml:mi>n</mml:mi>
							</mml:math>
						</inlineequation>, and <inlineequation>
							<mml:math>
								<mml:mrow>
									<mml:mi>n</mml:mi>
									<mml:mo>+</mml:mo>
									<mml:mn>2</mml:mn>
								</mml:mrow>
							</mml:math>
						</inlineequation> define triangle <inlineequation>
							<mml:math>
								<mml:mi>n</mml:mi>
							</mml:math>
						</inlineequation>. <inlineequation>
							<mml:math>
								<mml:mrow>
									<mml:mi>N</mml:mi>
									<mml:mo>-</mml:mo>
									<mml:mn>2</mml:mn>
								</mml:mrow>
							</mml:math>
						</inlineequation> triangles are drawn.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_TRIANGLE_FAN</constant></term>
				<listitem>
					<simpara>
						Draws a connected group of triangles. One triangle is defined for each vertex presented after the first two
						vertices. Vertices <inlineequation>
							<mml:math>
								<mml:mn>1</mml:mn>
							</mml:math>
						</inlineequation>, <inlineequation>
							<mml:math>
								<mml:mrow>
									<mml:mi>n</mml:mi>
									<mml:mo>+</mml:mo>
									<mml:mn>1</mml:mn>
								</mml:mrow>
							</mml:math>
						</inlineequation>, and <inlineequation>
							<mml:math>
								<mml:mrow>
									<mml:mi>n</mml:mi>
									<mml:mo>+</mml:mo>
									<mml:mn>2</mml:mn>
								</mml:mrow>
							</mml:math>
						</inlineequation> define triangle <inlineequation>
							<mml:math>
								<mml:mi>n</mml:mi>
							</mml:math>
						</inlineequation>. <inlineequation>
							<mml:math>
								<mml:mrow>
									<mml:mi>N</mml:mi>
									<mml:mo>-</mml:mo>
									<mml:mn>2</mml:mn>
								</mml:mrow>
							</mml:math>
						</inlineequation> triangles are drawn.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_QUADS</constant></term>
				<listitem>
					<simpara>
						Treats each group of four vertices as an independent quadrilateral. Vertices <inlineequation>
							<mml:math>
								<mml:mrow>
									<mml:mo>4</mml:mo>
									<mml:mi>n</mml:mi>
								</mml:mrow>
								<mml:mo>-</mml:mo>
								<mml:mn>3</mml:mn>
							</mml:math>
						</inlineequation>, <inlineequation>
							<mml:math>
								<mml:mrow>
									<mml:mo>4</mml:mo>
									<mml:mi>n</mml:mi>
								</mml:mrow>
								<mml:mo>-</mml:mo>
								<mml:mn>2</mml:mn>
							</mml:math>
						</inlineequation>, <inlineequation>
							<mml:math>
								<mml:mrow>
									<mml:mo>4</mml:mo>
									<mml:mi>n</mml:mi>
								</mml:mrow>
								<mml:mo>-</mml:mo>
								<mml:mn>1</mml:mn>
							</mml:math>
						</inlineequation>, and <inlineequation>
							<mml:math>
								<mml:mo>4</mml:mo>
								<mml:mi>n</mml:mi>
							</mml:math>
						</inlineequation> define quadrilateral <inlineequation>
							<mml:math>
								<mml:mi>n</mml:mi>
							</mml:math>
						</inlineequation>. <inlineequation>
							<mml:math>
								<mml:mrow>
									<mml:mi>N</mml:mi>
									<mml:mo>/</mml:mo>
									<mml:mn>4</mml:mn>
								</mml:mrow>
							</mml:math>
						</inlineequation> quadrilaterals are drawn.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_QUAD_STRIP</constant></term>
				<listitem>
					<simpara>
						Draws a connected group of quadrilaterals. One quadrilateral is defined for each pair of vertices presented
						after the first pair. Vertices <inlineequation>
							<mml:math>
								<mml:mrow>
									<mml:mo>2</mml:mo>
									<mml:mi>n</mml:mi>
								</mml:mrow>
								<mml:mo>-</mml:mo>
								<mml:mn>1</mml:mn>
							</mml:math>
						</inlineequation>, <inlineequation>
							<mml:math>
								<mml:mo>2</mml:mo>
								<mml:mi>n</mml:mi>
							</mml:math>
						</inlineequation>, <inlineequation>
							<mml:math>
								<mml:mrow>
									<mml:mo>2</mml:mo>
									<mml:mi>n</mml:mi>
								</mml:mrow>
								<mml:mo>+</mml:mo>
								<mml:mn>2</mml:mn>
							</mml:math>
						</inlineequation>, and <inlineequation>
							<mml:math>
								<mml:mrow>
									<mml:mo>2</mml:mo>
									<mml:mi>n</mml:mi>
								</mml:mrow>
								<mml:mo>+</mml:mo>
								<mml:mn>1</mml:mn>
							</mml:math>
						</inlineequation> define quadrilateral <inlineequation>
							<mml:math>
								<mml:mi>n</mml:mi>
							</mml:math>
						</inlineequation>. <inlineequation>
							<mml:math>
								<mml:mrow>
									<mml:mi>N</mml:mi>
									<mml:mo>/</mml:mo>
									<mml:mn>2</mml:mn>
								</mml:mrow>
								<mml:mo>-</mml:mo>
								<mml:mn>1</mml:mn>
							</mml:math>
						</inlineequation> quadrilaterals are drawn. Note that the order in which vertices are used to construct a
						quadrilateral from strip data is different from that used with independent data.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_POLYGON</constant></term>
				<listitem>
					<simpara>
						Draws a single, convex polygon. Vertices <inlineequation>
							<mml:math>
								<mml:mn>1</mml:mn>
							</mml:math>
						</inlineequation> through <inlineequation>
							<mml:math>
								<mml:mi>N</mml:mi>
							</mml:math>
						</inlineequation> define this polygon.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
		<para>
			Only a subset of GL commands can be used between <function>glBegin</function> and <function>glEnd</function>. The
			commands are <function moreinfo="refentry">glVertex</function>, <function moreinfo="refentry">glColor</function>,
			<function moreinfo="refentry">glIndex</function>, <function moreinfo="refentry">glNormal</function>, <function
			moreinfo="refentry">glTexCoord</function>, <function moreinfo="refentry">glEvalCoord</function>, <function
			moreinfo="refentry">glEvalPoint</function>, <function moreinfo="refentry">glArrayElement</function>, <function
			moreinfo="refentry">glMaterial</function>, and <function moreinfo="refentry">glEdgeFlag</function>. Also, it is
			acceptable to use <function moreinfo="refentry">glCallList</function> or <function
			moreinfo="refentry">glCallLists</function> to execute display lists that include only the preceding commands. If any
			other GL command is executed between <function>glBegin</function> and <function>glEnd</function>, the error flag is set
			and the command is ignored.
		</para>
		<para>
			Regardless of the value chosen for <parameter>mode</parameter>, there is no limit to the number of vertices that can be
			defined between <function>glBegin</function> and <function>glEnd</function>. Lines, triangles, quadrilaterals, and
			polygons that are incompletely specified are not drawn. Incomplete specification results when either too few vertices
			are provided to specify even a single primitive or when an incorrect multiple of vertices is specified. The incomplete
			primitive is ignored; the rest are drawn.
		</para>
		<para>
			The minimum specification of vertices for each primitive is as follows: 1 for a point, 2 for a line, 3 for a triangle,
			4 for a quadrilateral, and 3 for a polygon. Modes that require a certain multiple of vertices are
			<constant>GL_LINES</constant> (2), <constant>GL_TRIANGLES</constant> (3), <constant>GL_QUADS</constant> (4), and
			<constant>GL_QUAD_STRIP</constant> (2).
		</para>
	</refsect1>
	<refsect1 id="glBegin.3G-errors">
		<title>Errors</title>
		<para>
			<constant>GL_INVALID_ENUM</constant> is generated if <parameter>mode</parameter> is set to an unaccepted value.
		</para>
		<para>
			<constant>GL_INVALID_OPERATION</constant> is generated if <function>glBegin</function> is executed between a
			<function>glBegin</function> and the corresponding execution of <function>glEnd</function>.
		</para>
		<para>
			<constant>GL_INVALID_OPERATION</constant> is generated if <function>glEnd</function> is executed without being preceded
			by a <function>glBegin</function>.
		</para>
		<para>
			<constant>GL_INVALID_OPERATION</constant> is generated if a command other than <function
			moreinfo="refentry">glVertex</function>, <function moreinfo="refentry">glColor</function>, <function
			moreinfo="refentry">glIndex</function>, <function moreinfo="refentry">glNormal</function>, <function
			moreinfo="refentry">glTexCoord</function>, <function moreinfo="refentry">glEvalCoord</function>, <function
			moreinfo="refentry">glEvalPoint</function>, <function moreinfo="refentry">glArrayElement</function>, <function
			moreinfo="refentry">glMaterial</function>, <function moreinfo="refentry">glEdgeFlag</function>, <function
			moreinfo="refentry">glCallList</function>, or <function moreinfo="refentry">glCallLists</function> is executed between
			the execution of <function>glBegin</function> and the corresponding execution <function>glEnd</function>.
		</para>
		<para>
			Execution of <function moreinfo="refentry">glEnableClientState</function>, <function
			moreinfo="refentry">glDisableClientState</function>, <function moreinfo="refentry">glEdgeFlagPointer</function>,
			<function moreinfo="refentry">glTexCoordPointer</function>, <function moreinfo="refentry">glColorPointer</function>,
			<function moreinfo="refentry">glIndexPointer</function>, <function moreinfo="refentry">glNormalPointer</function>,
		</para>
		<para>
			<function moreinfo="refentry">glVertexPointer</function>, <function moreinfo="refentry">glInterleavedArrays</function>,
			or <function moreinfo="refentry">glPixelStore</function> is not allowed after a call to <function>glBegin</function>
			and before the corresponding call to <function>glEnd</function>, but an error may or may not be generated.
		</para>
	</refsect1>
	<refsect1 id="glBegin.3G-see_also">
		<title>See Also</title>
		<para>
			<simplelist type="inline">
				<member><citerefentry>
					<refentrytitle>glArrayElement</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glCallList</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glCallLists</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glColor</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glEdgeFlag</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glEvalCoord</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glEvalPoint</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glIndex</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glMaterial</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glNormal</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexCoord</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glVertex</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
			</simplelist>
		</para>
	</refsect1>
</refentry>
