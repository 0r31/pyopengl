<refentry id="glLight.3G">
	<refmeta id="glLight.3G-meta">
		<refentrytitle>glLight</refentrytitle>
		<manvolnum>3G</manvolnum>
	</refmeta>
	<refnamediv id="glLight.3G-name">
		<refname>glLightf</refname>
		<refname>glLighti</refname>
		<refname>glLightfv</refname>
		<refname>glLightiv</refname>
		<refpurpose>set light source parameters</refpurpose>
	</refnamediv>
	<refsynopsisdiv id="glLight.3G-c_spec">
		<title>C Specification</title>
		<funcsynopsis>
			<funcprototype>
				<funcdef>void&nbsp;<function>glLightf</function></funcdef>
				<paramdef>GLenum&nbsp;<parameter>light</parameter></paramdef>
				<paramdef>GLenum&nbsp;<parameter>pname</parameter></paramdef>
				<paramdef>GLfloat&nbsp;<parameter>param</parameter></paramdef>
			</funcprototype>
			<funcprototype>
				<funcdef>void&nbsp;<function>glLighti</function></funcdef>
				<paramdef>GLenum&nbsp;<parameter>light</parameter></paramdef>
				<paramdef>GLenum&nbsp;<parameter>pname</parameter></paramdef>
				<paramdef>GLint&nbsp;<parameter>param</parameter></paramdef>
			</funcprototype>
		</funcsynopsis>
	</refsynopsisdiv>
	<refsect1 id="glLight.3G-parameters">
		<title>Parameters</title>
		<variablelist>
			<varlistentry>
				<term><parameter>light</parameter></term>
				<listitem>
					<simpara>
						Specifies a light. The number of lights depends on the implementation, but at least eight lights are
						supported. They are identified by symbolic names of the form <constant>GL_LIGHT</constant><inlineequation>
							<mml:math>
								<mml:mi>i</mml:mi>
							</mml:math>
						</inlineequation> where 0 &le; <inlineequation>
							<mml:math>
								<mml:mi>i</mml:mi>
							</mml:math>
						</inlineequation> &lt; <constant>GL_MAX_LIGHTS</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>pname</parameter></term>
				<listitem>
					<simpara>
						Specifies a single-valued light source parameter for <parameter>light</parameter>.
						<constant>GL_SPOT_EXPONENT</constant>, <constant>GL_SPOT_CUTOFF</constant>,
						<constant>GL_CONSTANT_ATTENUATION</constant>, <constant>GL_LINEAR_ATTENUATION</constant>, and
						<constant>GL_QUADRATIC_ATTENUATION</constant> are accepted.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>param</parameter></term>
				<listitem>
					<simpara>
						Specifies the value that parameter <parameter>pname</parameter> of light source
						<parameter>light</parameter> will be set to.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsect1>
	<refsynopsisdiv id="glLight.3G-c_spec-v">
		<title>C Specification</title>
		<funcsynopsis>
			<funcprototype>
				<funcdef>void&nbsp;<function>glLightfv</function></funcdef>
				<paramdef>GLenum&nbsp;<parameter>light</parameter></paramdef>
				<paramdef>GLenum&nbsp;<parameter>pname</parameter></paramdef>
				<paramdef>const&nbsp;GLfloat&nbsp;*<parameter>params</parameter></paramdef>
			</funcprototype>
			<funcprototype>
				<funcdef>void&nbsp;<function>glLightiv</function></funcdef>
				<paramdef>GLenum&nbsp;<parameter>light</parameter></paramdef>
				<paramdef>GLenum&nbsp;<parameter>pname</parameter></paramdef>
				<paramdef>const&nbsp;GLint&nbsp;*<parameter>params</parameter></paramdef>
			</funcprototype>
		</funcsynopsis>
	</refsynopsisdiv>
	<refsect1 id="glLight.3G-parameters-v">
		<title>Parameters</title>
		<variablelist>
			<varlistentry>
				<term><parameter>light</parameter></term>
				<listitem>
					<simpara>
						Specifies a light. The number of lights depends on the implementation, but at least eight lights are
						supported. They are identified by symbolic names of the form <constant>GL_LIGHT</constant><inlineequation>
							<mml:math>
								<mml:mi>i</mml:mi>
							</mml:math>
						</inlineequation> where 0 &le; <inlineequation>
							<mml:math>
								<mml:mi>i</mml:mi>
							</mml:math>
						</inlineequation> &lt; <constant>GL_MAX_LIGHTS</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>pname</parameter></term>
				<listitem>
					<simpara>
						Specifies a light source parameter for <parameter>light</parameter>. <constant>GL_AMBIENT</constant>,
						<constant>GL_DIFFUSE</constant>, <constant>GL_SPECULAR</constant>, <constant>GL_POSITION</constant>,
						<constant>GL_SPOT_CUTOFF</constant>, <constant>GL_SPOT_DIRECTION</constant>,
						<constant>GL_SPOT_EXPONENT</constant>, <constant>GL_CONSTANT_ATTENUATION</constant>,
						<constant>GL_LINEAR_ATTENUATION</constant>, and <constant>GL_QUADRATIC_ATTENUATION</constant> are accepted.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>params</parameter></term>
				<listitem>
					<simpara>
						Specifies a pointer to the value or values that parameter <parameter>pname</parameter> of light source
						<parameter>light</parameter> will be set to.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsect1>
	<refsect1 id="glLight.3G-description">
		<title>Description</title>
		<para>
			<function moreinfo="refentry">glLight</function> sets the values of individual light source parameters.
			<parameter>light</parameter> names the light and is a symbolic name of the form
			<constant>GL_LIGHT</constant><inlineequation>
				<mml:math>
					<mml:mi>i</mml:mi>
				</mml:math>
			</inlineequation>, where 0 &le; i &lt; <constant>GL_MAX_LIGHTS</constant>. <parameter>pname</parameter> specifies one
			of ten light source parameters, again by symbolic name. <parameter>params</parameter> is either a single value or a
			pointer to an array that contains the new values.
		</para>
		<para>
			To enable and disable lighting calculation, call <function moreinfo="refentry">glEnable</function> and <function
			moreinfo="refentry">glDisable</function> with argument <constant>GL_LIGHTING</constant>. Lighting is initially
			disabled. When it is enabled, light sources that are enabled contribute to the lighting calculation. Light source
			<inlineequation>
				<mml:math>
					<mml:mi>i</mml:mi>
				</mml:math>
			</inlineequation> is enabled and disabled using <function moreinfo="refentry">glEnable</function> and <function
			moreinfo="refentry">glDisable</function> with argument <constant>GL_LIGHT</constant><inlineequation>
				<mml:math>
					<mml:mi>i</mml:mi>
				</mml:math>
			</inlineequation>.
		</para>
		<para>
			The ten light parameters are as follows:
		</para>
		<variablelist>
			<varlistentry>
				<term><constant>GL_AMBIENT</constant></term>
				<listitem>
					<simpara>
						<parameter>params</parameter> contains four integer or floating-point values that specify the ambient RGBA
						intensity of the light. Integer values are mapped linearly such that the most positive representable value
						maps to 1.0, and the most negative representable value maps to -1.0. Floating-point values are mapped
						directly. Neither integer nor floating-point values are clamped. The initial ambient light intensity is (0,
						0, 0, 1).
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_DIFFUSE</constant></term>
				<listitem>
					<simpara>
						<parameter>params</parameter> contains four integer or floating-point values that specify the diffuse RGBA
						intensity of the light. Integer values are mapped linearly such that the most positive representable value
						maps to 1.0, and the most negative representable value maps to -1.0. Floating-point values are mapped
						directly. Neither integer nor floating-point values are clamped. The initial value for
						<constant>GL_LIGHT0</constant> is (1, 1, 1, 1); for other lights, the initial value is (0, 0, 0, 0).
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_SPECULAR</constant></term>
				<listitem>
					<simpara>
						<parameter>params</parameter> contains four integer or floating-point values that specify the specular RGBA
						intensity of the light. Integer values are mapped linearly such that the most positive representable value
						maps to 1.0, and the most negative representable value maps to -1.0. Floating-point values are mapped
						directly. Neither integer nor floating-point values are clamped. The initial value for
						<constant>GL_LIGHT0</constant> is (1, 1, 1, 1); for other lights, the initial value is (0, 0, 0, 0).
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_POSITION</constant></term>
				<listitem>
					<simpara>
						<parameter>params</parameter> contains four integer or floating-point values that specify the position of
						the light in homogeneous object coordinates. Both integer and floating-point values are mapped directly.
						Neither integer nor floating-point values are clamped.
					</simpara>
					<simpara>
						The position is transformed by the modelview matrix when <function moreinfo="refentry">glLight</function>
						is called (just as if it were a point), and it is stored in eye coordinates. If the <inlineequation>
							<mml:math>
								<mml:mi>w</mml:mi>
							</mml:math>
						</inlineequation> component of the position is 0, the light is treated as a directional source. Diffuse and
						specular lighting calculations take the light's direction, but not its actual position, into account, and
						attenuation is disabled. Otherwise, diffuse and specular lighting calculations are based on the actual
						location of the light in eye coordinates, and attenuation is enabled. The initial position is (0, 0, 1, 0);
						thus, the initial light source is directional, parallel to, and in the direction of the <inlineequation>
							<mml:math>
								<mml:mo>-z</mml:mo>
							</mml:math>
						</inlineequation> axis.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_SPOT_DIRECTION</constant></term>
				<listitem>
					<simpara>
						<parameter>params</parameter> contains three integer or floating-point values that specify the direction of
						the light in homogeneous object coordinates. Both integer and floating-point values are mapped directly.
						Neither integer nor floating-point values are clamped.
					</simpara>
					<simpara>
						The spot direction is transformed by the inverse of the modelview matrix when <function
						moreinfo="refentry">glLight</function> is called (just as if it were a normal), and it is stored in eye
						coordinates. It is significant only when <constant>GL_SPOT_CUTOFF</constant> is not 180, which it is
						initially. The initial direction is (0, 0, -1).
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_SPOT_EXPONENT</constant></term>
				<listitem>
					<simpara>
						<parameter>params</parameter> is a single integer or floating-point value that specifies the intensity
						distribution of the light. Integer and floating-point values are mapped directly. Only values in the range
						[0,128] are accepted.
					</simpara>
					<simpara>
						Effective light intensity is attenuated by the cosine of the angle between the direction of the light and
						the direction from the light to the vertex being lighted, raised to the power of the spot exponent. Thus,
						higher spot exponents result in a more focused light source, regardless of the spot cutoff angle (see
						<constant>GL_SPOT_CUTOFF</constant>, next paragraph). The initial spot exponent is 0, resulting in uniform
						light distribution.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_SPOT_CUTOFF</constant></term>
				<listitem>
					<simpara>
						<parameter>params</parameter> is a single integer or floating-point value that specifies the maximum spread
						angle of a light source. Integer and floating-point values are mapped directly. Only values in the range
						[0,90] and the special value 180 are accepted. If the angle between the direction of the light and the
						direction from the light to the vertex being lighted is greater than the spot cutoff angle, the light is
						completely masked. Otherwise, its intensity is controlled by the spot exponent and the attenuation factors.
						The initial spot cutoff is 180, resulting in uniform light distribution.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_LINEAR_ATTENUATION</constant></term>
				<term><constant>GL_QUADRATIC_ATTENUATION</constant></term>
				<term><constant>GL_CONSTANT_ATTENUATION</constant></term>
				<listitem>
					<simpara>
						<parameter>params</parameter> is a single integer or floating-point value that specifies one of the three
						light attenuation factors. Integer and floating-point values are mapped directly. Only nonnegative values
						are accepted. If the light is positional, rather than directional, its intensity is attenuated by the
						reciprocal of the sum of the constant factor, the linear factor times the distance between the light and
						the vertex being lighted, and the quadratic factor times the square of the same distance. The initial
						attenuation factors are (1, 0, 0), resulting in no attenuation.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsect1>
	<refsect1 id="glLight.3G-notes">
		<title>Notes</title>
		<para>
			It is always the case that <constant>GL_LIGHT</constant><inlineequation>
				<mml:math>
					<mml:mi>i</mml:mi>
				</mml:math>
			</inlineequation> = <constant>GL_LIGHT0</constant> + <inlineequation>
				<mml:math>
					<mml:mi>i</mml:mi>
				</mml:math>
			</inlineequation>.
		</para>
	</refsect1>
	<refsect1 id="glLight.3G-errors">
		<title>Errors</title>
		<para>
			<constant>GL_INVALID_ENUM</constant> is generated if either <parameter>light</parameter> or
			<parameter>pname</parameter> is not an accepted value.
		</para>
		<para>
			<constant>GL_INVALID_VALUE</constant> is generated if a spot exponent value is specified outside the range [0,128], or
			if spot cutoff is specified outside the range [0,90] (except for the special value 180), or if a negative attenuation
			factor is specified.
		</para>
		<para>
			<constant>GL_INVALID_OPERATION</constant> is generated if <function moreinfo="refentry">glLight</function> is executed
			between the execution of <function moreinfo="refentry">glBegin</function> and the corresponding execution of <function
			moreinfo="refentry">glEnd</function>.
		</para>
	</refsect1>
	<refsect1 id="glLight.3G-associated_gets">
		<title>Associated Gets</title>
		<para>
			<function moreinfo="refentry">glGetLight</function>
		</para>
		<para>
			<function moreinfo="refentry">glIsEnabled</function> with argument <constant>GL_LIGHTING</constant>
		</para>
	</refsect1>
	<refsect1 id="glLight.3G-see_also">
		<title>See Also</title>
		<para>
			<simplelist type="inline">
				<member><citerefentry>
					<refentrytitle>glColorMaterial</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glLightModel</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glMaterial</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
			</simplelist>
		</para>
	</refsect1>
</refentry>
