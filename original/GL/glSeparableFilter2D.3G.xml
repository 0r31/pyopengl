<refentry id="glSeparableFilter2D.3G">
	<refmeta id="glSeparableFilter2D.3G-meta">
		<refentrytitle>glSeparableFilter2D</refentrytitle>
		<manvolnum>3G</manvolnum>
	</refmeta>
	<refnamediv id="glSeparableFilter2D.3G-name">
		<refname>glSeparableFilter2D</refname>
		<refpurpose>define a separable two-dimensional convolution filter</refpurpose>
	</refnamediv>
	<refsynopsisdiv id="glSeparableFilter2D.3G-c_spec">
		<title>C Specification</title>
		<funcsynopsis>
			<funcprototype>
				<funcdef>void&nbsp;<function>glSeparableFilter2D</function></funcdef>
				<paramdef>GLenum&nbsp;<parameter>target</parameter></paramdef>
				<paramdef>GLenum&nbsp;<parameter>internalformat</parameter></paramdef>
				<paramdef>GLsizei&nbsp;<parameter>width</parameter></paramdef>
				<paramdef>GLsizei&nbsp;<parameter>height</parameter></paramdef>
				<paramdef>GLenum&nbsp;<parameter>format</parameter></paramdef>
				<paramdef>GLenum&nbsp;<parameter>type</parameter></paramdef>
				<paramdef>const&nbsp;GLvoid&nbsp;*<parameter>row</parameter></paramdef>
				<paramdef>const&nbsp;GLvoid&nbsp;*<parameter>column</parameter></paramdef>
			</funcprototype>
		</funcsynopsis>
	</refsynopsisdiv>
	<refsect1 id="glSeparableFilter2D.3G-parameters">
		<title>Parameters</title>
		<variablelist>
			<varlistentry>
				<term><parameter>target</parameter></term>
				<listitem>
					<simpara>
						Must be <constant>GL_SEPARABLE_2D</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>internalformat</parameter></term>
				<listitem>
					<simpara>
						The internal of the convolution filter kernel. The allowable values are <constant>GL_ALPHA</constant>,
						<constant>GL_ALPHA4</constant>, <constant>GL_ALPHA8</constant>, <constant>GL_ALPHA12</constant>,
						<constant>GL_ALPHA16</constant>, <constant>GL_LUMINANCE</constant>, <constant>GL_LUMINANCE4</constant>,
						<constant>GL_LUMINANCE8</constant>, <constant>GL_LUMINANCE12</constant>,
						<constant>GL_LUMINANCE16</constant>, <constant>GL_LUMINANCE_ALPHA</constant>,
						<constant>GL_LUMINANCE4_ALPHA4</constant>, <constant>GL_LUMINANCE6_ALPHA2</constant>,
						<constant>GL_LUMINANCE8_ALPHA8</constant>, <constant>GL_LUMINANCE12_ALPHA4</constant>,
						<constant>GL_LUMINANCE12_ALPHA12</constant>, <constant>GL_LUMINANCE16_ALPHA16</constant>,
						<constant>GL_INTENSITY</constant>, <constant>GL_INTENSITY4</constant>, <constant>GL_INTENSITY8</constant>,
						<constant>GL_INTENSITY12</constant>, <constant>GL_INTENSITY16</constant>, <constant>GL_R3_G3_B2</constant>,
						<constant>GL_RGB</constant>, <constant>GL_RGB4</constant>, <constant>GL_RGB5</constant>,
						<constant>GL_RGB8</constant>, <constant>GL_RGB10</constant>, <constant>GL_RGB12</constant>,
						<constant>GL_RGB16</constant>, <constant>GL_RGBA</constant>, <constant>GL_RGBA2</constant>,
						<constant>GL_RGBA4</constant>, <constant>GL_RGB5_A1</constant>, <constant>GL_RGBA8</constant>,
						<constant>GL_RGB10_A2</constant>, <constant>GL_RGBA12</constant>, or <constant>GL_RGBA16</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>width</parameter></term>
				<listitem>
					<simpara>
						The number of elements in the pixel array referenced by <parameter>row</parameter>. (This is the width of
						the separable filter kernel.)
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>height</parameter></term>
				<listitem>
					<simpara>
						The number of elements in the pixel array referenced by <parameter>column</parameter>. (This is the height
						of the separable filter kernel.)
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>format</parameter></term>
				<listitem>
					<simpara>
						The of the pixel data in <parameter>row</parameter> and <parameter>column</parameter>. The allowable values
						are <constant>GL_RED</constant>, <constant>GL_GREEN</constant>, <constant>GL_BLUE</constant>,
						<constant>GL_ALPHA</constant>, <constant>GL_RGB</constant>, <constant>GL_BGR</constant>,
						<constant>GL_RGBA</constant>, <constant>GL_BGRA</constant>, <constant>GL_INTENSITY</constant>,
						<constant>GL_LUMINANCE</constant>, and <constant>GL_LUMINANCE_ALPHA</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>type</parameter></term>
				<listitem>
					<simpara>
						The type of the pixel data in <parameter>row</parameter> and <parameter>column</parameter>. Symbolic
						constants <constant>GL_UNSIGNED_BYTE</constant>, <constant>GL_BYTE</constant>,
						<constant>GL_BITMAP</constant>, <constant>GL_UNSIGNED_SHORT</constant>, <constant>GL_SHORT</constant>,
						<constant>GL_UNSIGNED_INT</constant>, <constant>GL_INT</constant>, <constant>GL_FLOAT</constant>,
						<constant>GL_UNSIGNED_BYTE_3_3_2</constant>, <constant>GL_UNSIGNED_BYTE_2_3_3_REV</constant>,
						<constant>GL_UNSIGNED_SHORT_5_6_5</constant>, <constant>GL_UNSIGNED_SHORT_5_6_5_REV</constant>,
						<constant>GL_UNSIGNED_SHORT_4_4_4_4</constant>, <constant>GL_UNSIGNED_SHORT_4_4_4_4_REV</constant>,
						<constant>GL_UNSIGNED_SHORT_5_5_5_1</constant>, <constant>GL_UNSIGNED_SHORT_1_5_5_5_REV</constant>,
						<constant>GL_UNSIGNED_INT_8_8_8_8</constant>, <constant>GL_UNSIGNED_INT_8_8_8_8_REV</constant>,
						<constant>GL_UNSIGNED_INT_10_10_10_2</constant>, and <constant>GL_UNSIGNED_INT_2_10_10_10_REV</constant>
						are accepted.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>row</parameter></term>
				<listitem>
					<simpara>
						Pointer to a one-dimensional array of pixel data that is processed to build the row filter kernel.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>column</parameter></term>
				<listitem>
					<simpara>
						Pointer to a one-dimensional array of pixel data that is processed to build the column filter kernel.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsect1>
	<refsect1 id="glSeparableFilter2D.3G-description">
		<title>Description</title>
		<para>
			<function>glSeparableFilter2D</function> builds a two-dimensional separable convolution filter kernel from two arrays
			of pixels. The pixel arrays specified by (<parameter>width</parameter>, <parameter>format</parameter>,
			<parameter>type</parameter>, <parameter>row</parameter>) and (<parameter>height</parameter>,
			<parameter>format</parameter>, <parameter>type</parameter>, <parameter>column</parameter>) are processed just as if
			they had been passed to <function moreinfo="refentry">glDrawPixels</function>, but processing stops after the final
			expansion to RGBA is completed. Next, the R, G, B, and A components of all pixels in both arrays are scaled by the four
			separable 2D <constant>GL_CONVOLUTION_FILTER_SCALE</constant> parameters and biased by the four separable 2D
			<constant>GL_CONVOLUTION_FILTER_BIAS</constant> parameters. (The scale and bias parameters are set by <function
			moreinfo="refentry">glConvolutionParameter</function> using the <constant>GL_SEPARABLE_2D</constant> target and the
			names <constant>GL_CONVOLUTION_FILTER_SCALE</constant> and <constant>GL_CONVOLUTION_FILTER_BIAS</constant>. The
			parameters themselves are vectors of four values that are applied to red, green, blue, and alpha, in that order.) The
			R, G, B, and A values are not clamped to [0,1] at any time during this process. Each pixel is then converted to the
			internal specified by <parameter>internalformat</parameter>. This conversion simply maps the component values of the
			pixel (R, G, B, and A) to the values included in the internal (red, green, blue, alpha, luminance, and intensity). The
			mapping is as follows:
		</para>
		<informaltable frame="topbot">
			<tgroup cols="7">
				<tbody>
					<row>
						<entry>Internal Format</entry>
						<entry align="center">Red</entry>
						<entry align="center">Green</entry>
						<entry align="center">Blue</entry>
						<entry align="center">Alpha</entry>
						<entry align="center">Luminance</entry>
						<entry align="center">Intensity</entry>
					</row>
					<row>
						<entry><constant>GL_LUMINANCE</constant></entry>
						<entry align="center"/>
						<entry align="center"/>
						<entry align="center"/>
						<entry align="center"/>
						<entry align="center">R</entry>
						<entry align="center"/>
					</row>
					<row>
						<entry><constant>GL_LUMINANCE_ALPHA</constant></entry>
						<entry align="center"/>
						<entry align="center"/>
						<entry align="center"/>
						<entry align="center">A</entry>
						<entry align="center">R</entry>
						<entry align="center"/>
					</row>
					<row>
						<entry><constant>GL_INTENSITY</constant></entry>
						<entry align="center"/>
						<entry align="center"/>
						<entry align="center"/>
						<entry align="center"/>
						<entry align="center"/>
						<entry align="center">R</entry>
					</row>
					<row>
						<entry><constant>GL_RGB</constant></entry>
						<entry align="center">R</entry>
						<entry align="center">G</entry>
						<entry align="center">B</entry>
						<entry align="center"/>
						<entry align="center"/>
						<entry align="center"/>
					</row>
					<row>
						<entry><constant>GL_RGBA</constant></entry>
						<entry align="center">R</entry>
						<entry align="center">G</entry>
						<entry align="center">B</entry>
						<entry align="center">A</entry>
						<entry align="center"/>
						<entry align="center"/>
					</row>
				</tbody>
			</tgroup>
		</informaltable>
		<para>
			The red, green, blue, alpha, luminance, and/or intensity components of the resulting pixels are stored in
			floating-point rather than integer They form two one-dimensional filter kernel images. The row image is indexed by
			coordinate <parameter>i</parameter> starting at zero and increasing from left to right. Each location in the row image
			is derived from element <parameter>i</parameter> of <parameter>row</parameter>. The column image is indexed by
			coordinate <parameter>j</parameter> starting at zero and increasing from bottom to top. Each location in the column
			image is derived from element <parameter>j</parameter> of <parameter>column</parameter>.
		</para>
		<para>
			Note that after a convolution is performed, the resulting color components are also scaled by their corresponding
			<constant>GL_POST_CONVOLUTION_c_SCALE</constant> parameters and biased by their corresponding
			<constant>GL_POST_CONVOLUTION_c_BIAS</constant> parameters (where <parameter>c</parameter> takes on the values
			<emphasis role="bold">RED</emphasis>, <emphasis role="bold">GREEN</emphasis>, <emphasis role="bold">BLUE</emphasis>,
			and <emphasis role="bold">ALPHA</emphasis>). These parameters are set by <function
			moreinfo="refentry">glPixelTransfer</function>.
		</para>
	</refsect1>
	<refsect1 id="glSeparableFilter2D.3G-notes">
		<title>Notes</title>
		<para>
			<function>glSeparableFilter2D</function> is present only if <constant>GL_ARB_imaging</constant> is returned when
			<function moreinfo="refentry">glGetString</function> is called with an argument of <constant>GL_EXTENSIONS</constant>.
		</para>
	</refsect1>
	<refsect1 id="glSeparableFilter2D.3G-errors">
		<title>Errors</title>
		<para>
			<constant>GL_INVALID_ENUM</constant> is generated if <parameter>target</parameter> is not
			<constant>GL_SEPARABLE_2D</constant>.
		</para>
		<para>
			<constant>GL_INVALID_ENUM</constant> is generated if <parameter>internalformat</parameter> is not one of the allowable
			values.
		</para>
		<para>
			<constant>GL_INVALID_VALUE</constant> is generated if <parameter>width</parameter> is less than zero or greater than
			the maximum supported value. This value may be queried with <function
			moreinfo="refentry">glGetConvolutionParameter</function> using target <constant>GL_SEPARABLE_2D</constant> and name
			<constant>GL_MAX_CONVOLUTION_WIDTH</constant>.
		</para>
		<para>
			<constant>GL_INVALID_VALUE</constant> is generated if <parameter>height</parameter> is less than zero or greater than
			the maximum supported value. This value may be queried with <function
			moreinfo="refentry">glGetConvolutionParameter</function> using target <constant>GL_SEPARABLE_2D</constant> and name
			<constant>GL_MAX_CONVOLUTION_HEIGHT</constant>.
		</para>
		<para>
			<constant>GL_INVALID_ENUM</constant> is generated if <parameter>format</parameter> is not one of the allowable values.
		</para>
		<para>
			<constant>GL_INVALID_ENUM</constant> is generated if <parameter>type</parameter> is not one of the allowable values.
		</para>
		<para>
			<constant>GL_INVALID_OPERATION</constant> is generated if <function>glSeparableFilter2D</function> is executed between
			the execution of <function moreinfo="refentry">glBegin</function> and the corresponding execution of <function
			moreinfo="refentry">glEnd</function>.
		</para>
		<para>
			<constant>GL_INVALID_OPERATION</constant> is generated if <parameter>height</parameter> is one of
			<constant>GL_UNSIGNED_BYTE_3_3_2</constant>, <constant>GL_UNSIGNED_BYTE_2_3_3_REV</constant>,
			<constant>GL_UNSIGNED_SHORT_5_6_5</constant>, or <constant>GL_UNSIGNED_SHORT_5_6_5_REV</constant> and
			<parameter>format</parameter> is not <constant>GL_RGB</constant>.
		</para>
		<para>
			<constant>GL_INVALID_OPERATION</constant> is generated if <parameter>height</parameter> is one of
			<constant>GL_UNSIGNED_SHORT_4_4_4_4</constant>, <constant>GL_UNSIGNED_SHORT_4_4_4_4_REV</constant>,
			<constant>GL_UNSIGNED_SHORT_5_5_5_1</constant>, <constant>GL_UNSIGNED_SHORT_1_5_5_5_REV</constant>,
			<constant>GL_UNSIGNED_INT_8_8_8_8</constant>, <constant>GL_UNSIGNED_INT_8_8_8_8_REV</constant>,
			<constant>GL_UNSIGNED_INT_10_10_10_2</constant>, or <constant>GL_UNSIGNED_INT_2_10_10_10_REV</constant> and
			<parameter>format</parameter> is neither <constant>GL_RGBA</constant> nor <constant>GL_BGRA</constant>.
		</para>
	</refsect1>
	<refsect1 id="glSeparableFilter2D.3G-associated_gets">
		<title>Associated Gets</title>
		<para>
			<function moreinfo="refentry">glGetConvolutionParameter</function>, <function
			moreinfo="refentry">glGetSeparableFilter</function>
		</para>
	</refsect1>
	<refsect1 id="glSeparableFilter2D.3G-see_also">
		<title>See Also</title>
		<para>
			<simplelist type="inline">
				<member><citerefentry>
					<refentrytitle>glConvolutionFilter1D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glConvolutionFilter2D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glConvolutionParameter</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glPixelTransfer</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
			</simplelist>
		</para>
	</refsect1>
</refentry>
