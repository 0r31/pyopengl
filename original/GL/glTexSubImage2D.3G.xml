<refentry id="glTexSubImage2D.3G">
	<refmeta id="glTexSubImage2D.3G-meta">
		<refentrytitle>glTexSubImage2D</refentrytitle>
		<manvolnum>3G</manvolnum>
	</refmeta>
	<refnamediv id="glTexSubImage2D.3G-name">
		<refname>glTexSubImage2D</refname>
		<refpurpose>specify a two-dimensional texture subimage</refpurpose>
	</refnamediv>
	<refsynopsisdiv id="glTexSubImage2D.3G-c_spec">
		<title>C Specification</title>
		<funcsynopsis>
			<funcprototype>
				<funcdef>void&nbsp;<function>glTexSubImage2D</function></funcdef>
				<paramdef>GLenum&nbsp;<parameter>target</parameter></paramdef>
				<paramdef>GLint&nbsp;<parameter>level</parameter></paramdef>
				<paramdef>GLint&nbsp;<parameter>xoffset</parameter></paramdef>
				<paramdef>GLint&nbsp;<parameter>yoffset</parameter></paramdef>
				<paramdef>GLsizei&nbsp;<parameter>width</parameter></paramdef>
				<paramdef>GLsizei&nbsp;<parameter>height</parameter></paramdef>
				<paramdef>GLenum&nbsp;<parameter>format</parameter></paramdef>
				<paramdef>GLenum&nbsp;<parameter>type</parameter></paramdef>
				<paramdef>const&nbsp;GLvoid&nbsp;*<parameter>pixels</parameter></paramdef>
			</funcprototype>
		</funcsynopsis>
	</refsynopsisdiv>
	<refsect1 id="glTexSubImage2D.3G-parameters">
		<title>Parameters</title>
		<variablelist>
			<varlistentry>
				<term><parameter>target</parameter></term>
				<listitem>
					<simpara>
						Specifies the target texture. Must be <constant>GL_TEXTURE_2D</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>level</parameter></term>
				<listitem>
					<simpara>
						Specifies the level-of-detail number. Level 0 is the base image level. Level <emphasis>n</emphasis> is the
						<emphasis>n</emphasis>th mipmap reduction image.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>xoffset</parameter></term>
				<listitem>
					<simpara>
						Specifies a texel offset in the x direction within the texture array.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>yoffset</parameter></term>
				<listitem>
					<simpara>
						Specifies a texel offset in the y direction within the texture array.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>width</parameter></term>
				<listitem>
					<simpara>
						Specifies the width of the texture subimage.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>height</parameter></term>
				<listitem>
					<simpara>
						Specifies the height of the texture subimage.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>format</parameter></term>
				<listitem>
					<simpara>
						Specifies the of the pixel data. The following symbolic values are accepted:
						<constant>GL_COLOR_INDEX</constant>, <constant>GL_RED</constant>, <constant>GL_GREEN</constant>,
						<constant>GL_BLUE</constant>, <constant>GL_ALPHA</constant>, <constant>GL_RGB</constant>,
						<constant>GL_BGR</constant>, <constant>GL_RGBA</constant>, <constant>GL_BGRA</constant>,
						<constant>GL_LUMINANCE</constant>, and <constant>GL_LUMINANCE_ALPHA</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>type</parameter></term>
				<listitem>
					<simpara>
						Specifies the data type of the pixel data. The following symbolic values are accepted:
						<constant>GL_UNSIGNED_BYTE</constant>, <constant>GL_BYTE</constant>, <constant>GL_BITMAP</constant>,
						<constant>GL_UNSIGNED_SHORT</constant>, <constant>GL_SHORT</constant>,
						<constant>GL_UNSIGNED_INT</constant>, <constant>GL_INT</constant>, <constant>GL_FLOAT</constant>,
						<constant>GL_UNSIGNED_BYTE_3_3_2</constant>, <constant>GL_UNSIGNED_BYTE_2_3_3_REV</constant>,
						<constant>GL_UNSIGNED_SHORT_5_6_5</constant>, <constant>GL_UNSIGNED_SHORT_5_6_5_REV</constant>,
						<constant>GL_UNSIGNED_SHORT_4_4_4_4</constant>, <constant>GL_UNSIGNED_SHORT_4_4_4_4_REV</constant>,
						<constant>GL_UNSIGNED_SHORT_5_5_5_1</constant>, <constant>GL_UNSIGNED_SHORT_1_5_5_5_REV</constant>,
						<constant>GL_UNSIGNED_INT_8_8_8_8</constant>, <constant>GL_UNSIGNED_INT_8_8_8_8_REV</constant>,
						<constant>GL_UNSIGNED_INT_10_10_10_2</constant>, and <constant>GL_UNSIGNED_INT_2_10_10_10_REV</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>pixels</parameter></term>
				<listitem>
					<simpara>
						Specifies a pointer to the image data in memory.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsect1>
	<refsect1 id="glTexSubImage2D.3G-description">
		<title>Description</title>
		<para>
			Texturing maps a portion of a specified texture image onto each graphical primitive for which texturing is enabled. To
			enable and disable two-dimensional texturing, call <function moreinfo="refentry">glEnable</function> and <function
			moreinfo="refentry">glDisable</function> with argument <constant>GL_TEXTURE_2D</constant>.
		</para>
		<para>
			<function>glTexSubImage2D</function> redefines a contiguous subregion of an existing two-dimensional texture image. The
			texels referenced by <parameter>pixels</parameter> replace the portion of the existing texture array with x indices
			<parameter>xoffset</parameter> and <inlineequation>
				<mml:math>
					<mml:mrow>
						<mml:mi>xoffset</mml:mi>
						<mml:mo>+</mml:mo>
						<mml:mi>width</mml:mi>
						<mml:mo>-</mml:mo>
						<mml:mn>1</mml:mn>
					</mml:mrow>
				</mml:math>
			</inlineequation>, inclusive, and y indices <parameter>yoffset</parameter> and <inlineequation>
				<mml:math>
					<mml:mrow>
						<mml:mi>yoffset</mml:mi>
						<mml:mo>+</mml:mo>
						<mml:mi>height</mml:mi>
						<mml:mo>-</mml:mo>
						<mml:mn>1</mml:mn>
					</mml:mrow>
				</mml:math>
			</inlineequation>, inclusive. This region may not include any texels outside the range of the texture array as it was
			originally specified. It is not an error to specify a subtexture with zero width or height, but such a specification
			has no effect.
		</para>
	</refsect1>
	<refsect1 id="glTexSubImage2D.3G-notes">
		<title>Notes</title>
		<para>
			<function>glTexSubImage2D</function> is available only if the GL version is 1.1 or greater.
		</para>
		<para>
			Texturing has no effect in color index mode.
		</para>
		<para>
			<function moreinfo="refentry">glPixelStore</function> and <function moreinfo="refentry">glPixelTransfer</function>
			modes affect texture images in exactly the way they affect <function moreinfo="refentry">glDrawPixels</function>.
		</para>
		<para>
			Formats <constant>GL_BGR</constant>, and <constant>GL_BGRA</constant> and types
			<constant>GL_UNSIGNED_BYTE_3_3_2</constant>, <constant>GL_UNSIGNED_BYTE_2_3_3_REV</constant>,
			<constant>GL_UNSIGNED_SHORT_5_6_5</constant>, <constant>GL_UNSIGNED_SHORT_5_6_5_REV</constant>,
			<constant>GL_UNSIGNED_SHORT_4_4_4_4</constant>, <constant>GL_UNSIGNED_SHORT_4_4_4_4_REV</constant>,
			<constant>GL_UNSIGNED_SHORT_5_5_5_1</constant>, <constant>GL_UNSIGNED_SHORT_1_5_5_5_REV</constant>,
			<constant>GL_UNSIGNED_INT_8_8_8_8</constant>, <constant>GL_UNSIGNED_INT_8_8_8_8_REV</constant>,
			<constant>GL_UNSIGNED_INT_10_10_10_2</constant>, and <constant>GL_UNSIGNED_INT_2_10_10_10_REV</constant> are available
			only if the GL version is 1.2 or greater.
		</para>
		<para>
			When the <constant>GL_ARB_multitexture</constant> extension is supported, <function>glTexSubImage2D</function>
			specifies a two-dimensional sub texture for the current texture unit, specified with <function
			moreinfo="refentry">glActiveTextureARB</function>.
		</para>
		<para>
			When the <constant>GL_ARB_imaging</constant> extension is supported, the RGBA components specified in
			<parameter>pixels</parameter> may be processed by the imaging pipeline. See <function
			moreinfo="refentry">glTexImage1D</function> for specific details.
		</para>
	</refsect1>
	<refsect1 id="glTexSubImage2D.3G-errors">
		<title>Errors</title>
		<para>
			<constant>GL_INVALID_ENUM</constant> is generated if <parameter>target</parameter> is not
			<constant>GL_TEXTURE_2D</constant>.
		</para>
		<para>
			<constant>GL_INVALID_OPERATION</constant> is generated if the texture array has not been defined by a previous
			<function moreinfo="refentry">glTexImage2D</function> operation.
		</para>
		<para>
			<constant>GL_INVALID_VALUE</constant> is generated if <parameter>level</parameter> is less than 0.
		</para>
		<para>
			<constant>GL_INVALID_VALUE</constant> may be generated if <parameter>level</parameter> is greater than <inlineequation>
				<mml:math>
					<mml:msub>
						<mml:mo>log</mml:mo>
						<mml:mn>2</mml:mn>
					</mml:msub>
				</mml:math>
			</inlineequation><parameter>max</parameter>, where <parameter>max</parameter> is the returned value of
			<constant>GL_MAX_TEXTURE_SIZE</constant>.
		</para>
		<para>
			<constant>GL_INVALID_VALUE</constant> is generated if <inlineequation>
				<mml:math>
					<mml:mrow>
						<mml:mi>xoffset</mml:mi>
						<mml:mo>&lt;</mml:mo>
						<mml:mo>-b</mml:mo>
					</mml:mrow>
				</mml:math>
			</inlineequation>, <inlineequation>
				<mml:math>
					<mml:mfenced>
						<mml:mrow>
							<mml:mi>xoffset</mml:mi>
							<mml:mo>+</mml:mo>
							<mml:mi>width</mml:mi>
						</mml:mrow>
					</mml:mfenced>
					<mml:mo>&gt;</mml:mo>
					<mml:mfenced>
						<mml:mrow>
							<mml:mi>w</mml:mi>
							<mml:mo>-</mml:mo>
							<mml:mi>b</mml:mi>
						</mml:mrow>
					</mml:mfenced>
				</mml:math>
			</inlineequation>, <inlineequation>
				<mml:math>
					<mml:mrow>
						<mml:mi>yoffset</mml:mi>
						<mml:mo>&lt;</mml:mo>
						<mml:mo>-b</mml:mo>
					</mml:mrow>
				</mml:math>
			</inlineequation>, or <inlineequation>
				<mml:math>
					<mml:mrow>
						<mml:mo>(</mml:mo>
						<mml:mi>yoffset</mml:mi>
						<mml:mo>+</mml:mo>
						<mml:mi>height</mml:mi>
						<mml:mo>)</mml:mo>
						<mml:mo>&gt;</mml:mo>
						<mml:mo>(</mml:mo>
						<mml:mi>h</mml:mi>
						<mml:mo>-</mml:mo>
						<mml:mi>b</mml:mi>
						<mml:mo>)</mml:mo>
					</mml:mrow>
				</mml:math>
			</inlineequation>, where <inlineequation>
				<mml:math>
					<mml:mi>w</mml:mi>
				</mml:math>
			</inlineequation> is the <constant>GL_TEXTURE_WIDTH</constant>, <inlineequation>
				<mml:math>
					<mml:mi>h</mml:mi>
				</mml:math>
			</inlineequation> is the <constant>GL_TEXTURE_HEIGHT</constant>, and <inlineequation>
				<mml:math>
					<mml:mi>b</mml:mi>
				</mml:math>
			</inlineequation> is the border width of the texture image being modified. Note that <inlineequation>
				<mml:math>
					<mml:mi>w</mml:mi>
				</mml:math>
			</inlineequation> and <inlineequation>
				<mml:math>
					<mml:mi>h</mml:mi>
				</mml:math>
			</inlineequation> include twice the border width.
		</para>
		<para>
			<constant>GL_INVALID_VALUE</constant> is generated if <parameter>width</parameter> or <parameter>height</parameter> is
			less than 0.
		</para>
		<para>
			<constant>GL_INVALID_ENUM</constant> is generated if <parameter>format</parameter> is not an accepted constant.
		</para>
		<para>
			<constant>GL_INVALID_ENUM</constant> is generated if <parameter>type</parameter> is not a type constant.
		</para>
		<para>
			<constant>GL_INVALID_ENUM</constant> is generated if <parameter>type</parameter> is <constant>GL_BITMAP</constant> and
			<parameter>format</parameter> is not <constant>GL_COLOR_INDEX</constant>.
		</para>
		<para>
			<constant>GL_INVALID_OPERATION</constant> is generated if <function>glTexSubImage2D</function> is executed between the
			execution of <function moreinfo="refentry">glBegin</function> and the corresponding execution of <function
			moreinfo="refentry">glEnd</function>.
		</para>
		<para>
			<constant>GL_INVALID_OPERATION</constant> is generated if <parameter>type</parameter> is one of
			<constant>GL_UNSIGNED_BYTE_3_3_2</constant>, <constant>GL_UNSIGNED_BYTE_2_3_3_REV</constant>,
			<constant>GL_UNSIGNED_SHORT_5_6_5</constant>, or <constant>GL_UNSIGNED_SHORT_5_6_5_REV</constant> and
			<parameter>format</parameter> is not <constant>GL_RGB</constant>.
		</para>
		<para>
			<constant>GL_INVALID_OPERATION</constant> is generated if <parameter>type</parameter> is one of
			<constant>GL_UNSIGNED_SHORT_4_4_4_4</constant>, <constant>GL_UNSIGNED_SHORT_4_4_4_4_REV</constant>,
			<constant>GL_UNSIGNED_SHORT_5_5_5_1</constant>, <constant>GL_UNSIGNED_SHORT_1_5_5_5_REV</constant>,
			<constant>GL_UNSIGNED_INT_8_8_8_8</constant>, <constant>GL_UNSIGNED_INT_8_8_8_8_REV</constant>,
			<constant>GL_UNSIGNED_INT_10_10_10_2</constant>, or <constant>GL_UNSIGNED_INT_2_10_10_10_REV</constant> and
			<parameter>format</parameter> is neither <constant>GL_RGBA</constant> nor <constant>GL_BGRA</constant>.
		</para>
	</refsect1>
	<refsect1 id="glTexSubImage2D.3G-associated_gets">
		<title>Associated Gets</title>
		<para>
			<function moreinfo="refentry">glGetTexImage</function>
		</para>
		<para>
			<function moreinfo="refentry">glIsEnabled</function> with argument <constant>GL_TEXTURE_2D</constant>
		</para>
	</refsect1>
	<refsect1 id="glTexSubImage2D.3G-see_also">
		<title>See Also</title>
		<para>
			<simplelist type="inline">
				<member><citerefentry>
					<refentrytitle>glActiveTextureARB</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glCopyTexImage1D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glCopyTexImage2D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glCopyTexSubImage1D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glCopyTexSubImage2D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glCopyTexSubImage3D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glDrawPixels</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glPixelStore</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glPixelTransfer</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexEnv</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexGen</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexImage1D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexImage2D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexImage3D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexSubImage1D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexSubImage3D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexParameter</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
			</simplelist>
		</para>
	</refsect1>
</refentry>
