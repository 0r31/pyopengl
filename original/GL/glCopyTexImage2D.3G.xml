<refentry id="glCopyTexImage2D.3G">
	<refmeta id="glCopyTexImage2D.3G-meta">
		<refentrytitle>glCopyTexImage2D</refentrytitle>
		<manvolnum>3G</manvolnum>
	</refmeta>
	<refnamediv id="glCopyTexImage2D.3G-name">
		<refname>glCopyTexImage2D</refname>
		<refpurpose>copy pixels into a 2D texture image</refpurpose>
	</refnamediv>
	<refsynopsisdiv id="glCopyTexImage2D.3G-c_spec">
		<title>C Specification</title>
		<funcsynopsis>
			<funcprototype>
				<funcdef>void&nbsp;<function>glCopyTexImage2D</function></funcdef>
				<paramdef>GLenum&nbsp;<parameter>target</parameter></paramdef>
				<paramdef>GLint&nbsp;<parameter>level</parameter></paramdef>
				<paramdef>GLenum&nbsp;<parameter>internalformat</parameter></paramdef>
				<paramdef>GLint&nbsp;<parameter>x</parameter></paramdef>
				<paramdef>GLint&nbsp;<parameter>y</parameter></paramdef>
				<paramdef>GLsizei&nbsp;<parameter>width</parameter></paramdef>
				<paramdef>GLsizei&nbsp;<parameter>height</parameter></paramdef>
				<paramdef>GLint&nbsp;<parameter>border</parameter></paramdef>
			</funcprototype>
		</funcsynopsis>
	</refsynopsisdiv>
	<refsect1 id="glCopyTexImage2D.3G-parameters">
		<title>Parameters</title>
		<variablelist>
			<varlistentry>
				<term><parameter>target</parameter></term>
				<listitem>
					<simpara>
						Specifies the target texture. Must be <constant>GL_TEXTURE_2D</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>level</parameter></term>
				<listitem>
					<simpara>
						Specifies the level-of-detail number. Level 0 is the base image level. Level <parameter>n</parameter> is
						the <parameter>n</parameter>th mipmap reduction image.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>internalformat</parameter></term>
				<listitem>
					<simpara>
						Specifies the internal of the texture. Must be one of the following symbolic constants:
						<constant>GL_ALPHA</constant>, <constant>GL_ALPHA4</constant>, <constant>GL_ALPHA8</constant>,
						<constant>GL_ALPHA12</constant>, <constant>GL_ALPHA16</constant>, <constant>GL_LUMINANCE</constant>,
						<constant>GL_LUMINANCE4</constant>, <constant>GL_LUMINANCE8</constant>,
						<constant>GL_LUMINANCE12</constant>, <constant>GL_LUMINANCE16</constant>,
						<constant>GL_LUMINANCE_ALPHA</constant>, <constant>GL_LUMINANCE4_ALPHA4</constant>,
						<constant>GL_LUMINANCE6_ALPHA2</constant>, <constant>GL_LUMINANCE8_ALPHA8</constant>,
						<constant>GL_LUMINANCE12_ALPHA4</constant>, <constant>GL_LUMINANCE12_ALPHA12</constant>,
						<constant>GL_LUMINANCE16_ALPHA16</constant>, <constant>GL_INTENSITY</constant>,
						<constant>GL_INTENSITY4</constant>, <constant>GL_INTENSITY8</constant>,
						<constant>GL_INTENSITY12</constant>, <constant>GL_INTENSITY16</constant>, <constant>GL_RGB</constant>,
						<constant>GL_R3_G3_B2</constant>, <constant>GL_RGB4</constant>, <constant>GL_RGB5</constant>,
						<constant>GL_RGB8</constant>, <constant>GL_RGB10</constant>, <constant>GL_RGB12</constant>,
						<constant>GL_RGB16</constant>, <constant>GL_RGBA</constant>, <constant>GL_RGBA2</constant>,
						<constant>GL_RGBA4</constant>, <constant>GL_RGB5_A1</constant>, <constant>GL_RGBA8</constant>,
						<constant>GL_RGB10_A2</constant>, <constant>GL_RGBA12</constant>, or <constant>GL_RGBA16</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>x</parameter>, <parameter>y</parameter></term>
				<listitem>
					<simpara>
						Specify the window coordinates of the lower left corner of the rectangular region of pixels to be copied.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>width</parameter></term>
				<listitem>
					<simpara>
						Specifies the width of the texture image. Must be 0 or <inlineequation>
							<mml:math>
								<mml:msup>
									<mml:mn>2</mml:mn>
									<mml:mi>n</mml:mi>
								</mml:msup>
								<mml:mo>+</mml:mo>
								<mml:mrow>
									<mml:mn>2</mml:mn>
									<mml:mo>&times;</mml:mo>
									<mml:mi>border</mml:mi>
								</mml:mrow>
							</mml:math>
						</inlineequation> for some integer <inlineequation>
							<mml:math>
								<mml:mi>n</mml:mi>
							</mml:math>
						</inlineequation>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>height</parameter></term>
				<listitem>
					<simpara>
						Specifies the height of the texture image. Must be 0 or <inlineequation>
							<mml:math>
								<mml:msup>
									<mml:mn>2</mml:mn>
									<mml:mi>m</mml:mi>
								</mml:msup>
								<mml:mo>+</mml:mo>
								<mml:mrow>
									<mml:mn>2</mml:mn>
									<mml:mo>&times;</mml:mo>
									<mml:mi>border</mml:mi>
								</mml:mrow>
							</mml:math>
						</inlineequation> for some integer <inlineequation>
							<mml:math>
								<mml:mi>m</mml:mi>
							</mml:math>
						</inlineequation>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>border</parameter></term>
				<listitem>
					<simpara>
						Specifies the width of the border. Must be either 0 or 1.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsect1>
	<refsect1 id="glCopyTexImage2D.3G-description">
		<title>Description</title>
		<para>
			<function>glCopyTexImage2D</function> defines a two-dimensional texture image with pixels from the current
			<constant>GL_READ_BUFFER</constant>.
		</para>
		<para>
			The screen-aligned pixel rectangle with lower left corner at (<parameter>x</parameter>, <parameter>y</parameter>) and
			with a width of <parameter>width</parameter>&thinsp;+&thinsp;2&times;<parameter>border</parameter> and a height of
			<parameter>height</parameter>&thinsp;+&thinsp;2&times;<parameter>border</parameter> defines the texture array at the
			mipmap level specified by <parameter>level</parameter>. <parameter>internalformat</parameter> specifies the internal of
			the texture array.
		</para>
		<para>
			The pixels in the rectangle are processed exactly as if <function moreinfo="refentry">glCopyPixels</function> had been
			called, but the process stops just before final conversion. At this point all pixel component values are clamped to the
			range <inlineequation>
				<mml:math>
					<mml:mfenced open="[" close="]">
						<mml:mn>0</mml:mn>
						<mml:mn>1</mml:mn>
					</mml:mfenced>
				</mml:math>
			</inlineequation> and then converted to the texture's internal for storage in the texel array.
		</para>
		<para>
			Pixel ordering is such that lower <inlineequation>
				<mml:math>
					<mml:mi>x</mml:mi>
				</mml:math>
			</inlineequation> and <inlineequation>
				<mml:math>
					<mml:mi>y</mml:mi>
				</mml:math>
			</inlineequation> screen coordinates correspond to lower <inlineequation>
				<mml:math>
					<mml:mi>s</mml:mi>
				</mml:math>
			</inlineequation> and <inlineequation>
				<mml:math>
					<mml:mi>t</mml:mi>
				</mml:math>
			</inlineequation> texture coordinates.
		</para>
		<para>
			If any of the pixels within the specified rectangle of the current <constant>GL_READ_BUFFER</constant> are outside the
			window associated with the current rendering context, then the values obtained for those pixels are undefined.
		</para>
	</refsect1>
	<refsect1 id="glCopyTexImage2D.3G-notes">
		<title>Notes</title>
		<para>
			<function>glCopyTexImage2D</function> is available only if the GL version is 1.1 or greater.
		</para>
		<para>
			Texturing has no effect in color index mode.
		</para>
		<para>
			1, 2, 3, and 4 are not accepted values for <parameter>internalformat</parameter>.
		</para>
		<para>
			An image with height or width of 0 indicates a <constant>NULL</constant> texture.
		</para>
		<para>
			When the <constant>GL_ARB_imaging</constant> extension is supported, the RGBA components read from the framebuffer may
			be processed by the imaging pipeline. See <function moreinfo="refentry">glTexImage1D</function> for specific details.
		</para>
	</refsect1>
	<refsect1 id="glCopyTexImage2D.3G-errors">
		<title>Errors</title>
		<para>
			<constant>GL_INVALID_ENUM</constant> is generated if <parameter>target</parameter> is not
			<constant>GL_TEXTURE_2D</constant>.
		</para>
		<para>
			<constant>GL_INVALID_VALUE</constant> is generated if <parameter>level</parameter> is less than 0.
		</para>
		<para>
			<constant>GL_INVALID_VALUE</constant> may be generated if <parameter>level</parameter> is greater than <inlineequation>
				<mml:math>
					<mml:msub>
						<mml:mi>log</mml:mi>
						<mml:mn>2</mml:mn>
					</mml:msub>
					<mml:mi>max</mml:mi>
				</mml:math>
			</inlineequation>, where <inlineequation>
				<mml:math>
					<mml:mi>max</mml:mi>
				</mml:math>
			</inlineequation> is the returned value of <constant>GL_MAX_TEXTURE_SIZE</constant>.
		</para>
		<para>
			<constant>GL_INVALID_VALUE</constant> is generated if <parameter>width</parameter> or <parameter>height</parameter> is
			less than 0, greater than 2&thinsp;+&thinsp;<constant>GL_MAX_TEXTURE_SIZE</constant>, or if
			<parameter>width</parameter> or <parameter>height</parameter> cannot be represented as <inlineequation>
				<mml:math>
					<mml:msup>
						<mml:mn>2</mml:mn>
						<mml:mi>k</mml:mi>
					</mml:msup>
					<mml:mo>+</mml:mo>
					<mml:mrow>
						<mml:mn>2</mml:mn>
						<mml:mo>&times;</mml:mo>
						<mml:mi>border</mml:mi>
					</mml:mrow>
				</mml:math>
			</inlineequation> for some integer <inlineequation>
				<mml:math>
					<mml:mi>k</mml:mi>
				</mml:math>
			</inlineequation>.
		</para>
		<para>
			<constant>GL_INVALID_VALUE</constant> is generated if <parameter>border</parameter> is not 0 or 1.
		</para>
		<para>
			<constant>GL_INVALID_VALUE</constant> is generated if <parameter>internalformat</parameter> is not one of the allowable
			values.
		</para>
		<para>
			<constant>GL_INVALID_OPERATION</constant> is generated if <function>glCopyTexImage2D</function> is executed between the
			execution of <function moreinfo="refentry">glBegin</function> and the corresponding execution of <function
			moreinfo="refentry">glEnd</function>.
		</para>
	</refsect1>
	<refsect1 id="glCopyTexImage2D.3G-associated_gets">
		<title>Associated Gets</title>
		<para>
			<function moreinfo="refentry">glGetTexImage</function>
		</para>
		<para>
			<function moreinfo="refentry">glIsEnabled</function> with argument <constant>GL_TEXTURE_2D</constant>
		</para>
	</refsect1>
	<refsect1 id="glCopyTexImage2D.3G-see_also">
		<title>See Also</title>
		<para>
			<simplelist type="inline">
				<member><citerefentry>
					<refentrytitle>glCopyPixels</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glCopyTexImage1D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glCopyTexSubImage1D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glCopyTexSubImage2D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glPixelStore</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glPixelTransfer</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexEnv</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexGen</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexImage1D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexImage2D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexSubImage1D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexSubImage2D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexParameter</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
			</simplelist>
		</para>
	</refsect1>
</refentry>
