<refentry id="glBitmap.3G">
	<refmeta id="glBitmap.3G-meta">
		<refentrytitle>glBitmap</refentrytitle>
		<manvolnum>3G</manvolnum>
	</refmeta>
	<refnamediv id="glBitmap.3G-name">
		<refname>glBitmap</refname>
		<refpurpose>draw a bitmap</refpurpose>
	</refnamediv>
	<refsynopsisdiv id="glBitmap.3G-c_spec">
		<title>C Specification</title>
		<funcsynopsis>
			<funcprototype>
				<funcdef>void&nbsp;<function>glBitmap</function></funcdef>
				<paramdef>GLsizei&nbsp;<parameter>width</parameter></paramdef>
				<paramdef>GLsizei&nbsp;<parameter>height</parameter></paramdef>
				<paramdef>GLfloat&nbsp;<parameter>xorig</parameter></paramdef>
				<paramdef>GLfloat&nbsp;<parameter>yorig</parameter></paramdef>
				<paramdef>GLfloat&nbsp;<parameter>xmove</parameter></paramdef>
				<paramdef>GLfloat&nbsp;<parameter>ymove</parameter></paramdef>
				<paramdef>const&nbsp;GLubyte&nbsp;*<parameter>bitmap</parameter></paramdef>
			</funcprototype>
		</funcsynopsis>
	</refsynopsisdiv>
	<refsect1 id="glBitmap.3G-parameters">
		<title>Parameters</title>
		<variablelist>
			<varlistentry>
				<term><parameter>width</parameter>, <parameter>height</parameter></term>
				<listitem>
					<simpara>
						Specify the pixel width and height of the bitmap image.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>xorig</parameter>, <parameter>yorig</parameter></term>
				<listitem>
					<simpara>
						Specify the location of the origin in the bitmap image. The origin is measured from the lower left corner
						of the bitmap, with right and up being the positive axes.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>xmove</parameter>, <parameter>ymove</parameter></term>
				<listitem>
					<simpara>
						Specify the <parameter>x</parameter> and <parameter>y</parameter> offsets to be added to the current raster
						position after the bitmap is drawn.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>bitmap</parameter></term>
				<listitem>
					<simpara>
						Specifies the address of the bitmap image.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsect1>
	<refsect1 id="glBitmap.3G-description">
		<title>Description</title>
		<para>
			A bitmap is a binary image. When drawn, the bitmap is positioned relative to the current raster position, and frame
			buffer pixels corresponding to 1's in the bitmap are written using the current raster color or index. Frame buffer
			pixels corresponding to 0's in the bitmap are not modified.
		</para>
		<para>
			<function>glBitmap</function> takes seven arguments. The first pair specifies the width and height of the bitmap image.
			The second pair specifies the location of the bitmap origin relative to the lower left corner of the bitmap image. The
			third pair of arguments specifies <parameter>x</parameter> and <parameter>y</parameter> offsets to be added to the
			current raster position after the bitmap has been drawn. The final argument is a pointer to the bitmap image itself.
		</para>
		<para>
			The bitmap image is interpreted like image data for the <function moreinfo="refentry">glDrawPixels</function> command,
			with <parameter>width</parameter> and <parameter>height</parameter> corresponding to the width and height arguments of
			that command, and with <parameter>type</parameter> set to <constant>GL_BITMAP</constant> and
			<parameter>format</parameter> set to <constant>GL_COLOR_INDEX</constant>. Modes specified using <function
			moreinfo="refentry">glPixelStore</function> affect the interpretation of bitmap image data; modes specified using
			<function moreinfo="refentry">glPixelTransfer</function> do not.
		</para>
		<para>
			If the current raster position is invalid, <function>glBitmap</function> is ignored. Otherwise, the lower left corner
			of the bitmap image is positioned at the window coordinates
		</para>
		<informalequation>
			<mml:math>
				<mml:mtable>
					<mml:mtr>
						<mml:mtd>
							<mml:msub>
								<mml:mi>x</mml:mi>
								<mml:mi>w</mml:mi>
							</mml:msub>
							<mml:mo>=</mml:mo>
							<mml:mfenced open="&lfloor;" close="&rfloor;">
								<mml:mrow>
									<mml:msub>
										<mml:mi>x</mml:mi>
										<mml:mi>r</mml:mi>
									</mml:msub>
									<mml:mo>-</mml:mo>
									<mml:msub>
										<mml:mi>x</mml:mi>
										<mml:mi>o</mml:mi>
									</mml:msub>
								</mml:mrow>
							</mml:mfenced>
						</mml:mtd>
					</mml:mtr>
					<mml:mtr>
						<mml:mtd>
							<mml:msub>
								<mml:mi>y</mml:mi>
								<mml:mi>w</mml:mi>
							</mml:msub>
							<mml:mo>=</mml:mo>
							<mml:mfenced open="&lfloor;" close="&rfloor;">
								<mml:mrow>
									<mml:msub>
										<mml:mi>y</mml:mi>
										<mml:mi>r</mml:mi>
									</mml:msub>
									<mml:mo>-</mml:mo>
									<mml:msub>
										<mml:mi>y</mml:mi>
										<mml:mi>o</mml:mi>
									</mml:msub>
								</mml:mrow>
							</mml:mfenced>
						</mml:mtd>
					</mml:mtr>
				</mml:mtable>
			</mml:math>
		</informalequation>
		<para>
			where <inlineequation>
				<mml:math>
					<mml:mfenced>
						<mml:msub>
							<mml:mi>x</mml:mi>
							<mml:mi>r</mml:mi>
						</mml:msub>
						<mml:msub>
							<mml:mi>y</mml:mi>
							<mml:mi>r</mml:mi>
						</mml:msub>
					</mml:mfenced>
				</mml:math>
			</inlineequation> is the raster position and <inlineequation>
				<mml:math>
					<mml:mfenced>
						<mml:msub>
							<mml:mi>x</mml:mi>
							<mml:mi>o</mml:mi>
						</mml:msub>
						<mml:msub>
							<mml:mi>y</mml:mi>
							<mml:mi>o</mml:mi>
						</mml:msub>
					</mml:mfenced>
				</mml:math>
			</inlineequation> is the bitmap origin. Fragments are then generated for each pixel corresponding to a 1 (one) in the
			bitmap image. These fragments are generated using the current raster <parameter>z</parameter> coordinate, color or
			color index, and current raster texture coordinates. They are then treated just as if they had been generated by a
			point, line, or polygon, including texture mapping,
		</para>
		<para>
			fogging, and all per-fragment operations such as alpha and depth testing.
		</para>
		<para>
			After the bitmap has been drawn, the <parameter>x</parameter> and <parameter>y</parameter> coordinates of the current
			raster position are offset by <parameter>xmove</parameter> and <parameter>ymove</parameter>. No change is made to the
			<parameter>z</parameter> coordinate of the current raster position, or to the current raster color, texture
			coordinates, or index.
		</para>
	</refsect1>
	<refsect1 id="glBitmap.3G-notes">
		<title>Notes</title>
		<para>
			To set a valid raster position outside the viewport, first set a valid raster position inside the viewport, then call
			<function>glBitmap</function> with <constant>NULL</constant> as the <parameter>bitmap</parameter> parameter and with
			<parameter>xmove</parameter> and <parameter>ymove</parameter> set to the offsets of the new raster position. This
			technique is useful when panning an image around the viewport.
		</para>
	</refsect1>
	<refsect1 id="glBitmap.3G-errors">
		<title>Errors</title>
		<simpara>
			<constant>GL_INVALID_VALUE</constant> is generated if <parameter>width</parameter> or <parameter>height</parameter> is
			negative.
		</simpara>
		<simpara>
			<constant>GL_INVALID_OPERATION</constant> is generated if <function>glBitmap</function> is executed between the
			execution of <function moreinfo="refentry">glBegin</function> and the corresponding execution of <function
			moreinfo="refentry">glEnd</function>.
		</simpara>
	</refsect1>
	<refsect1 id="glBitmap.3G-associated_gets">
		<title>Associated Gets</title>
		<simpara>
			<function moreinfo="refentry">glGet</function> with argument <constant>GL_CURRENT_RASTER_POSITION</constant>
		</simpara>
		<simpara>
			<function moreinfo="refentry">glGet</function> with argument <constant>GL_CURRENT_RASTER_COLOR</constant>
		</simpara>
		<simpara>
			<function moreinfo="refentry">glGet</function> with argument <constant>GL_CURRENT_RASTER_DISTANCE</constant>
		</simpara>
		<simpara>
			<function moreinfo="refentry">glGet</function> with argument <constant>GL_CURRENT_RASTER_INDEX</constant>
		</simpara>
		<simpara>
			<function moreinfo="refentry">glGet</function> with argument <constant>GL_CURRENT_RASTER_TEXTURE_COORDS</constant>
		</simpara>
		<simpara>
			<function moreinfo="refentry">glGet</function> with argument <constant>GL_CURRENT_RASTER_POSITION_VALID</constant>
		</simpara>
	</refsect1>
	<refsect1 id="glBitmap.3G-see_also">
		<title>See Also</title>
		<para>
			<simplelist type="inline">
				<member><citerefentry>
					<refentrytitle>glDrawPixels</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glPixelStore</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glPixelTransfer</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glRasterPos</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
			</simplelist>
		</para>
	</refsect1>
</refentry>
