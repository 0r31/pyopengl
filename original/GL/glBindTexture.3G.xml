<refentry id="glBindTexture.3G">
	<refmeta id="glBindTexture.3G-meta">
		<refentrytitle>glBindTexture</refentrytitle>
		<manvolnum>3G</manvolnum>
	</refmeta>
	<refnamediv id="glBindTexture.3G-name">
		<refname>glBindTexture</refname>
		<refpurpose>bind a named texture to a texturing target</refpurpose>
	</refnamediv>
	<refsect1 id="glBindTexture.3G-c_spec">
		<title>C Specification</title>
		<funcsynopsis>
			<funcprototype>
				<funcdef>void&nbsp;<function>glBindTexture</function></funcdef>
				<paramdef>GLenum&nbsp;<parameter>target</parameter></paramdef>
				<paramdef>GLuint&nbsp;<parameter>texture</parameter></paramdef>
			</funcprototype>
		</funcsynopsis>
	</refsect1>
	<refsect1 id="glBindTexture.3G-parameters">
		<title>Parameters</title>
		<variablelist>
			<varlistentry>
				<term><parameter>target</parameter></term>
				<listitem>
					<simpara>
						Specifies the target to which the texture is bound. Must be either <constant>GL_TEXTURE_1D</constant>,
						<constant>GL_TEXTURE_2D</constant>, or <constant>GL_TEXTURE_3D</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>texture</parameter></term>
				<listitem>
					<simpara>
						Specifies the name of a texture.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsect1>
	<refsect1 id="glBindTexture.3G-description">
		<title>Description</title>
		<para>
			<function>glBindTexture</function> lets you create or use a named texture. Calling <function>glBindTexture</function>
			with
		</para>
		<para>
			<parameter>target</parameter> set to <constant>GL_TEXTURE_1D</constant>, <constant>GL_TEXTURE_2D</constant>,
			<constant>GL_TEXTURE_3D</constant> and <parameter>texture</parameter> set to the name of the newtexture binds the
			texture name to the target. When a texture is bound to a target, the previous binding for that target is automatically
			broken.
		</para>
		<para>
			Texture names are unsigned integers. The value zero is reserved to represent the default texture for each texture
			target. Texture names and the corresponding texture contents are local to the shared display-list space (see
			<citerefentry>
				<refentrytitle>glXCreateContext</refentrytitle>
				<manvolnum>3G</manvolnum>
			</citerefentry>) of the current GL rendering context; two rendering contexts share texture names only if they also
			share display lists.
		</para>
		<para>
			You may use <function moreinfo="refentry">glGenTextures</function> to generate a set of new texture names.
		</para>
		<para>
			When a texture is first bound, it assumes the dimensionality of its target: A texture first bound to
			<constant>GL_TEXTURE_1D</constant> becomes one-dimensional, and a texture first bound to
			<constant>GL_TEXTURE_2D</constant> becomes two-dimensional, and a texture first bound to
			<constant>GL_TEXTURE_3D</constant> becomes a three-dimensional texture. The state of a one-dimensional texture
			immediately after it is first bound is equivalent to the state of the default <constant>GL_TEXTURE_1D</constant> at GL
			initialization, and similarly for two-, and three-dimensional textures.
		</para>
		<para>
			While a texture is bound, GL operations on the target to which it is bound affect the bound texture, and queries of the
			target to which it is bound return state from the bound texture. If texture mapping of the dimensionality of the target
			to which a texture is bound is active, the bound texture is used. In effect, the texture targets become aliases for the
			textures currently bound to them, and the texture name zero refers to the default textures that were bound to them at
			initialization.
		</para>
		<para>
			A texture binding created with <function>glBindTexture</function> remains active until a different texture is bound to
			the same target, or until the bound texture is deleted with <function moreinfo="refentry">glDeleteTextures</function>.
		</para>
		<para>
			Once created, a named texture may be re-bound to the target of the matching dimensionality as often as needed. It is
			usually much faster to use <function>glBindTexture</function> to bind an existing named texture to one of the texture
			targets than it is to reload the texture image using <function moreinfo="refentry">glTexImage1D</function>, <function
			moreinfo="refentry">glTexImage2D</function>, or <function moreinfo="refentry">glTexImage3D</function>. For additional
			control over performance, use <function moreinfo="refentry">glPrioritizeTextures</function>.
		</para>
		<para>
			<function>glBindTexture</function> is included in display lists.
		</para>
	</refsect1>
	<refsect1 id="glBindTexture.3G-notes">
		<title>Notes</title>
		<para>
			<function>glBindTexture</function> is available only if the GL version is 1.1 or greater.
		</para>
	</refsect1>
	<refsect1 id="glBindTexture.3G-errors">
		<title>Errors</title>
		<para>
			<constant>GL_INVALID_ENUM</constant> is generated if <parameter>target</parameter> is not one of the allowable values.
		</para>
		<para>
			<constant>GL_INVALID_OPERATION</constant> is generated if <parameter>texture</parameter> has a dimensionality that
			doesn't match that of <parameter>target</parameter>.
		</para>
		<para>
			<constant>GL_INVALID_OPERATION</constant> is generated if <function>glBindTexture</function> is executed between the
			execution of <function moreinfo="refentry">glBegin</function> and the corresponding execution of <function
			moreinfo="refentry">glEnd</function>.
		</para>
	</refsect1>
	<refsect1 id="glBindTexture.3G-associated_gets">
		<title>Associated Gets</title>
		<para>
			<function moreinfo="refentry">glGet</function> with argument <constant>GL_TEXTURE_BINDING_1D</constant>
		</para>
		<para>
			<function moreinfo="refentry">glGet</function> with argument <constant>GL_TEXTURE_BINDING_2D</constant>
		</para>
		<para>
			<function moreinfo="refentry">glGet</function> with argument <constant>GL_TEXTURE_BINDING_3D</constant>
		</para>
	</refsect1>
	<refsect1 id="glBindTexture.3G-see_also">
		<title>See Also</title>
		<para>
			<simplelist type="inline">
				<member><citerefentry>
					<refentrytitle>glAreTexturesResident</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glDeleteTextures</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glGenTextures</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glGet</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glGetTexParameter</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glIsTexture</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glPrioritizeTextures</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexImage1D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexImage2D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexParameter</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
			</simplelist>
		</para>
	</refsect1>
</refentry>
