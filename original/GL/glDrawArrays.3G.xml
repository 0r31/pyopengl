<refentry id="glDrawArrays.3G">
	<refmeta id="glDrawArrays.3G-meta">
		<refentrytitle>glDrawArrays</refentrytitle>
		<manvolnum>3G</manvolnum>
	</refmeta>
	<refnamediv id="glDrawArrays.3G-name">
		<refname>glDrawArrays</refname>
		<refpurpose>render primitives from array data</refpurpose>
	</refnamediv>
	<refsynopsisdiv id="glDrawArrays.3G-c_spec">
		<title>C Specification</title>
		<funcsynopsis>
			<funcprototype>
				<funcdef>void&nbsp;<function>glDrawArrays</function></funcdef>
				<paramdef>GLenum&nbsp;<parameter>mode</parameter></paramdef>
				<paramdef>GLint&nbsp;<parameter>first</parameter></paramdef>
				<paramdef>GLsizei&nbsp;<parameter>count</parameter></paramdef>
			</funcprototype>
		</funcsynopsis>
	</refsynopsisdiv>
	<refsect1 id="glDrawArrays.3G-parameters">
		<title>Parameters</title>
		<variablelist>
			<varlistentry>
				<term><parameter>mode</parameter></term>
				<listitem>
					<simpara>
						Specifies what kind of primitives to render. Symbolic constants <constant>GL_POINTS</constant>,
						<constant>GL_LINE_STRIP</constant>, <constant>GL_LINE_LOOP</constant>, <constant>GL_LINES</constant>,
						<constant>GL_TRIANGLE_STRIP</constant>, <constant>GL_TRIANGLE_FAN</constant>,
						<constant>GL_TRIANGLES</constant>, <constant>GL_QUAD_STRIP</constant>, <constant>GL_QUADS</constant>, and
						<constant>GL_POLYGON</constant> are accepted.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>first</parameter></term>
				<listitem>
					<simpara>
						Specifies the starting index in the enabled arrays.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>count</parameter></term>
				<listitem>
					<simpara>
						Specifies the number of indices to be rendered.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsect1>
	<refsect1 id="glDrawArrays.3G-description">
		<title>Description</title>
		<para>
			<function>glDrawArrays</function> specifies multiple geometric primitives with very few subroutine calls. Instead of
			calling a GL procedure to pass each individual vertex, normal, texture coordinate, edge flag, or color, you can
			prespecify separate arrays of vertexes, normals, and colors and use them to construct a sequence of primitives with a
			single call to <function>glDrawArrays</function>.
		</para>
		<para>
			When <function>glDrawArrays</function> is called, it uses <parameter>count</parameter> sequential elements from each
			enabled array to construct a sequence of geometric primitives, beginning with element <parameter>first</parameter>.
			<parameter>mode</parameter> specifies what kind of primitives are constructed, and how the array elements construct
			those primitives. If <constant>GL_VERTEX_ARRAY</constant> is not enabled, no geometric primitives are generated.
		</para>
		<para>
			Vertex attributes that are modified by <function>glDrawArrays</function> have an unspecified value after
			<function>glDrawArrays</function> returns. For example, if <constant>GL_COLOR_ARRAY</constant> is enabled, the value of
			the current color is undefined after <function>glDrawArrays</function> executes. Attributes that aren't modified remain
			well defined.
		</para>
	</refsect1>
	<refsect1 id="glDrawArrays.3G-notes">
		<title>Notes</title>
		<para>
			<function>glDrawArrays</function> is available only if the GL version is 1.1 or greater.
		</para>
		<para>
			<function>glDrawArrays</function> is included in display lists. If <function>glDrawArrays</function> is entered into a
			display list, the necessary array data (determined by the array pointers and enables) is also entered into the display
			list. Because the array pointers and enables are client-side state, their values affect display lists when the lists
			are created, not when the lists are executed.
		</para>
	</refsect1>
	<refsect1 id="glDrawArrays.3G-errors">
		<title>Errors</title>
		<para>
			<constant>GL_INVALID_ENUM</constant> is generated if <parameter>mode</parameter> is not an accepted value.
		</para>
		<para>
			<constant>GL_INVALID_VALUE</constant> is generated if <parameter>count</parameter> is negative.
		</para>
		<para>
			<constant>GL_INVALID_OPERATION</constant> is generated if <function>glDrawArrays</function> is executed between the
			execution of <function moreinfo="refentry">glBegin</function> and the corresponding <function
			moreinfo="refentry">glEnd</function>.
		</para>
	</refsect1>
	<refsect1 id="glDrawArrays.3G-see_also">
		<title>See Also</title>
		<para>
			<simplelist type="inline">
				<member><citerefentry>
					<refentrytitle>glArrayElement</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glColorPointer</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glDrawElements</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glDrawRangeElements</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glEdgeFlagPointer</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glGetPointerv</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glIndexPointer</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glInterleavedArrays</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glNormalPointer</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexCoordPointer</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glVertexPointer</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
			</simplelist>
		</para>
	</refsect1>
</refentry>
