<refentry id="glCopyColorTable.3G">
	<refmeta id="glCopyColorTable.3G-meta">
		<refentrytitle>glCopyColorTable</refentrytitle>
		<manvolnum>3G</manvolnum>
	</refmeta>
	<refnamediv id="glCopyColorTable.3G-name">
		<refname>glCopyColorTable</refname>
		<refpurpose>copy pixels into a color table</refpurpose>
	</refnamediv>
	<refsynopsisdiv id="glCopyColorTable.3G-c_spec">
		<title>C Specification</title>
		<funcsynopsis>
			<funcprototype>
				<funcdef>void&nbsp;<function>glCopyColorTable</function></funcdef>
				<paramdef>GLenum&nbsp;<parameter>target</parameter></paramdef>
				<paramdef>GLenum&nbsp;<parameter>internalformat</parameter></paramdef>
				<paramdef>GLint&nbsp;<parameter>x</parameter></paramdef>
				<paramdef>GLint&nbsp;<parameter>y</parameter></paramdef>
				<paramdef>GLsizei&nbsp;<parameter>width</parameter></paramdef>
			</funcprototype>
		</funcsynopsis>
	</refsynopsisdiv>
	<refsect1 id="glCopyColorTable.3G-parameters">
		<title>Parameters</title>
		<variablelist>
			<varlistentry>
				<term><parameter>target</parameter></term>
				<listitem>
					<simpara>
						The color table target. Must be <constant>GL_COLOR_TABLE</constant>,
						<constant>GL_POST_CONVOLUTION_COLOR_TABLE</constant>, or
						<constant>GL_POST_COLOR_MATRIX_COLOR_TABLE</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>internalformat</parameter></term>
				<listitem>
					<simpara>
						The internal storage of the texture image. Must be one of the following symbolic constants:
						<constant>GL_ALPHA</constant>, <constant>GL_ALPHA4</constant>, <constant>GL_ALPHA8</constant>,
						<constant>GL_ALPHA12</constant>, <constant>GL_ALPHA16</constant>, <constant>GL_LUMINANCE</constant>,
						<constant>GL_LUMINANCE4</constant>, <constant>GL_LUMINANCE8</constant>,
						<constant>GL_LUMINANCE12</constant>, <constant>GL_LUMINANCE16</constant>,
						<constant>GL_LUMINANCE_ALPHA</constant>, <constant>GL_LUMINANCE4_ALPHA4</constant>,
						<constant>GL_LUMINANCE6_ALPHA2</constant>, <constant>GL_LUMINANCE8_ALPHA8</constant>,
						<constant>GL_LUMINANCE12_ALPHA4</constant>, <constant>GL_LUMINANCE12_ALPHA12</constant>,
						<constant>GL_LUMINANCE16_ALPHA16</constant>, <constant>GL_INTENSITY</constant>,
						<constant>GL_INTENSITY4</constant>, <constant>GL_INTENSITY8</constant>,
						<constant>GL_INTENSITY12</constant>, <constant>GL_INTENSITY16</constant>, <constant>GL_R3_G3_B2</constant>,
						<constant>GL_RGB</constant>, <constant>GL_RGB4</constant>, <constant>GL_RGB5</constant>,
						<constant>GL_RGB8</constant>, <constant>GL_RGB10</constant>, <constant>GL_RGB12</constant>,
						<constant>GL_RGB16</constant>, <constant>GL_RGBA</constant>, <constant>GL_RGBA2</constant>,
						<constant>GL_RGBA4</constant>, <constant>GL_RGB5_A1</constant>, <constant>GL_RGBA8</constant>,
						<constant>GL_RGB10_A2</constant>, <constant>GL_RGBA12</constant>, <constant>GL_RGBA16</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>x</parameter></term>
				<listitem>
					<simpara>
						The x coordinate of the lower-left corner of the pixel rectangle to be transferred to the color table.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>y</parameter></term>
				<listitem>
					<simpara>
						The y coordinate of the lower-left corner of the pixel rectangle to be transferred to the color table.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>width</parameter></term>
				<listitem>
					<simpara>
						The width of the pixel rectangle.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsect1>
	<refsect1 id="glCopyColorTable.3G-description">
		<title>Description</title>
		<para>
			<function>glCopyColorTable</function> loads a color table with pixels from the current
			<constant>GL_READ_BUFFER</constant> (rather than from main memory, as is the case for <function
			moreinfo="refentry">glColorTable</function>).
		</para>
		<para>
			The screen-aligned pixel rectangle with lower-left corner at (<parameter>x</parameter>,<parameter>y</parameter>) having
			width <parameter>width</parameter> and height 1 is loaded into the color table. If any pixels within this region are
			outside the window that is associated with the GL context, the values obtained for those pixels are undefined.
		</para>
		<para>
			The pixels in the rectangle are processed just as if <function moreinfo="refentry">glReadPixels</function> were called,
			with <parameter>internalformat</parameter> set to RGBA, but processing stops after the final conversion to RGBA.
		</para>
		<para>
			The four scale parameters and the four bias parameters that are defined for the table are then used to scale and bias
			the R, G, B, and A components of each pixel. The scale and bias parameters are set by calling <function
			moreinfo="refentry">glColorTableParameter</function>.
		</para>
		<para>
			Next, the R, G, B, and A values are clamped to the range [0,1]. Each pixel is then converted to the internal specified
			by <parameter>internalformat</parameter>. This conversion simply maps the component values of the pixel (R, G, B, and
			A) to the values included in the internal (red, green, blue, alpha, luminance, and intensity). The mapping is as
			follows:
		</para>
		<informaltable frame="topbot">
			<tgroup cols="7">
				<colspec>
				</colspec>
				<colspec align="center">
				</colspec>
				<colspec align="center">
				</colspec>
				<colspec align="center">
				</colspec>
				<colspec align="center">
				</colspec>
				<colspec align="center">
				</colspec>
				<colspec align="center">
				</colspec>
				<thead>
					<row rowsep="1">
						<entry><emphasis role="bold">Internal Format</emphasis></entry>
						<entry><emphasis role="bold">Red</emphasis></entry>
						<entry><emphasis role="bold">Green</emphasis></entry>
						<entry><emphasis role="bold">Blue</emphasis></entry>
						<entry><emphasis role="bold">Alpha</emphasis></entry>
						<entry><emphasis role="bold">Luminance</emphasis></entry>
						<entry><emphasis role="bold">Intensity</emphasis></entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry><constant>GL_ALPHA</constant></entry>
						<entry/>
						<entry/>
						<entry/>
						<entry>A</entry>
						<entry/>
						<entry/>
					</row>
					<row>
						<entry><constant>GL_LUMINANCE</constant></entry>
						<entry/>
						<entry/>
						<entry/>
						<entry/>
						<entry>R</entry>
						<entry/>
					</row>
					<row>
						<entry><constant>GL_LUMINANCE_ALPHA</constant></entry>
						<entry/>
						<entry/>
						<entry/>
						<entry>A</entry>
						<entry>R</entry>
						<entry/>
					</row>
					<row>
						<entry><constant>GL_INTENSITY</constant></entry>
						<entry/>
						<entry/>
						<entry/>
						<entry/>
						<entry/>
						<entry>R</entry>
					</row>
					<row>
						<entry><constant>GL_RGB</constant></entry>
						<entry>R</entry>
						<entry>G</entry>
						<entry>B</entry>
						<entry/>
						<entry/>
						<entry/>
					</row>
					<row>
						<entry><constant>GL_RGBA</constant></entry>
						<entry>R</entry>
						<entry>G</entry>
						<entry>B</entry>
						<entry>A</entry>
						<entry/>
						<entry/>
					</row>
				</tbody>
			</tgroup>
		</informaltable>
		<para>
			Finally, the red, green, blue, alpha, luminance, and/or intensity components of the resulting pixels are stored in the
			color table. They form a one-dimensional table with indices in the range <inlineequation>
				<mml:math>
					<mml:mfenced>
						<mml:mn>0</mml:mn>
						<mml:mrow>
							<mml:mi>width</mml:mi>
							<mml:mo>-</mml:mo>
							<mml:mn>1</mml:mn>
						</mml:mrow>
					</mml:mfenced>
				</mml:math>
			</inlineequation>
		</para>
	</refsect1>
	<refsect1 id="glCopyColorTable.3G-notes">
		<title>Notes</title>
		<para>
			<function>glCopyColorTable</function> is available only if <constant>GL_ARB_imaging</constant> is returned from calling
			<function moreinfo="refentry">glGetString</function> with an argument of <constant>GL_EXTENSIONS</constant>.
		</para>
	</refsect1>
	<refsect1 id="glCopyColorTable.3G-errors">
		<title>Errors</title>
		<para>
			<constant>GL_INVALID_ENUM</constant> is generated when <parameter>target</parameter> is not one of the allowable values.
		</para>
		<para>
			<constant>GL_INVALID_VALUE</constant> is generated if <parameter>width</parameter> is less than zero.
		</para>
		<para>
			<constant>GL_INVALID_VALUE</constant> is generated if <parameter>internalformat</parameter> is not one of the allowable
			values.
		</para>
		<para>
			<constant>GL_TABLE_TOO_LARGE</constant> is generated if the requested color table is too large to be supported by the
			implementation.
		</para>
		<para>
			<constant>GL_INVALID_OPERATION</constant> is generated if <function>glCopyColorTable</function> is executed between the
			execution of <function moreinfo="refentry">glBegin</function> and the corresponding execution of <function
			moreinfo="refentry">glEnd</function>.
		</para>
	</refsect1>
	<refsect1 id="glCopyColorTable.3G-associated_gets">
		<title>Associated Gets</title>
		<para>
			<function moreinfo="refentry">glGetColorTable</function>, <function
			moreinfo="refentry">glGetColorTableParameter</function>
		</para>
	</refsect1>
	<refsect1 id="glCopyColorTable.3G-see_also">
		<title>See Also</title>
		<para>
			<simplelist type="inline">
				<member><citerefentry>
					<refentrytitle>glColorTable</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glColorTableParameter</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glReadPixels</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
			</simplelist>
		</para>
	</refsect1>
</refentry>
