<refentry id="glRasterPos.3G">
	<refmeta id="glRasterPos.3G-meta">
		<refentrytitle>glRasterPos</refentrytitle>
		<manvolnum>3G</manvolnum>
	</refmeta>
	<refnamediv id="glRasterPos.3G-name">
		<refname>glRasterPos2d</refname>
		<refname>glRasterPos2f</refname>
		<refname>glRasterPos2i</refname>
		<refname>glRasterPos2s</refname>
		<refname>glRasterPos3d</refname>
		<refname>glRasterPos3f</refname>
		<refname>glRasterPos3i</refname>
		<refname>glRasterPos3s</refname>
		<refname>glRasterPos4d</refname>
		<refname>glRasterPos4f</refname>
		<refname>glRasterPos4i</refname>
		<refname>glRasterPos4s</refname>
		<refname>glRasterPos2dv</refname>
		<refname>glRasterPos2fv</refname>
		<refname>glRasterPos2iv</refname>
		<refname>glRasterPos2sv</refname>
		<refname>glRasterPos3dv</refname>
		<refname>glRasterPos3fv</refname>
		<refname>glRasterPos3iv</refname>
		<refname>glRasterPos3sv</refname>
		<refname>glRasterPos4dv</refname>
		<refname>glRasterPos4fv</refname>
		<refname>glRasterPos4iv</refname>
		<refname>glRasterPos4sv</refname>
		<refpurpose>specify the raster position for pixel operations</refpurpose>
	</refnamediv>
	<refsynopsisdiv id="glRasterPos.3G-c_spec">
		<title>C Specification</title>
		<funcsynopsis>
			<funcprototype>
				<funcdef>void&nbsp;<function>glRasterPos2d</function></funcdef>
				<paramdef>GLdouble&nbsp;<parameter>x</parameter></paramdef>
				<paramdef>GLdouble&nbsp;<parameter>y</parameter></paramdef>
			</funcprototype>
			<funcprototype>
				<funcdef>void&nbsp;<function>glRasterPos2f</function></funcdef>
				<paramdef>GLfloat&nbsp;<parameter>x</parameter></paramdef>
				<paramdef>GLfloat&nbsp;<parameter>y</parameter></paramdef>
			</funcprototype>
			<funcprototype>
				<funcdef>void&nbsp;<function>glRasterPos2i</function></funcdef>
				<paramdef>GLint&nbsp;<parameter>x</parameter></paramdef>
				<paramdef>GLint&nbsp;<parameter>y</parameter></paramdef>
			</funcprototype>
			<funcprototype>
				<funcdef>void&nbsp;<function>glRasterPos2s</function></funcdef>
				<paramdef>GLshort&nbsp;<parameter>x</parameter></paramdef>
				<paramdef>GLshort&nbsp;<parameter>y</parameter></paramdef>
			</funcprototype>
			<funcprototype>
				<funcdef>void&nbsp;<function>glRasterPos3d</function></funcdef>
				<paramdef>GLdouble&nbsp;<parameter>x</parameter></paramdef>
				<paramdef>GLdouble&nbsp;<parameter>y</parameter></paramdef>
				<paramdef>GLdouble&nbsp;<parameter>z</parameter></paramdef>
			</funcprototype>
			<funcprototype>
				<funcdef>void&nbsp;<function>glRasterPos3f</function></funcdef>
				<paramdef>GLfloat&nbsp;<parameter>x</parameter></paramdef>
				<paramdef>GLfloat&nbsp;<parameter>y</parameter></paramdef>
				<paramdef>GLfloat&nbsp;<parameter>z</parameter></paramdef>
			</funcprototype>
			<funcprototype>
				<funcdef>void&nbsp;<function>glRasterPos3i</function></funcdef>
				<paramdef>GLint&nbsp;<parameter>x</parameter></paramdef>
				<paramdef>GLint&nbsp;<parameter>y</parameter></paramdef>
				<paramdef>GLint&nbsp;<parameter>z</parameter></paramdef>
			</funcprototype>
			<funcprototype>
				<funcdef>void&nbsp;<function>glRasterPos3s</function></funcdef>
				<paramdef>GLshort&nbsp;<parameter>x</parameter></paramdef>
				<paramdef>GLshort&nbsp;<parameter>y</parameter></paramdef>
				<paramdef>GLshort&nbsp;<parameter>z</parameter></paramdef>
			</funcprototype>
			<funcprototype>
				<funcdef>void&nbsp;<function>glRasterPos4d</function></funcdef>
				<paramdef>GLdouble&nbsp;<parameter>x</parameter></paramdef>
				<paramdef>GLdouble&nbsp;<parameter>y</parameter></paramdef>
				<paramdef>GLdouble&nbsp;<parameter>z</parameter></paramdef>
				<paramdef>GLdouble&nbsp;<parameter>w</parameter></paramdef>
			</funcprototype>
			<funcprototype>
				<funcdef>void&nbsp;<function>glRasterPos4f</function></funcdef>
				<paramdef>GLfloat&nbsp;<parameter>x</parameter></paramdef>
				<paramdef>GLfloat&nbsp;<parameter>y</parameter></paramdef>
				<paramdef>GLfloat&nbsp;<parameter>z</parameter></paramdef>
				<paramdef>GLfloat&nbsp;<parameter>w</parameter></paramdef>
			</funcprototype>
			<funcprototype>
				<funcdef>void&nbsp;<function>glRasterPos4i</function></funcdef>
				<paramdef>GLint&nbsp;<parameter>x</parameter></paramdef>
				<paramdef>GLint&nbsp;<parameter>y</parameter></paramdef>
				<paramdef>GLint&nbsp;<parameter>z</parameter></paramdef>
				<paramdef>GLint&nbsp;<parameter>w</parameter></paramdef>
			</funcprototype>
			<funcprototype>
				<funcdef>void&nbsp;<function>glRasterPos4s</function></funcdef>
				<paramdef>GLshort&nbsp;<parameter>x</parameter></paramdef>
				<paramdef>GLshort&nbsp;<parameter>y</parameter></paramdef>
				<paramdef>GLshort&nbsp;<parameter>z</parameter></paramdef>
				<paramdef>GLshort&nbsp;<parameter>w</parameter></paramdef>
			</funcprototype>
		</funcsynopsis>
	</refsynopsisdiv>
	<refsect1 id="glRasterPos.3G-parameters">
		<title>Parameters</title>
		<variablelist>
			<varlistentry>
				<term><parameter>x</parameter></term>
				<term><parameter>y</parameter></term>
				<term><parameter>z</parameter></term>
				<term><parameter>w</parameter></term>
				<listitem>
					<simpara>
						Specify the <parameter>x</parameter>, <parameter>y</parameter>, <parameter>z</parameter>, and
						<parameter>w</parameter> object coordinates (if present) for the raster position.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsect1>
	<refsynopsisdiv id="glRasterPos.3G-c_spec-v">
		<title>C Specification</title>
		<funcsynopsis>
			<funcprototype>
				<funcdef>void&nbsp;<function>glRasterPos2dv</function></funcdef>
				<paramdef>const&nbsp;GLdouble&nbsp;*<parameter>v</parameter></paramdef>
			</funcprototype>
			<funcprototype>
				<funcdef>void&nbsp;<function>glRasterPos2fv</function></funcdef>
				<paramdef>const&nbsp;GLfloat&nbsp;*<parameter>v</parameter></paramdef>
			</funcprototype>
			<funcprototype>
				<funcdef>void&nbsp;<function>glRasterPos2iv</function></funcdef>
				<paramdef>const&nbsp;GLint&nbsp;*<parameter>v</parameter></paramdef>
			</funcprototype>
			<funcprototype>
				<funcdef>void&nbsp;<function>glRasterPos2sv</function></funcdef>
				<paramdef>const&nbsp;GLshort&nbsp;*<parameter>v</parameter></paramdef>
			</funcprototype>
			<funcprototype>
				<funcdef>void&nbsp;<function>glRasterPos3dv</function></funcdef>
				<paramdef>const&nbsp;GLdouble&nbsp;*<parameter>v</parameter></paramdef>
			</funcprototype>
			<funcprototype>
				<funcdef>void&nbsp;<function>glRasterPos3fv</function></funcdef>
				<paramdef>const&nbsp;GLfloat&nbsp;*<parameter>v</parameter></paramdef>
			</funcprototype>
			<funcprototype>
				<funcdef>void&nbsp;<function>glRasterPos3iv</function></funcdef>
				<paramdef>const&nbsp;GLint&nbsp;*<parameter>v</parameter></paramdef>
			</funcprototype>
			<funcprototype>
				<funcdef>void&nbsp;<function>glRasterPos3sv</function></funcdef>
				<paramdef>const&nbsp;GLshort&nbsp;*<parameter>v</parameter></paramdef>
			</funcprototype>
			<funcprototype>
				<funcdef>void&nbsp;<function>glRasterPos4dv</function></funcdef>
				<paramdef>const&nbsp;GLdouble&nbsp;*<parameter>v</parameter></paramdef>
			</funcprototype>
			<funcprototype>
				<funcdef>void&nbsp;<function>glRasterPos4fv</function></funcdef>
				<paramdef>const&nbsp;GLfloat&nbsp;*<parameter>v</parameter></paramdef>
			</funcprototype>
			<funcprototype>
				<funcdef>void&nbsp;<function>glRasterPos4iv</function></funcdef>
				<paramdef>const&nbsp;GLint&nbsp;*<parameter>v</parameter></paramdef>
			</funcprototype>
			<funcprototype>
				<funcdef>void&nbsp;<function>glRasterPos4sv</function></funcdef>
				<paramdef>const&nbsp;GLshort&nbsp;*<parameter>v</parameter></paramdef>
			</funcprototype>
		</funcsynopsis>
	</refsynopsisdiv>
	<refsect1 id="glRasterPos.3G-parameters-v">
		<title>Parameters</title>
		<variablelist>
			<varlistentry>
				<term><parameter>v</parameter></term>
				<listitem>
					<simpara>
						Specifies a pointer to an array of two, three, or four elements, specifying <parameter>x</parameter>,
						<parameter>y</parameter>, <parameter>z</parameter>, and <parameter>w</parameter> coordinates, respectively.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsect1>
	<refsect1 id="glRasterPos.3G-description">
		<title>Description</title>
		<para>
			The GL maintains a 3D position in window coordinates. This position, called the raster position, is used to position
			pixel and bitmap write operations. It is maintained with subpixel accuracy. See <citerefentry>
				<refentrytitle>glBitmap</refentrytitle>
				<manvolnum>3G</manvolnum>
			</citerefentry>, <function moreinfo="refentry">glDrawPixels</function>, and <function
			moreinfo="refentry">glCopyPixels</function>.
		</para>
		<para>
			The current raster position consists of three window coordinates (<inlineequation>
				<mml:math>
					<mml:mi>x</mml:mi>
				</mml:math>
			</inlineequation>, <inlineequation>
				<mml:math>
					<mml:mi>y</mml:mi>
				</mml:math>
			</inlineequation>, <inlineequation>
				<mml:math>
					<mml:mi>z</mml:mi>
				</mml:math>
			</inlineequation>), a clip coordinate value (<inlineequation>
				<mml:math>
					<mml:mi>w</mml:mi>
				</mml:math>
			</inlineequation>), an eye coordinate distance, a valid bit, and associated color data and texture coordinates. The
			<inlineequation>
				<mml:math>
					<mml:mi>w</mml:mi>
				</mml:math>
			</inlineequation> coordinate is a clip coordinate, because <inlineequation>
				<mml:math>
					<mml:mi>w</mml:mi>
				</mml:math>
			</inlineequation> is not projected to window coordinates. <function moreinfo="refentry">glRasterPos4</function>
			specifies object coordinates <inlineequation>
				<mml:math>
					<mml:mi>x</mml:mi>
				</mml:math>
			</inlineequation>, <inlineequation>
				<mml:math>
					<mml:mi>y</mml:mi>
				</mml:math>
			</inlineequation>, <inlineequation>
				<mml:math>
					<mml:mi>z</mml:mi>
				</mml:math>
			</inlineequation>, and <inlineequation>
				<mml:math>
					<mml:mi>w</mml:mi>
				</mml:math>
			</inlineequation> explicitly. <function moreinfo="refentry">glRasterPos3</function> specifies object coordinate
			<inlineequation>
				<mml:math>
					<mml:mi>x</mml:mi>
				</mml:math>
			</inlineequation>, <inlineequation>
				<mml:math>
					<mml:mi>y</mml:mi>
				</mml:math>
			</inlineequation>, and <inlineequation>
				<mml:math>
					<mml:mi>z</mml:mi>
				</mml:math>
			</inlineequation> explicitly, while <inlineequation>
				<mml:math>
					<mml:mi>w</mml:mi>
				</mml:math>
			</inlineequation> is implicitly set to 1. <function moreinfo="refentry">glRasterPos2</function> uses the argument
			values for <inlineequation>
				<mml:math>
					<mml:mi>x</mml:mi>
				</mml:math>
			</inlineequation> and <inlineequation>
				<mml:math>
					<mml:mi>y</mml:mi>
				</mml:math>
			</inlineequation> while implicitly setting <inlineequation>
				<mml:math>
					<mml:mi>z</mml:mi>
				</mml:math>
			</inlineequation> and <inlineequation>
				<mml:math>
					<mml:mi>w</mml:mi>
				</mml:math>
			</inlineequation> to 0 and 1.
		</para>
		<para>
			The object coordinates presented by <function moreinfo="refentry">glRasterPos</function> are treated just like those of
			a <function moreinfo="refentry">glVertex</function> command: They are transformed by the current modelview and
			projection matrices and passed to the clipping stage. If the vertex is not culled, then it is projected and scaled to
			window coordinates, which become the new current raster position, and the
			<constant>GL_CURRENT_RASTER_POSITION_VALID</constant> flag is set. If the vertex <emphasis>is</emphasis>culled, then
			the valid bit is cleared and the current raster position and associated color and texture coordinates are undefined.
		</para>
		<para>
			The current raster position also includes some associated color data and texture coordinates. If lighting is enabled,
			then <constant>GL_CURRENT_RASTER_COLOR</constant> (in RGBA mode) or <constant>GL_CURRENT_RASTER_INDEX</constant> (in
			color index mode) is set to the color produced by the lighting calculation (see <citerefentry>
				<refentrytitle>glLight</refentrytitle>
				<manvolnum>3G</manvolnum>
			</citerefentry>, <function moreinfo="refentry">glLightModel</function>, and <function
			moreinfo="refentry">glShadeModel</function>). If lighting is disabled, current color (in RGBA mode, state variable
			<constant>GL_CURRENT_COLOR</constant>) or color index (in color index mode, state variable
			<constant>GL_CURRENT_INDEX</constant>) is used to update the current raster color.
		</para>
		<para>
			Likewise, <constant>GL_CURRENT_RASTER_TEXTURE_COORDS</constant> is updated as a function of
			<constant>GL_CURRENT_TEXTURE_COORDS</constant>, based on the texture matrix and the texture generation functions (see
			<citerefentry>
				<refentrytitle>glTexGen</refentrytitle>
				<manvolnum>3G</manvolnum>
			</citerefentry>). Finally, the distance from the origin of the eye coordinate system to the vertex as transformed by
			only the modelview matrix replaces <constant>GL_CURRENT_RASTER_DISTANCE</constant>.
		</para>
		<para>
			Initially, the current raster position is (0, 0, 0, 1), the current raster distance is 0, the valid bit is set, the
			associated RGBA color is (1, 1, 1, 1), the associated color index is 1, and the associated texture coordinates are (0,
			0, 0, 1). In RGBA mode, <constant>GL_CURRENT_RASTER_INDEX</constant> is always 1; in color index mode, the current
			raster RGBA color always maintains its initial value.
		</para>
	</refsect1>
	<refsect1 id="glRasterPos.3G-notes">
		<title>Notes</title>
		<para>
			The raster position is modified both by <function moreinfo="refentry">glRasterPos</function> and by <function
			moreinfo="refentry">glBitmap</function>.
		</para>
		<para>
			When the raster position coordinates are invalid, drawing commands that are based on the raster position are ignored
			(that is, they do not result in changes to GL state).
		</para>
		<para>
			Calling <function moreinfo="refentry">glDrawElements</function>, or <function
			moreinfo="refentry">glDrawRangeElements</function> may leave the current color or index indeterminate. If <function
			moreinfo="refentry">glRasterPos</function> is executed while the current color or index is indeterminate, the current
			raster color or current raster index remains indeterminate.
		</para>
		<para>
			To set a valid raster position outside the viewport, first set a valid raster position, then call <function
			moreinfo="refentry">glBitmap</function> with <constant>NULL</constant> as the <parameter>bitmap</parameter> parameter.
		</para>
		<para>
			When the <constant>GL_ARB_imaging</constant> extension is supported, there are distinct raster texture coordinates for
			each texture unit. Each texture unit's current ratster texture coordinates are updated by <function
			moreinfo="refentry">glRasterPos</function>.
		</para>
	</refsect1>
	<refsect1 id="glRasterPos.3G-errors">
		<title>Errors</title>
		<para>
			<constant>GL_INVALID_OPERATION</constant> is generated if <function moreinfo="refentry">glRasterPos</function> is
			executed between the execution of <function moreinfo="refentry">glBegin</function> and the corresponding execution of
			<function moreinfo="refentry">glEnd</function>.
		</para>
	</refsect1>
	<refsect1 id="glRasterPos.3G-associated_gets">
		<title>Associated Gets</title>
		<para>
			<function moreinfo="refentry">glGet</function> with argument <constant>GL_CURRENT_RASTER_POSITION</constant>
		</para>
		<para>
			<function moreinfo="refentry">glGet</function> with argument <constant>GL_CURRENT_RASTER_POSITION_VALID</constant>
		</para>
		<para>
			<function moreinfo="refentry">glGet</function> with argument <constant>GL_CURRENT_RASTER_DISTANCE</constant>
		</para>
		<para>
			<function moreinfo="refentry">glGet</function> with argument <constant>GL_CURRENT_RASTER_COLOR</constant>
		</para>
		<para>
			<function moreinfo="refentry">glGet</function> with argument <constant>GL_CURRENT_RASTER_INDEX</constant>
		</para>
		<para>
			<function moreinfo="refentry">glGet</function> with argument <constant>GL_CURRENT_RASTER_TEXTURE_COORDS</constant>
		</para>
	</refsect1>
	<refsect1 id="glRasterPos.3G-see_also">
		<title>See Also</title>
		<para>
			<simplelist type="inline">
				<member><citerefentry>
					<refentrytitle>glBitmap</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glCopyPixels</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glDrawArrays</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glDrawElements</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glDrawRangeElements</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glDrawPixels</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexCoord</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexGen</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glVertex</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
			</simplelist>
		</para>
	</refsect1>
</refentry>
