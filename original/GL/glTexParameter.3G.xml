<refentry id="glTexParameter.3G">
	<refmeta id="glTexParameter.3G-meta">
		<refentrytitle>glTexParameter</refentrytitle>
		<manvolnum>3G</manvolnum>
	</refmeta>
	<refnamediv id="glTexParameter.3G-name">
		<refname>glTexParameterf</refname>
		<refname>glTexParameteri</refname>
		<refname>glTexParameterfv</refname>
		<refname>glTexParameteriv</refname>
		<refpurpose>set texture parameters</refpurpose>
	</refnamediv>
	<refsynopsisdiv id="glTexParameter.3G-c_spec">
		<title>C Specification</title>
		<funcsynopsis>
			<funcprototype>
				<funcdef>void&nbsp;<function>glTexParameterf</function></funcdef>
				<paramdef>GLenum&nbsp;<parameter>target</parameter></paramdef>
				<paramdef>GLenum&nbsp;<parameter>pname</parameter></paramdef>
				<paramdef>GLfloat&nbsp;<parameter>param</parameter></paramdef>
			</funcprototype>
			<funcprototype>
				<funcdef>void&nbsp;<function>glTexParameteri</function></funcdef>
				<paramdef>GLenum&nbsp;<parameter>target</parameter></paramdef>
				<paramdef>GLenum&nbsp;<parameter>pname</parameter></paramdef>
				<paramdef>GLint&nbsp;<parameter>param</parameter></paramdef>
			</funcprototype>
		</funcsynopsis>
	</refsynopsisdiv>
	<refsect1 id="glTexParameter.3G-parameters">
		<title>Parameters</title>
		<variablelist>
			<varlistentry>
				<term><parameter>target</parameter></term>
				<listitem>
					<simpara>
						Specifies the target texture, which must be either <constant>GL_TEXTURE_1D</constant>,
						<constant>GL_TEXTURE_2D</constant>, or <constant>GL_TEXTURE_3D</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>pname</parameter></term>
				<listitem>
					<simpara>
						Specifies the symbolic name of a single-valued texture parameter. <parameter>pname</parameter> can be one
						of the following: <constant>GL_TEXTURE_MIN_FILTER</constant>, <constant>GL_TEXTURE_MAG_FILTER</constant>,
						<constant>GL_TEXTURE_MIN_LOD</constant>, <constant>GL_TEXTURE_MAX_LOD</constant>,
						<constant>GL_TEXTURE_BASE_LEVEL</constant>, <constant>GL_TEXTURE_MAX_LEVEL</constant>,
						<constant>GL_TEXTURE_WRAP_S</constant>, <constant>GL_TEXTURE_WRAP_T</constant>,
						<constant>GL_TEXTURE_WRAP_R</constant>, or <constant>GL_TEXTURE_PRIORITY</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>param</parameter></term>
				<listitem>
					<simpara>
						Specifies the value of <parameter>pname</parameter>.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsect1>
	<refsynopsisdiv id="glTexParameter.3G-c_spec-v">
		<title>C Specification</title>
		<funcsynopsis>
			<funcprototype>
				<funcdef>void&nbsp;<function>glTexParameterfv</function></funcdef>
				<paramdef>GLenum&nbsp;<parameter>target</parameter></paramdef>
				<paramdef>GLenum&nbsp;<parameter>pname</parameter></paramdef>
				<paramdef>const&nbsp;GLfloat&nbsp;*<parameter>params</parameter></paramdef>
			</funcprototype>
			<funcprototype>
				<funcdef>void&nbsp;<function>glTexParameteriv</function></funcdef>
				<paramdef>GLenum&nbsp;<parameter>target</parameter></paramdef>
				<paramdef>GLenum&nbsp;<parameter>pname</parameter></paramdef>
				<paramdef>const&nbsp;GLint&nbsp;*<parameter>params</parameter></paramdef>
			</funcprototype>
		</funcsynopsis>
	</refsynopsisdiv>
	<refsect1 id="glTexParameter.3G-parameters-v">
		<title>Parameters</title>
		<variablelist>
			<varlistentry>
				<term><parameter>target</parameter></term>
				<listitem>
					<simpara>
						Specifies the target texture, which must be either <constant>GL_TEXTURE_1D</constant>,
						<constant>GL_TEXTURE_2D</constant> or <constant>GL_TEXTURE_3D</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>pname</parameter></term>
				<listitem>
					<simpara>
						Specifies the symbolic name of a texture parameter. <parameter>pname</parameter> can be one of the
						following: <constant>GL_TEXTURE_MIN_FILTER</constant>, <constant>GL_TEXTURE_MAG_FILTER</constant>,
						<constant>GL_TEXTURE_MIN_LOD</constant>, <constant>GL_TEXTURE_MAX_LOD</constant>,
						<constant>GL_TEXTURE_BASE_LEVEL</constant>, <constant>GL_TEXTURE_MAX_LEVEL</constant>,
						<constant>GL_TEXTURE_WRAP_S</constant>, <constant>GL_TEXTURE_WRAP_T</constant>,
						<constant>GL_TEXTURE_WRAP_R</constant>, <constant>GL_TEXTURE_BORDER_COLOR</constant>, or
						<constant>GL_TEXTURE_PRIORITY</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>params</parameter></term>
				<listitem>
					<simpara>
						Specifies a pointer to an array where the value or values of <parameter>pname</parameter> are stored.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsect1>
	<refsect1 id="glTexParameter.3G-description">
		<title>Description</title>
		<para>
			Texture mapping is a technique that applies an image onto an object's surface as if the image were a decal or
			cellophane shrink-wrap. The image is created in texture space, with an (<inlineequation>
				<mml:math>
					<mml:mi>s</mml:mi>
				</mml:math>
			</inlineequation>, <inlineequation>
				<mml:math>
					<mml:mi>t</mml:mi>
				</mml:math>
			</inlineequation>) coordinate system. A texture is a one- or two-dimensional image and a set of parameters that
			determine how samples are derived from the image.
		</para>
		<para>
			<function moreinfo="refentry">glTexParameter</function> assigns the value or values in <parameter>params</parameter> to
			the texture parameter specified as <parameter>pname</parameter>. <parameter>target</parameter> defines the target
			texture, either <constant>GL_TEXTURE_1D</constant>, <constant>GL_TEXTURE_2D</constant>, or
			<constant>GL_TEXTURE_3D</constant>. The following symbols are accepted in <parameter>pname</parameter>:
		</para>
		<variablelist>
			<varlistentry>
				<term><constant>GL_TEXTURE_MIN_FILTER</constant></term>
				<listitem>
					<simpara>
						The texture minifying function is used whenever the pixel being textured maps to an area greater than one
						texture element. There are six defined minifying functions. Two of them use the nearest one or nearest four
						texture elements to compute the texture value. The other four use mipmaps.
					</simpara>
					<simpara>
						A mipmap is an ordered set of arrays representing the same image at progressively lower resolutions. If the
						texture has dimensions <inlineequation>
							<mml:math>
								<mml:mrow>
									<mml:msup>
										<mml:mn>2</mml:mn>
										<mml:mi>n</mml:mi>
									</mml:msup>
									<mml:mo>&times;</mml:mo>
									<mml:msup>
										<mml:mn>2</mml:mn>
										<mml:mi>m</mml:mi>
									</mml:msup>
								</mml:mrow>
							</mml:math>
						</inlineequation>, there are <inlineequation>
							<mml:math>
								<mml:mrow>
									<mml:mi>max</mml:mi>
									<mml:mo>(</mml:mo>
									<mml:mi>n</mml:mi>
									<mml:mi>m</mml:mi>
									<mml:mo>)</mml:mo>
									<mml:mo>+</mml:mo>
									<mml:mn>1</mml:mn>
								</mml:mrow>
							</mml:math>
						</inlineequation> mipmaps. The first mipmap is the original texture, with dimensions <inlineequation>
							<mml:math>
								<mml:mrow>
									<mml:msup>
										<mml:mn>2</mml:mn>
										<mml:mi>n</mml:mi>
									</mml:msup>
									<mml:mo>&times;</mml:mo>
									<mml:msup>
										<mml:mn>2</mml:mn>
										<mml:mi>m</mml:mi>
									</mml:msup>
								</mml:mrow>
							</mml:math>
						</inlineequation>. Each subsequent mipmap has dimensions <inlineequation>
							<mml:math>
								<mml:mrow>
									<mml:msup>
										<mml:mn>2</mml:mn>
										<mml:mrow>
											<mml:mi>k</mml:mi>
											<mml:mo>-</mml:mo>
											<mml:mn>1</mml:mn>
										</mml:mrow>
									</mml:msup>
									<mml:mo>&times;</mml:mo>
									<mml:msup>
										<mml:mn>2</mml:mn>
										<mml:mrow>
											<mml:mi>l</mml:mi>
											<mml:mo>-</mml:mo>
											<mml:mn>1</mml:mn>
										</mml:mrow>
									</mml:msup>
								</mml:mrow>
							</mml:math>
						</inlineequation>, where <inlineequation>
							<mml:math>
								<mml:mrow>
									<mml:msup>
										<mml:mn>2</mml:mn>
										<mml:mi>k</mml:mi>
									</mml:msup>
									<mml:mo>&times;</mml:mo>
									<mml:msup>
										<mml:mn>2</mml:mn>
										<mml:mi>l</mml:mi>
									</mml:msup>
								</mml:mrow>
							</mml:math>
						</inlineequation> are the dimensions of the previous mipmap, until either <inlineequation>
							<mml:math>
								<mml:mrow>
									<mml:mi>k</mml:mi>
									<mml:mo>=</mml:mo>
									<mml:mn>0</mml:mn>
								</mml:mrow>
							</mml:math>
						</inlineequation> or <inlineequation>
							<mml:math>
								<mml:mrow>
									<mml:mi>l</mml:mi>
									<mml:mo>=</mml:mo>
									<mml:mn>0</mml:mn>
								</mml:mrow>
							</mml:math>
						</inlineequation>. At that point, subsequent mipmaps have dimension <inlineequation>
							<mml:math>
								<mml:mrow>
									<mml:mn>1</mml:mn>
									<mml:mo>&times;</mml:mo>
									<mml:msup>
										<mml:mn>2</mml:mn>
										<mml:mrow>
											<mml:mi>l</mml:mi>
											<mml:mo>-</mml:mo>
											<mml:mn>1</mml:mn>
										</mml:mrow>
									</mml:msup>
								</mml:mrow>
							</mml:math>
						</inlineequation> or <inlineequation>
							<mml:math>
								<mml:mrow>
									<mml:msup>
										<mml:mn>2</mml:mn>
										<mml:mrow>
											<mml:mi>k</mml:mi>
											<mml:mo>-</mml:mo>
											<mml:mn>1</mml:mn>
										</mml:mrow>
									</mml:msup>
									<mml:mo>&times;</mml:mo>
									<mml:mn>1</mml:mn>
								</mml:mrow>
							</mml:math>
						</inlineequation> until the final mipmap, which has dimension <inlineequation>
							<mml:math>
								<mml:mrow>
									<mml:mn>1</mml:mn>
									<mml:mo>&times;</mml:mo>
									<mml:mn>1</mml:mn>
								</mml:mrow>
							</mml:math>
						</inlineequation>. To define the mipmaps, call <function moreinfo="refentry">glTexImage1D</function>,
						<function moreinfo="refentry">glTexImage2D</function>, <function
						moreinfo="refentry">glTexImage3D</function>, <function moreinfo="refentry">glCopyTexImage1D</function>, or
						<function moreinfo="refentry">glCopyTexImage2D</function> with the <parameter>level</parameter> argument
						indicating the order of the mipmaps. Level 0 is the original texture; level <inlineequation>
							<mml:math>
								<mml:mrow>
									<mml:mi>max</mml:mi>
									<mml:mo>(</mml:mo>
									<mml:mi>n</mml:mi>
									<mml:mi>m</mml:mi>
									<mml:mo>)</mml:mo>
								</mml:mrow>
							</mml:math>
						</inlineequation> is the final <inlineequation>
							<mml:math>
								<mml:mrow>
									<mml:mn>1</mml:mn>
									<mml:mo>&times;</mml:mo>
									<mml:mn>1</mml:mn>
								</mml:mrow>
							</mml:math>
						</inlineequation> mipmap.
					</simpara>
					<simpara>
						<parameter>params</parameter> supplies a function for minifying the texture as one of the following:
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_NEAREST</constant></term>
				<listitem>
					<simpara>
						Returns the value of the texture element that is nearest (in Manhattan distance) to the center of the pixel
						being textured.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_LINEAR</constant></term>
				<listitem>
					<simpara>
						Returns the weighted average of the four texture elements that are closest to the center of the pixel being
						textured. These can include border texture elements, depending on the values of
						<constant>GL_TEXTURE_WRAP_S</constant> and <constant>GL_TEXTURE_WRAP_T</constant>, and on the exact
						mapping.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_NEAREST_MIPMAP_NEAREST</constant></term>
				<listitem>
					<simpara>
						Chooses the mipmap that most closely matches the size of the pixel being textured and uses the
						<constant>GL_NEAREST</constant> criterion (the texture element nearest to the center of the pixel) to
						produce a texture value.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_LINEAR_MIPMAP_NEAREST</constant></term>
				<listitem>
					<simpara>
						Chooses the mipmap that most closely matches the size of the pixel being textured and uses the
						<constant>GL_LINEAR</constant> criterion (a weighted average of the four texture elements that are closest
						to the center of the pixel) to produce a texture value.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_NEAREST_MIPMAP_LINEAR</constant></term>
				<listitem>
					<simpara>
						Chooses the two mipmaps that most closely match the size of the pixel being textured and uses the
						<constant>GL_NEAREST</constant> criterion (the texture element nearest to the center of the pixel) to
						produce a texture value from each mipmap. The final texture value is a weighted average of those two
						values.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_LINEAR_MIPMAP_LINEAR</constant></term>
				<listitem>
					<simpara>
						Chooses the two mipmaps that most closely match the size of the pixel being textured and uses the
						<constant>GL_LINEAR</constant> criterion (a weighted average of the four texture elements that are closest
						to the center of the pixel) to produce a texture value from each mipmap. The final texture value is a
						weighted average of those two values.
					</simpara>
					<simpara>
						As more texture elements are sampled in the minification process, fewer aliasing artifacts will be
						apparent. While the <constant>GL_NEAREST</constant> and <constant>GL_LINEAR</constant> minification
						functions can be faster than the other four, they sample only one or four texture elements to determine the
						texture value of the pixel being rendered and can produce moire patterns or ragged transitions. The initial
						value of <constant>GL_TEXTURE_MIN_FILTER</constant> is <constant>GL_NEAREST_MIPMAP_LINEAR</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_TEXTURE_MAG_FILTER</constant></term>
				<listitem>
					<simpara>
						The texture magnification function is used when the pixel being textured maps to an area less than or equal
						to one texture element. It sets the texture magnification function to either
						<constant>GL_NEAREST</constant> or <constant>GL_LINEAR</constant> (see below).
						<constant>GL_NEAREST</constant> is generally faster than <constant>GL_LINEAR</constant>, but it can produce
						textured images with sharper edges because the transition between texture elements is not as smooth. The
						initial value of <constant>GL_TEXTURE_MAG_FILTER</constant> is <constant>GL_LINEAR</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_NEAREST</constant></term>
				<listitem>
					<simpara>
						Returns the value of the texture element that is nearest (in Manhattan distance) to the center of the pixel
						being textured.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_LINEAR</constant></term>
				<listitem>
					<simpara>
						Returns the weighted average of the four texture elements that are closest to the center of the pixel being
						textured. These can include border texture elements, depending on the values of
						<constant>GL_TEXTURE_WRAP_S</constant> and <constant>GL_TEXTURE_WRAP_T</constant>, and on the exact
						mapping.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
		<variablelist>
			<varlistentry>
				<term><constant>GL_TEXTURE_MIN_LOD</constant></term>
				<listitem>
					<simpara>
						Sets the minimum level-of-detail parameter. This floating-point value limits the selection of highest
						resolution mipmap (lowest mipmap level). The initial value is -1000.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
		<variablelist>
			<varlistentry>
				<term><constant>GL_TEXTURE_MAX_LOD</constant></term>
				<listitem>
					<simpara>
						Sets the maximum level-of-detail parameter. This floating-point value limits the selection of the lowest
						resolution mipmap (highest mipmap level). The initial value is 1000.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
		<variablelist>
			<varlistentry>
				<term><constant>GL_TEXTURE_BASE_LEVEL</constant></term>
				<listitem>
					<simpara>
						Specifies the index of the lowest defined mipmap level. This is an integer value. The initial value is 0.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
		<variablelist>
			<varlistentry>
				<term><constant>GL_TEXTURE_MAX_LEVEL</constant></term>
				<listitem>
					<simpara>
						Sets the index of the highest defined mipmap level. This is an integer value. The initial value is 1000.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
		<variablelist>
			<varlistentry>
				<term><constant>GL_TEXTURE_WRAP_S</constant></term>
				<listitem>
					<simpara>
						Sets the wrap parameter for texture coordinate <inlineequation>
							<mml:math>
								<mml:mi>s</mml:mi>
							</mml:math>
						</inlineequation> to either <constant>GL_CLAMP</constant>, <constant>GL_CLAMP_TO_EDGE</constant>, or
						<constant>GL_REPEAT</constant>. <constant>GL_CLAMP</constant> causes <inlineequation>
							<mml:math>
								<mml:mi>s</mml:mi>
							</mml:math>
						</inlineequation> coordinates to be clamped to the range [0,1] and is useful for preventing wrapping
						artifacts when mapping a single image onto an object. <constant>GL_CLAMP_TO_EDGE</constant> causes
						<inlineequation>
							<mml:math>
								<mml:mi>s</mml:mi>
							</mml:math>
						</inlineequation> coordinates to be clamped to the range <inlineequation>
							<mml:math>
								<mml:mrow>
									<mml:mo>[</mml:mo>
									<mml:mfrac>
										<mml:mn>1</mml:mn>
										<mml:mo>2N</mml:mo>
									</mml:mfrac>
									<mml:mn>1</mml:mn>
									<mml:mo>-</mml:mo>
									<mml:mfrac>
										<mml:mn>1</mml:mn>
										<mml:mo>2N</mml:mo>
									</mml:mfrac>
									<mml:mo>]</mml:mo>
								</mml:mrow>
							</mml:math>
						</inlineequation>, where <inlineequation>
							<mml:math>
								<mml:mi>N</mml:mi>
							</mml:math>
						</inlineequation> is the size of the texture in the direction of clamping. <constant>GL_REPEAT</constant>
						causes the integer part of the <inlineequation>
							<mml:math>
								<mml:mi>s</mml:mi>
							</mml:math>
						</inlineequation> coordinate to be ignored; the GL uses only the fractional part, thereby creating a
						repeating pattern. Border texture elements are accessed only if wrapping is set to
						<constant>GL_CLAMP</constant>. Initially, <constant>GL_TEXTURE_WRAP_S</constant> is set to
						<constant>GL_REPEAT</constant>.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
		<variablelist>
			<varlistentry>
				<term><constant>GL_TEXTURE_WRAP_T</constant></term>
				<listitem>
					<simpara>
						Sets the wrap parameter for texture coordinate <inlineequation>
							<mml:math>
								<mml:mi>t</mml:mi>
							</mml:math>
						</inlineequation> to either <constant>GL_CLAMP</constant>, <constant>GL_CLAMP_TO_EDGE</constant>, or
						<constant>GL_REPEAT</constant>. See the discussion under <constant>GL_TEXTURE_WRAP_S</constant>. Initially,
						<constant>GL_TEXTURE_WRAP_T</constant> is set to <constant>GL_REPEAT</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_TEXTURE_WRAP_R</constant></term>
				<listitem>
					<simpara>
						Sets the wrap parameter for texture coordinate <inlineequation>
							<mml:math>
								<mml:mi>r</mml:mi>
							</mml:math>
						</inlineequation> to either <constant>GL_CLAMP</constant>, <constant>GL_CLAMP_TO_EDGE</constant>, or
						<constant>GL_REPEAT</constant>. See the discussion under <constant>GL_TEXTURE_WRAP_S</constant>. Initially,
						<constant>GL_TEXTURE_WRAP_R</constant> is set to <constant>GL_REPEAT</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_TEXTURE_BORDER_COLOR</constant></term>
				<listitem>
					<simpara>
						Sets a border color. <parameter>params</parameter> contains four values that comprise the RGBA color of the
						texture border. Integer color components are interpreted linearly such that the most positive integer maps
						to 1.0, and the most negative integer maps to -1.0. The values are clamped to the range [0,1] when they are
						specified. Initially, the border color is (0, 0, 0, 0).
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_TEXTURE_PRIORITY</constant></term>
				<listitem>
					<simpara>
						Specifies the texture residence priority of the currently bound texture. Permissible values are in the
						range [0,1]. See <function moreinfo="refentry">glPrioritizeTextures</function> and <function
						moreinfo="refentry">glBindTexture</function> for more information.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsect1>
	<refsect1 id="glTexParameter.3G-notes">
		<title>Notes</title>
		<para>
			<constant>GL_TEXTURE_3D</constant>, <constant>GL_TEXTURE_MIN_LOD</constant>, <constant>GL_TEXTURE_MAX_LOD</constant>,
			<constant>GL_TEXTURE_BASE_LEVEL</constant>, and <constant>GL_TEXTURE_MAX_LEVEL</constant> are only available if the GL
			version is 1.2 or greater.
		</para>
		<para>
			Suppose that a program has enabled texturing (by calling <function moreinfo="refentry">glEnable</function> with
			argument <constant>GL_TEXTURE_1D</constant>, <constant>GL_TEXTURE_2D</constant>, or <constant>GL_TEXTURE_3D</constant>)
			and has set <constant>GL_TEXTURE_MIN_FILTER</constant> to one of the functions that requires a mipmap. If either the
			dimensions of the texture images currently defined (with previous calls to <function
			moreinfo="refentry">glTexImage1D</function>, <function moreinfo="refentry">glTexImage2D</function>, <function
			moreinfo="refentry">glTexImage3D</function>, <function moreinfo="refentry">glCopyTexImage1D</function>, or <function
			moreinfo="refentry">glCopyTexImage2D</function>) do not follow the proper sequence for mipmaps (described above), or
			there are fewer texture images defined than are needed, or the set of texture images have differing numbers of texture
			components, then it is as if texture mapping were disabled.
		</para>
		<para>
			Linear filtering accesses the four nearest texture elements only in 2D textures. In 1D textures, linear filtering
			accesses the two nearest texture elements.
		</para>
		<para>
			When the <constant>GL_ARB_multitexture</constant> extension is supported, <function
			moreinfo="refentry">glTexParameter</function> specifies the texture parameters for the active texture unit, specified
			by calling <function moreinfo="refentry">glActiveTextureARB</function>.
		</para>
	</refsect1>
	<refsect1 id="glTexParameter.3G-errors">
		<title>Errors</title>
		<para>
			<constant>GL_INVALID_ENUM</constant> is generated if <parameter>target</parameter> or <parameter>pname</parameter> is
			not one of the accepted defined values.
		</para>
		<para>
			<constant>GL_INVALID_ENUM</constant> is generated if <parameter>params</parameter> should have a defined constant value
			(based on the value of <parameter>pname</parameter>) and does not.
		</para>
		<para>
			<constant>GL_INVALID_OPERATION</constant> is generated if <function moreinfo="refentry">glTexParameter</function> is
			executed between the execution of <function moreinfo="refentry">glBegin</function> and the corresponding execution of
			<function moreinfo="refentry">glEnd</function>.
		</para>
	</refsect1>
	<refsect1 id="glTexParameter.3G-associated_gets">
		<title>Associated Gets</title>
		<para>
			<function moreinfo="refentry">glGetTexParameter</function>
		</para>
		<para>
			<function moreinfo="refentry">glGetTexLevelParameter</function>
		</para>
	</refsect1>
	<refsect1 id="glTexParameter.3G-see_also">
		<title>See Also</title>
		<para>
			<simplelist type="inline">
				<member><citerefentry>
					<refentrytitle>glActiveTextureARB</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glBindTexture</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glCopyPixels</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glCopyTexImage1D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glCopyTexImage2D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glCopyTexSubImage1D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glCopyTexSubImage2D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glCopyTexSubImage3D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glDrawPixels</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glPixelStore</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glPixelTransfer</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glPrioritizeTextures</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexEnv</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexGen</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexImage1D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexImage2D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexImage3D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexSubImage1D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexSubImage2D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexSubImage3D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
			</simplelist>
		</para>
	</refsect1>
</refentry>
