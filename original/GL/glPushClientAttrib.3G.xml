<refentry id="glPushClientAttrib.3G">
	<refmeta id="glPushClientAttrib.3G-meta">
		<refentrytitle>glPushClientAttrib</refentrytitle>
		<manvolnum>3G</manvolnum>
	</refmeta>
	<refnamediv id="glPushClientAttrib.3G-name">
		<refname>glPushClientAttrib</refname>
		<refname>glPopClientAttrib</refname>
		<refpurpose>push and pop the client attribute stack</refpurpose>
	</refnamediv>
	<refsynopsisdiv id="glPushClientAttrib.3G-c_spec-push">
		<title>C Specification</title>
		<funcsynopsis>
			<funcprototype>
				<funcdef>void&nbsp;<function>glPushClientAttrib</function></funcdef>
				<paramdef>GLbitfield&nbsp;<parameter>mask</parameter></paramdef>
			</funcprototype>
		</funcsynopsis>
	</refsynopsisdiv>
	<refsect1 id="glPushClientAttrib.3G-parameters-push">
		<title>Parameters</title>
		<variablelist>
			<varlistentry>
				<term><parameter>mask</parameter></term>
				<listitem>
					<simpara>
						Specifies a mask that indicates which attributes to save. Values for <parameter>mask</parameter> are listed
						below.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsect1>
	<refsynopsisdiv id="glPushClientAttrib.3G-c_spec-pop">
		<title>C Specification</title>
		<funcsynopsis>
			<funcprototype>
				<funcdef>void&nbsp;<function>glPopClientAttrib</function></funcdef>
				<void/>
			</funcprototype>
		</funcsynopsis>
	</refsynopsisdiv>
	<refsect1 id="glPushClientAttrib.3G-description">
		<title>Description</title>
		<para>
			<function>glPushClientAttrib</function> takes one argument, a mask that indicates which groups of client-state
			variables to save on the client attribute stack. Symbolic constants are used to set bits in the mask.
			<parameter>mask</parameter> is typically constructed by OR'ing several of these constants together. The special mask
			<constant>GL_CLIENT_ALL_ATTRIB_BITS</constant> can be used to save all stackable client state.
		</para>
		<para>
			The symbolic mask constants and their associated GL client state are as follows (the second column lists which
			attributes are saved):
		</para>
		<para>
			<constant>GL_CLIENT_PIXEL_STORE_BIT</constant> Pixel storage modes
		</para>
		<para>
			<constant>GL_CLIENT_VERTEX_ARRAY_BIT</constant> Vertex arrays (and enables)
		</para>
		<para>
			<function>glPopClientAttrib</function> restores the values of the client-state variables saved with the last
			<function>glPushClientAttrib</function>. Those not saved are left unchanged.
		</para>
		<para>
			It is an error to push attributes onto a full client attribute stack, or to pop attributes off an empty stack. In
			either case, the error flag is set, and no other change is made to GL state.
		</para>
		<para>
			Initially, the client attribute stack is empty.
		</para>
	</refsect1>
	<refsect1 id="glPushClientAttrib.3G-notes">
		<title>Notes</title>
		<para>
			<function>glPushClientAttrib</function> is available only if the GL version is 1.1 or greater.
		</para>
		<para>
			Not all values for GL client state can be saved on the attribute stack. For example, select and feedback state cannot
			be saved.
		</para>
		<para>
			The depth of the attribute stack depends on the implementation, but it must be at least 16.
		</para>
		<para>
			Use <function moreinfo="refentry">glPushAttrib</function> and <function moreinfo="refentry">glPopAttrib</function> to
			push and restore state which is kept on the server. Only pixel storage modes and vertex array state may be pushed and
			popped with <function>glPushClientAttrib</function> and <function>glPopClientAttrib</function>.
		</para>
		<para>
			When the <constant>GL_ARB_multitexture</constant> extension is supported, pushing and popping client vertex array state
			apples to all supported texture units, and the active client texture state.
		</para>
	</refsect1>
	<refsect1 id="glPushClientAttrib.3G-errors">
		<title>Errors</title>
		<para>
			<constant>GL_STACK_OVERFLOW</constant> is generated if <function>glPushClientAttrib</function> is called while the
			attribute stack is full.
		</para>
		<para>
			<constant>GL_STACK_UNDERFLOW</constant> is generated if <function>glPopClientAttrib</function> is called while the
			attribute stack is empty.
		</para>
	</refsect1>
	<refsect1 id="glPushClientAttrib.3G-associated_gets">
		<title>Associated Gets</title>
		<para>
			<function moreinfo="refentry">glGet</function> with argument <constant>GL_ATTRIB_STACK_DEPTH</constant>
		</para>
		<para>
			<function moreinfo="refentry">glGet</function> with argument <constant>GL_MAX_CLIENT_ATTRIB_STACK_DEPTH</constant>
		</para>
	</refsect1>
	<refsect1 id="glPushClientAttrib.3G-see_also">
		<title>See Also</title>
		<para>
			<simplelist type="inline">
				<member><citerefentry>
					<refentrytitle>glColorPointer</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glEdgeFlagPointer</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glEnableClientState</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glGet</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glGetError</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glIndexPointer</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glNormalPointer</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glNewList</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glPixelStore</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glPushAttrib</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexCoordPointer</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glVertexPointer</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
			</simplelist>
		</para>
	</refsect1>
</refentry>
