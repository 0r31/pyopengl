<refentry id="glEnable.3G">
	<refmeta id="glEnable.3G-meta">
		<refentrytitle>glEnable</refentrytitle>
		<manvolnum>3G</manvolnum>
	</refmeta>
	<refnamediv id="glEnable.3G-name">
		<refname>glEnable</refname>
		<refname>glDisable</refname>
		<refpurpose>enable or disable server-side GL capabilities</refpurpose>
	</refnamediv>
	<refsynopsisdiv id="glEnable.3G-c_spec-enable">
		<title>C Specification</title>
		<funcsynopsis>
			<funcprototype>
				<funcdef>void&nbsp;<function>glEnable</function></funcdef>
				<paramdef>GLenum&nbsp;<parameter>cap</parameter></paramdef>
			</funcprototype>
		</funcsynopsis>
	</refsynopsisdiv>
	<refsect1 id="glEnable.3G-parameters-enable">
		<title>Parameters</title>
		<variablelist>
			<varlistentry>
				<term><parameter>cap</parameter></term>
				<listitem>
					<simpara>
						Specifies a symbolic constant indicating a GL capability.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsect1>
	<refsynopsisdiv id="glEnable.3G-c_spec-disable">
		<title>C Specification</title>
		<funcsynopsis>
			<funcprototype>
				<funcdef>void&nbsp;<function>glDisable</function></funcdef>
				<paramdef>GLenum&nbsp;<parameter>cap</parameter></paramdef>
			</funcprototype>
		</funcsynopsis>
	</refsynopsisdiv>
	<refsect1 id="glEnable.3G-parameters-disable">
		<title>Parameters</title>
		<variablelist>
			<varlistentry>
				<term><parameter>cap</parameter></term>
				<listitem>
					<simpara>
						Specifies a symbolic constant indicating a GL capability.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsect1>
	<refsect1 id="glEnable.3G-description">
		<title>Description</title>
		<para>
			<function>glEnable</function> and <function>glDisable</function> enable and disable various capabilities. Use <function
			moreinfo="refentry">glIsEnabled</function> or <function moreinfo="refentry">glGet</function> to determine the current
			setting of any capability. The initial value for each capability with the exception of <constant>GL_DITHER</constant>
			is <constant>GL_FALSE</constant>. The initial value for <constant>GL_DITHER</constant> is <constant>GL_TRUE</constant>.
		</para>
		<para>
			Both <function>glEnable</function> and <function>glDisable</function> take a single argument,
			<parameter>cap</parameter>, which can assume one of the following values:
		</para>
		<variablelist>
			<varlistentry>
				<term><constant>GL_ALPHA_TEST</constant></term>
				<listitem>
					<simpara>
						If enabled, do alpha testing. See <function moreinfo="refentry">glAlphaFunc</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_AUTO_NORMAL</constant></term>
				<listitem>
					<simpara>
						If enabled, generate normal vectors when either <constant>GL_MAP2_VERTEX_3</constant> or
						<constant>GL_MAP2_VERTEX_4</constant> is used to generate vertices. See <function
						moreinfo="refentry">glMap2</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_BLEND</constant></term>
				<listitem>
					<simpara>
						If enabled, blend the incoming RGBA color values with the values in the color buffers. See <function
						moreinfo="refentry">glBlendFunc</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_CLIP_PLANE</constant><parameter>i</parameter></term>
				<listitem>
					<simpara>
						If enabled, clip geometry against user-defined clipping plane <parameter>i</parameter>. See <function
						moreinfo="refentry">glClipPlane</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_COLOR_LOGIC_OP</constant></term>
				<listitem>
					<simpara>
						If enabled, apply the currently selected logical operation to the incoming RGBA color and color buffer
						values. See <function moreinfo="refentry">glLogicOp</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_COLOR_MATERIAL</constant></term>
				<listitem>
					<simpara>
						If enabled, have one or more material parameters track the current color. See <function
						moreinfo="refentry">glColorMaterial</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_COLOR_TABLE</constant></term>
				<listitem>
					<simpara>
						If enabled, preform a color table lookup on the incoming RGBA color values. See <function
						moreinfo="refentry">glColorTable</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_CONVOLUTION_1D</constant></term>
				<listitem>
					<simpara>
						If enabled, perform a 1D convolution operation on incoming RGBA color values. See <function
						moreinfo="refentry">glConvolutionFilter1D</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_CONVOLUTION_2D</constant></term>
				<listitem>
					<simpara>
						If enabled, perform a 2D convolution operation on incoming RGBA color values. See <function
						moreinfo="refentry">glConvolutionFilter2D</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_CULL_FACE</constant></term>
				<listitem>
					<simpara>
						If enabled, cull polygons based on their winding in window coordinates. See <function
						moreinfo="refentry">glCullFace</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_DEPTH_TEST</constant></term>
				<listitem>
					<simpara>
						If enabled, do depth comparisons and update the depth buffer. Note that even if the depth buffer exists and
						the depth mask is non-zero, the depth buffer is not updated if the depth test is disabled. See <function
						moreinfo="refentry">glDepthFunc</function> and
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
		<para>
			<function moreinfo="refentry">glDepthRange</function>.
		</para>
		<variablelist>
			<varlistentry>
				<term><constant>GL_DITHER</constant></term>
				<listitem>
					<simpara>
						If enabled, dither color components or indices before they are written to the color buffer.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_FOG</constant></term>
				<listitem>
					<simpara>
						If enabled, blend a fog color into the posttexturing color. See <function
						moreinfo="refentry">glFog</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_HISTOGRAM</constant></term>
				<listitem>
					<simpara>
						If enabled, histogram incoming RGBA color values. See <function moreinfo="refentry">glHistogram</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_INDEX_LOGIC_OP</constant></term>
				<listitem>
					<simpara>
						If enabled, apply the currently selected logical operation to the incoming index and color buffer indices.
						See
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
		<para>
			<function moreinfo="refentry">glLogicOp</function>.
		</para>
		<variablelist>
			<varlistentry>
				<term><constant>GL_LIGHT</constant><parameter>i</parameter></term>
				<listitem>
					<simpara>
						If enabled, include light <parameter>i</parameter> in the evaluation of the lighting equation. See
						<function moreinfo="refentry">glLightModel</function> and <function moreinfo="refentry">glLight</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_LIGHTING</constant></term>
				<listitem>
					<simpara>
						If enabled, use the current lighting parameters to compute the vertex color or index. Otherwise, simply
						associate the current color or index with each vertex. See
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
		<para>
			<function moreinfo="refentry">glMaterial</function>, <function moreinfo="refentry">glLightModel</function>, and
			<function moreinfo="refentry">glLight</function>.
		</para>
		<variablelist>
			<varlistentry>
				<term><constant>GL_LINE_SMOOTH</constant></term>
				<listitem>
					<simpara>
						If enabled, draw lines with correct filtering. Otherwise, draw aliased lines. See <function
						moreinfo="refentry">glLineWidth</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_LINE_STIPPLE</constant></term>
				<listitem>
					<simpara>
						If enabled, use the current line stipple pattern when drawing lines. See <function
						moreinfo="refentry">glLineStipple</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_MAP1_COLOR_4</constant></term>
				<listitem>
					<simpara>
						If enabled, calls to <function moreinfo="refentry">glEvalCoord1</function>, <function
						moreinfo="refentry">glEvalMesh1</function>, and <function moreinfo="refentry">glEvalPoint1</function>
						generate RGBA values. See <function moreinfo="refentry">glMap1</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_MAP1_INDEX</constant></term>
				<listitem>
					<simpara>
						If enabled, calls to <function moreinfo="refentry">glEvalCoord1</function>, <function
						moreinfo="refentry">glEvalMesh1</function>, and <function moreinfo="refentry">glEvalPoint1</function>
						generate color indices. See <function moreinfo="refentry">glMap1</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_MAP1_NORMAL</constant></term>
				<listitem>
					<simpara>
						If enabled, calls to <function moreinfo="refentry">glEvalCoord1</function>, <function
						moreinfo="refentry">glEvalMesh1</function>, and <function moreinfo="refentry">glEvalPoint1</function>
						generate normals. See <function moreinfo="refentry">glMap1</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_MAP1_TEXTURE_COORD_1</constant></term>
				<listitem>
					<simpara>
						If enabled, calls to <function moreinfo="refentry">glEvalCoord1</function>, <function
						moreinfo="refentry">glEvalMesh1</function>, and <function moreinfo="refentry">glEvalPoint1</function>
						generate <parameter>s</parameter> texture coordinates. See <function moreinfo="refentry">glMap1</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_MAP1_TEXTURE_COORD_2</constant></term>
				<listitem>
					<simpara>
						If enabled, calls to <function moreinfo="refentry">glEvalCoord1</function>, <function
						moreinfo="refentry">glEvalMesh1</function>, and <function moreinfo="refentry">glEvalPoint1</function>
						generate <parameter>s</parameter> and <parameter>t</parameter> texture coordinates. See <function
						moreinfo="refentry">glMap1</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_MAP1_TEXTURE_COORD_3</constant></term>
				<listitem>
					<simpara>
						If enabled, calls to <function moreinfo="refentry">glEvalCoord1</function>, <function
						moreinfo="refentry">glEvalMesh1</function>, and <function moreinfo="refentry">glEvalPoint1</function>
						generate <parameter>s</parameter>, <parameter>t</parameter>, and <parameter>r</parameter> texture
						coordinates. See <function moreinfo="refentry">glMap1</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_MAP1_TEXTURE_COORD_4</constant></term>
				<listitem>
					<simpara>
						If enabled, calls to <function moreinfo="refentry">glEvalCoord1</function>, <function
						moreinfo="refentry">glEvalMesh1</function>, and <function moreinfo="refentry">glEvalPoint1</function>
						generate <parameter>s</parameter>, <parameter>t</parameter>, <parameter>r</parameter>, and
						<parameter>q</parameter> texture coordinates. See <function moreinfo="refentry">glMap1</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_MAP1_VERTEX_3</constant></term>
				<listitem>
					<simpara>
						If enabled, calls to <function moreinfo="refentry">glEvalCoord1</function>, <function
						moreinfo="refentry">glEvalMesh1</function>, and <function moreinfo="refentry">glEvalPoint1</function>
						generate <parameter>x</parameter>, <parameter>y</parameter>, and <parameter>z</parameter> vertex
						coordinates. See <function moreinfo="refentry">glMap1</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_MAP1_VERTEX_4</constant></term>
				<listitem>
					<simpara>
						If enabled, calls to <function moreinfo="refentry">glEvalCoord1</function>, <function
						moreinfo="refentry">glEvalMesh1</function>, and <function moreinfo="refentry">glEvalPoint1</function>
						generate homogeneous <parameter>x</parameter>, <parameter>y</parameter>, <parameter>z</parameter>, and
						<parameter>w</parameter> vertex coordinates. See <function moreinfo="refentry">glMap1</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_MAP2_COLOR_4</constant></term>
				<listitem>
					<simpara>
						If enabled, calls to <function moreinfo="refentry">glEvalCoord2</function>, <function
						moreinfo="refentry">glEvalMesh2</function>, and <function moreinfo="refentry">glEvalPoint2</function>
						generate RGBA values. See <function moreinfo="refentry">glMap2</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_MAP2_INDEX</constant></term>
				<listitem>
					<simpara>
						If enabled, calls to <function moreinfo="refentry">glEvalCoord2</function>, <function
						moreinfo="refentry">glEvalMesh2</function>, and <function moreinfo="refentry">glEvalPoint2</function>
						generate color indices. See <function moreinfo="refentry">glMap2</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_MAP2_NORMAL</constant></term>
				<listitem>
					<simpara>
						If enabled, calls to <function moreinfo="refentry">glEvalCoord2</function>, <function
						moreinfo="refentry">glEvalMesh2</function>, and <function moreinfo="refentry">glEvalPoint2</function>
						generate normals. See <function moreinfo="refentry">glMap2</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_MAP2_TEXTURE_COORD_1</constant></term>
				<listitem>
					<simpara>
						If enabled, calls to <function moreinfo="refentry">glEvalCoord2</function>, <function
						moreinfo="refentry">glEvalMesh2</function>, and <function moreinfo="refentry">glEvalPoint2</function>
						generate <parameter>s</parameter> texture coordinates. See <function moreinfo="refentry">glMap2</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_MAP2_TEXTURE_COORD_2</constant></term>
				<listitem>
					<simpara>
						If enabled, calls to <function moreinfo="refentry">glEvalCoord2</function>, <function
						moreinfo="refentry">glEvalMesh2</function>, and <function moreinfo="refentry">glEvalPoint2</function>
						generate <parameter>s</parameter> and <parameter>t</parameter> texture coordinates. See <function
						moreinfo="refentry">glMap2</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_MAP2_TEXTURE_COORD_3</constant></term>
				<listitem>
					<simpara>
						If enabled, calls to <function moreinfo="refentry">glEvalCoord2</function>, <function
						moreinfo="refentry">glEvalMesh2</function>, and <function moreinfo="refentry">glEvalPoint2</function>
						generate <parameter>s</parameter>, <parameter>t</parameter>, and <parameter>r</parameter> texture
						coordinates. See <function moreinfo="refentry">glMap2</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_MAP2_TEXTURE_COORD_4</constant></term>
				<listitem>
					<simpara>
						If enabled, calls to <function moreinfo="refentry">glEvalCoord2</function>, <function
						moreinfo="refentry">glEvalMesh2</function>, and <function moreinfo="refentry">glEvalPoint2</function>
						generate <parameter>s</parameter>, <parameter>t</parameter>, <parameter>r</parameter>, and
						<parameter>q</parameter> texture coordinates. See <function moreinfo="refentry">glMap2</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_MAP2_VERTEX_3</constant></term>
				<listitem>
					<simpara>
						If enabled, calls to <function moreinfo="refentry">glEvalCoord2</function>, <function
						moreinfo="refentry">glEvalMesh2</function>, and <function moreinfo="refentry">glEvalPoint2</function>
						generate <parameter>x</parameter>, <parameter>y</parameter>, and <parameter>z</parameter> vertex
						coordinates. See <function moreinfo="refentry">glMap2</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_MAP2_VERTEX_4</constant></term>
				<listitem>
					<simpara>
						If enabled, calls to <function moreinfo="refentry">glEvalCoord2</function>, <function
						moreinfo="refentry">glEvalMesh2</function>, and <function moreinfo="refentry">glEvalPoint2</function>
						generate homogeneous <parameter>x</parameter>, <parameter>y</parameter>, <parameter>z</parameter>, and
						<parameter>w</parameter> vertex coordinates. See <function moreinfo="refentry">glMap2</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_MINMAX</constant></term>
				<listitem>
					<simpara>
						If enabled, compute the minimum and maximum values of incoming RGBA color values. See <function
						moreinfo="refentry">glMinmax</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_NORMALIZE</constant></term>
				<listitem>
					<simpara>
						If enabled, normal vectors specified with <function moreinfo="refentry">glNormal</function> are scaled to
						unit length after transformation. See <function moreinfo="refentry">glNormal</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_POINT_SMOOTH</constant></term>
				<listitem>
					<simpara>
						If enabled, draw points with proper filtering. Otherwise, draw aliased points. See <function
						moreinfo="refentry">glPointSize</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_POLYGON_OFFSET_FILL</constant></term>
				<listitem>
					<simpara>
						If enabled, and if the polygon is rendered in <constant>GL_FILL</constant> mode, an offset is added to
						depth values of a polygon's fragments before the depth comparison is performed. See <function
						moreinfo="refentry">glPolygonOffset</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_POLYGON_OFFSET_LINE</constant></term>
				<listitem>
					<simpara>
						If enabled, and if the polygon is rendered in <constant>GL_LINE</constant> mode, an offset is added to
						depth values of a polygon's fragments before the depth comparison is performed. See <function
						moreinfo="refentry">glPolygonOffset</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_POLYGON_OFFSET_POINT</constant></term>
				<listitem>
					<simpara>
						If enabled, an offset is added to depth values of a polygon's fragments before the depth comparison is
						performed, if the polygon is rendered in <constant>GL_POINT</constant> mode. See <function
						moreinfo="refentry">glPolygonOffset</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_POLYGON_SMOOTH</constant></term>
				<listitem>
					<simpara>
						If enabled, draw polygons with proper filtering. Otherwise, draw aliased polygons. For correct anti-aliased
						polygons, an alpha buffer is needed and the polygons must be sorted front to back.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_POLYGON_STIPPLE</constant></term>
				<listitem>
					<simpara>
						If enabled, use the current polygon stipple pattern when rendering polygons. See <function
						moreinfo="refentry">glPolygonStipple</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_POST_COLOR_MATRIX_COLOR_TABLE</constant></term>
				<listitem>
					<simpara>
						If enabled, preform a color table lookup on RGBA color values after color matrix transformation. See
						<function moreinfo="refentry">glColorTable</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_POST_CONVOLUTION_COLOR_TABLE</constant></term>
				<listitem>
					<simpara>
						If enabled, preform a color table lookup on RGBA color values after convolution. See <function
						moreinfo="refentry">glColorTable</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_RESCALE_NORMAL</constant></term>
				<listitem>
					<simpara>
						If enabled, normal vectors specified with <function moreinfo="refentry">glNormal</function> are scaled to
						unit length after transformation. See <function moreinfo="refentry">glNormal</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_SEPARABLE_2D</constant></term>
				<listitem>
					<simpara>
						If enabled, perform a two-dimensional convolution operation using a separable convolution filter on
						incoming RGBA color values. See <function moreinfo="refentry">glSeparableFilter2D</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_SCISSOR_TEST</constant></term>
				<listitem>
					<simpara>
						If enabled, discard fragments that are outside the scissor rectangle. See <function
						moreinfo="refentry">glScissor</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_STENCIL_TEST</constant></term>
				<listitem>
					<simpara>
						If enabled, do stencil testing and update the stencil buffer. See <function
						moreinfo="refentry">glStencilFunc</function> and <function moreinfo="refentry">glStencilOp</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_TEXTURE_1D</constant></term>
				<listitem>
					<simpara>
						If enabled, one-dimensional texturing is performed (unless two- or three-dimensional texturing is also
						enabled). See <function moreinfo="refentry">glTexImage1D</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_TEXTURE_2D</constant></term>
				<listitem>
					<simpara>
						If enabled, two-dimensional texturing is performed (unless three-dimensional texturing is also enabled).
						See <function moreinfo="refentry">glTexImage2D</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_TEXTURE_3D</constant></term>
				<listitem>
					<simpara>
						If enabled, three-dimensional texturing is performed. See <function
						moreinfo="refentry">glTexImage3D</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_TEXTURE_GEN_Q</constant></term>
				<listitem>
					<simpara>
						If enabled, the <parameter>q</parameter> texture coordinate is computed using the texture generation
						function defined with <function moreinfo="refentry">glTexGen</function>. Otherwise, the current
						<parameter>q</parameter> texture coordinate is used. See <function moreinfo="refentry">glTexGen</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_TEXTURE_GEN_R</constant></term>
				<listitem>
					<simpara>
						If enabled, the <parameter>r</parameter> texture coordinate is computed using the texture generation
						function defined with <function moreinfo="refentry">glTexGen</function>. Otherwise, the current
						<parameter>r</parameter> texture coordinate is used. See <function moreinfo="refentry">glTexGen</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_TEXTURE_GEN_S</constant></term>
				<listitem>
					<simpara>
						If enabled, the <parameter>s</parameter> texture coordinate is computed using the texture generation
						function defined with <function moreinfo="refentry">glTexGen</function>. Otherwise, the current
						<parameter>s</parameter> texture coordinate is used. See <function moreinfo="refentry">glTexGen</function>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_TEXTURE_GEN_T</constant></term>
				<listitem>
					<simpara>
						If enabled, the <parameter>t</parameter> texture coordinate is computed using the texture generation
						function defined with <function moreinfo="refentry">glTexGen</function>. Otherwise, the current
						<parameter>t</parameter> texture coordinate is used. See <function moreinfo="refentry">glTexGen</function>.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsect1>
	<refsect1 id="glEnable.3G-notes">
		<title>Notes</title>
		<para>
			<constant>GL_POLYGON_OFFSET_FILL</constant>, <constant>GL_POLYGON_OFFSET_LINE</constant>,
			<constant>GL_POLYGON_OFFSET_POINT</constant>, <constant>GL_COLOR_LOGIC_OP</constant>, and
			<constant>GL_INDEX_LOGIC_OP</constant> are available only if the GL version is 1.1 or greater.
		</para>
		<para>
			<constant>GL_RESCALE_NORMAL</constant>, and <constant>GL_TEXTURE_3D</constant> are available only if the GL version is
			1.2 or greater.
		</para>
		<para>
			<constant>GL_COLOR_TABLE</constant>, <constant>GL_CONVOLUTION_1D</constant>, <constant>GL_CONVOLUTION_2D</constant>,
			<constant>GL_HISTOGRAM</constant>, <constant>GL_MINMAX</constant>,
			<constant>GL_POST_COLOR_MATRIX_COLOR_TABLE</constant>, <constant>GL_POST_CONVOLUTION_COLOR_TABLE</constant>, and
			<constant>GL_SEPARABLE_2D</constant> are available only if <constant>GL_ARB_imaging</constant> is returned from
			<function moreinfo="refentry">glGet</function> with an argument of <constant>GL_EXTENSIONS</constant>.
		</para>
		<para>
			If <constant>GL_ARB_multitexture</constant> is supported, <constant>GL_TEXTURE_1D</constant>,
			<constant>GL_TEXTURE_2D</constant>, <constant>GL_TEXTURE_3D</constant>, <constant>GL_TEXTURE_GEN_S</constant>,
			<constant>GL_TEXTURE_GEN_T</constant>, <constant>GL_TEXTURE_GEN_R</constant>, and <constant>GL_TEXTURE_GEN_Q</constant>
			enable or disable the respective state for the active texture unit specified with <function
			moreinfo="refentry">glActiveTextureARB</function>.
		</para>
	</refsect1>
	<refsect1 id="glEnable.3G-errors">
		<title>Errors</title>
		<para>
			<constant>GL_INVALID_ENUM</constant> is generated if <parameter>cap</parameter> is not one of the values listed
			previously.
		</para>
		<para>
			<constant>GL_INVALID_OPERATION</constant> is generated if <function>glEnable</function> or
			<function>glDisable</function> is executed between the execution of <function moreinfo="refentry">glBegin</function>
			and the corresponding execution of <function moreinfo="refentry">glEnd</function>.
		</para>
	</refsect1>
	<refsect1 id="glEnable.3G-see_also">
		<title>See Also</title>
		<para>
			<simplelist type="inline">
				<member><citerefentry>
					<refentrytitle>glActiveTextureARB</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glAlphaFunc</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glBlendFunc</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glClipPlane</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glColorMaterial</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glCullFace</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glDepthFunc</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glDepthRange</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glEnableClientState</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glFog</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glGet</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glIsEnabled</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glLight</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glLightModel</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glLineWidth</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glLineStipple</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glLogicOp</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glMap1</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glMap2</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glMaterial</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glNormal</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glPointSize</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glPolygonMode</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glPolygonOffset</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glPolygonStipple</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glScissor</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glStencilFunc</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glStencilOp</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexGen</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexImage1D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexImage2D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexImage3D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
			</simplelist>
		</para>
	</refsect1>
</refentry>
