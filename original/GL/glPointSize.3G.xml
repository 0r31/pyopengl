<refentry id="glPointSize.3G">
	<refmeta id="glPointSize.3G-meta">
		<refentrytitle>glPointSize</refentrytitle>
		<manvolnum>3G</manvolnum>
	</refmeta>
	<refnamediv id="glPointSize.3G-name">
		<refname>glPointSize</refname>
		<refpurpose>specify the diameter of rasterized points</refpurpose>
	</refnamediv>
	<refsynopsisdiv id="glPointSize.3G-c_spec">
		<title>C Specification</title>
		<funcsynopsis>
			<funcprototype>
				<funcdef>void&nbsp;<function>glPointSize</function></funcdef>
				<paramdef>GLfloat&nbsp;<parameter>size</parameter></paramdef>
			</funcprototype>
		</funcsynopsis>
	</refsynopsisdiv>
	<refsect1 id="glPointSize.3G-parameters">
		<title>Parameters</title>
		<variablelist>
			<varlistentry>
				<term><parameter>size</parameter></term>
				<listitem>
					<simpara>
						Specifies the diameter of rasterized points. The initial value is 1.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsect1>
	<refsect1 id="glPointSize.3G-description">
		<title>Description</title>
		<para>
			<function>glPointSize</function> specifies the rasterized diameter of both aliased and antialiased points. Using a
			point size other than 1 has different effects, depending on whether point antialiasing is enabled. To enable and
			disable point antialiasing, call <function moreinfo="refentry">glEnable</function> and <function
			moreinfo="refentry">glDisable</function> with argument <constant>GL_POINT_SMOOTH</constant>. Point antialiasing is
			initially disabled.
		</para>
		<para>
			If point antialiasing is disabled, the actual size is determined by rounding the supplied size to the nearest integer.
			(If the rounding results in the value 0, it is as if the point size were 1.) If the rounded size is odd, then the
			center point (<inlineequation>
				<mml:math>
					<mml:mi>x</mml:mi>
				</mml:math>
			</inlineequation>, <inlineequation>
				<mml:math>
					<mml:mi>y</mml:mi>
				</mml:math>
			</inlineequation>) of the pixel fragment that represents the point is computed as ( <inlineequation>
				<mml:math>
					<mml:mrow>
						<mml:mo>&lfloor;</mml:mo>
						<mml:msub>
							<mml:mi>x</mml:mi>
							<mml:mi>w</mml:mi>
						</mml:msub>
						<mml:mo>&rfloor;</mml:mo>
						<mml:mo>+</mml:mo>
						<mml:mn>.5</mml:mn>
					</mml:mrow>
				</mml:math>
			</inlineequation>, <inlineequation>
				<mml:math>
					<mml:mrow>
						<mml:mo>&lfloor;</mml:mo>
						<mml:msub>
							<mml:mi>y</mml:mi>
							<mml:mi>w</mml:mi>
						</mml:msub>
						<mml:mo>&rfloor;</mml:mo>
						<mml:mo>+</mml:mo>
						<mml:mn>.5</mml:mn>
					</mml:mrow>
				</mml:math>
			</inlineequation>) where <inlineequation>
				<mml:math>
					<mml:mi>w</mml:mi>
				</mml:math>
			</inlineequation> subscripts indicate window coordinates. All pixels that lie within the square grid of the rounded
			size centered at (<inlineequation>
				<mml:math>
					<mml:mi>x</mml:mi>
				</mml:math>
			</inlineequation>, <inlineequation>
				<mml:math>
					<mml:mi>y</mml:mi>
				</mml:math>
			</inlineequation>) make up the fragment. If the size is even, the center point is ( <inlineequation>
				<mml:math>
					<mml:mrow>
						<mml:mo>&lfloor;</mml:mo>
						<mml:msub>
							<mml:mi>x</mml:mi>
							<mml:mi>w</mml:mi>
						</mml:msub>
						<mml:mo>+</mml:mo>
						<mml:mn>.5</mml:mn>
						<mml:mo>&rfloor;</mml:mo>
					</mml:mrow>
				</mml:math>
			</inlineequation>, <inlineequation>
				<mml:math>
					<mml:mrow>
						<mml:mo>&lfloor;</mml:mo>
						<mml:msub>
							<mml:mi>y</mml:mi>
							<mml:mi>w</mml:mi>
						</mml:msub>
						<mml:mo>+</mml:mo>
						<mml:mn>.5</mml:mn>
						<mml:mo>&rfloor;</mml:mo>
					</mml:mrow>
				</mml:math>
			</inlineequation>) and the rasterized fragment's centers are the half-integer window coordinates within the square of
			the rounded size centered at (<inlineequation>
				<mml:math>
					<mml:mi>x</mml:mi>
				</mml:math>
			</inlineequation>, <inlineequation>
				<mml:math>
					<mml:mi>y</mml:mi>
				</mml:math>
			</inlineequation>). All pixel fragments produced in rasterizing a nonantialiased point are assigned the same associated
			data, that of the vertex corresponding to the point.
		</para>
		<para>
			If antialiasing is enabled, then point rasterization produces a fragment for each pixel square that intersects the
			region lying within the circle having diameter equal to the current point size and centered at the point's
			(<inlineequation>
				<mml:math>
					<mml:msub>
						<mml:mi>x</mml:mi>
						<mml:mi>w</mml:mi>
					</mml:msub>
				</mml:math>
			</inlineequation>, <inlineequation>
				<mml:math>
					<mml:msub>
						<mml:mi>y</mml:mi>
						<mml:mi>w</mml:mi>
					</mml:msub>
				</mml:math>
			</inlineequation>). The coverage value for each fragment is the window coordinate area of the intersection of the
			circular region with the corresponding pixel square. This value is saved and used in the final rasterization step. The
			data associated with each fragment is the data associated with the point being rasterized.
		</para>
		<para>
			Not all sizes are supported when point antialiasing is enabled. If an unsupported size is requested, the nearest
			supported size is used. Only size 1 is guaranteed to be supported; others depend on the implementation. To query the
			range of supported sizes and the size difference between supported sizes within the range, call <function
			moreinfo="refentry">glGet</function> with arguments <constant>GL_SMOOTH_POINT_SIZE_RANGE</constant> and
			<constant>GL_SMOOTH_POINT_SIZE_GRANULARITY</constant>. For aliased points, query the supported ranges and granularity
			with <function moreinfo="refentry">glGet</function> with arguments <constant>GL_ALIASED_POINT_SIZE_RANGE</constant> and
			<constant>GL_ALIASED_POINT_SIZE_GRANULARITY</constant>.
		</para>
	</refsect1>
	<refsect1 id="glPointSize.3G-notes">
		<title>Notes</title>
		<para>
			The point size specified by <function>glPointSize</function> is always returned when <constant>GL_POINT_SIZE</constant>
			is queried. Clamping and rounding for aliased and antialiased points have no effect on the specified value.
		</para>
		<para>
			A non-antialiased point size may be clamped to an implementation-dependent maximum. Although this maximum cannot be
			queried, it must be no less than the maximum value for antialiased points, rounded to the nearest integer value.
		</para>
		<para>
			<constant>GL_POINT_SIZE_RANGE</constant> and <constant>GL_POINT_SIZE_GRANULARITY</constant> are deprecated in GL
			versions 1.2 and greater. Their functionality has been replaced by <constant>GL_SMOOTH_POINT_SIZE_RANGE</constant> and
			<constant>GL_SMOOTH_POINT_SIZE_GRANULARITY</constant>.
		</para>
	</refsect1>
	<refsect1 id="glPointSize.3G-errors">
		<title>Errors</title>
		<para>
			<constant>GL_INVALID_VALUE</constant> is generated if <parameter>size</parameter> is less than or equal to 0.
		</para>
		<para>
			<constant>GL_INVALID_OPERATION</constant> is generated if <function>glPointSize</function> is executed between the
			execution of <function moreinfo="refentry">glBegin</function> and the corresponding execution of <function
			moreinfo="refentry">glEnd</function>.
		</para>
	</refsect1>
	<refsect1 id="glPointSize.3G-associated_gets">
		<title>Associated Gets</title>
		<para>
			<function moreinfo="refentry">glGet</function> with argument <constant>GL_POINT_SIZE</constant>
		</para>
		<para>
			<function moreinfo="refentry">glGet</function> with argument <constant>GL_ALIASED_POINT_SIZE_RANGE</constant>
		</para>
		<para>
			<function moreinfo="refentry">glGet</function> with argument <constant>GL_ALIASED_POINT_SIZE_GRANULARITY</constant>
		</para>
		<para>
			<function moreinfo="refentry">glGet</function> with argument <constant>GL_SMOOTH_POINT_SIZE_RANGE</constant>
		</para>
		<para>
			<function moreinfo="refentry">glGet</function> with argument <constant>GL_SMOOTH_POINT_SIZE_GRANULARITY</constant>
		</para>
		<para>
			<function moreinfo="refentry">glIsEnabled</function> with argument <constant>GL_POINT_SMOOTH</constant>
		</para>
	</refsect1>
	<refsect1 id="glPointSize.3G-see_also">
		<title>See Also</title>
		<para>
			<simplelist type="inline">
				<member><citerefentry>
					<refentrytitle>glEnable</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
			</simplelist>
		</para>
	</refsect1>
</refentry>
