<refentry id="glConvolutionParameter.3G">
	<refmeta id="glConvolutionParameter.3G-meta">
		<refentrytitle>glConvolutionParameter</refentrytitle>
		<manvolnum>3G</manvolnum>
	</refmeta>
	<refnamediv id="glConvolutionParameter.3G-name">
		<refname>glConvolutionParameterf</refname>
		<refname>glConvolutionParameteri</refname>
		<refname>glConvolutionParameterfv</refname>
		<refname>glConvolutionParameteriv</refname>
		<refpurpose>set convolution parameters</refpurpose>
	</refnamediv>
	<refsynopsisdiv id="glConvolutionParameter.3G-c_spec">
		<title>C Specification</title>
		<funcsynopsis>
			<funcprototype>
				<funcdef>void&nbsp;<function>glConvolutionParameterf</function></funcdef>
				<paramdef>GLenum&nbsp;<parameter>target</parameter></paramdef>
				<paramdef>GLenum&nbsp;<parameter>pname</parameter></paramdef>
				<paramdef>GLfloat&nbsp;<parameter>params</parameter></paramdef>
			</funcprototype>
			<funcprototype>
				<funcdef>void&nbsp;<function>glConvolutionParameteri</function></funcdef>
				<paramdef>GLenum&nbsp;<parameter>target</parameter></paramdef>
				<paramdef>GLenum&nbsp;<parameter>pname</parameter></paramdef>
				<paramdef>GLint&nbsp;<parameter>params</parameter></paramdef>
			</funcprototype>
		</funcsynopsis>
	</refsynopsisdiv>
	<refsect1 id="glConvolutionParameter.3G-parameters">
		<title>Parameters</title>
		<variablelist>
			<varlistentry>
				<term><parameter>target</parameter></term>
				<listitem>
					<simpara>
						The target for the convolution parameter. Must be one of <constant>GL_CONVOLUTION_1D</constant>,
						<constant>GL_CONVOLUTION_2D</constant>, or <constant>GL_SEPARABLE_2D</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>pname</parameter></term>
				<listitem>
					<simpara>
						The parameter to be set. Must be <constant>GL_CONVOLUTION_BORDER_MODE</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>params</parameter></term>
				<listitem>
					<simpara>
						The parameter value. Must be one of <constant>GL_REDUCE</constant>,
						<constant>GL_CONSTANT_BORDER</constant>, <constant>GL_REPLICATE_BORDER</constant>.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsect1>
	<refsynopsisdiv id="glConvolutionParameter.3G-c_spec-v">
		<title>C Specification</title>
		<funcsynopsis>
			<funcprototype>
				<funcdef>void&nbsp;<function>glConvolutionParameterfv</function></funcdef>
				<paramdef>GLenum&nbsp;<parameter>target</parameter></paramdef>
				<paramdef>GLenum&nbsp;<parameter>pname</parameter></paramdef>
				<paramdef>const&nbsp;GLfloat&nbsp;*<parameter>params</parameter></paramdef>
			</funcprototype>
			<funcprototype>
				<funcdef>void&nbsp;<function>glConvolutionParameteriv</function></funcdef>
				<paramdef>GLenum&nbsp;<parameter>target</parameter></paramdef>
				<paramdef>GLenum&nbsp;<parameter>pname</parameter></paramdef>
				<paramdef>const&nbsp;GLint&nbsp;*<parameter>params</parameter></paramdef>
			</funcprototype>
		</funcsynopsis>
	</refsynopsisdiv>
	<refsect1 id="glConvolutionParameter.3G-parameters-v">
		<title>Parameters</title>
		<variablelist>
			<varlistentry>
				<term><parameter>target</parameter></term>
				<listitem>
					<simpara>
						The target for the convolution parameter. Must be one of <constant>GL_CONVOLUTION_1D</constant>,
						<constant>GL_CONVOLUTION_2D</constant>, or <constant>GL_SEPARABLE_2D</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>pname</parameter></term>
				<listitem>
					<simpara>
						The parameter to be set. Must be one of <constant>GL_CONVOLUTION_BORDER_MODE</constant>,
						<constant>GL_CONVOLUTION_BORDER_COLOR</constant>, <constant>GL_CONVOLUTION_FILTER_SCALE</constant>, or
						<constant>GL_CONVOLUTION_FILTER_BIAS</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>params</parameter></term>
				<listitem>
					<simpara>
						The parameter value. If <parameter>pname</parameter> is <constant>GL_CONVOLUTION_BORDER_MODE</constant>,
						<parameter>params</parameter> must be one of <constant>GL_REDUCE</constant>,
						<constant>GL_CONSTANT_BORDER</constant>, or <constant>GL_REPLICATE_BORDER</constant>. Otherwise, must be a
						vector of four values (for red, green, blue, and alpha, respectively) to be used for scaling (when
						<parameter>pname</parameter> is <constant>GL_CONVOLUTION_FILTER_SCALE</constant>), or biasing (when
						<parameter>pname</parameter> is <constant>GL_CONVOLUTION_FILTER_BIAS</constant>) a convolution filter
						kernel or setting the constant border color (when <parameter>pname</parameter> is
						<constant>GL_CONVOLUTION_BORDER_COLOR</constant>.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsect1>
	<refsect1 id="glConvolutionParameter.3G-description">
		<title>Description</title>
		<para>
			<function moreinfo="refentry">glConvolutionParameter</function> sets the value of a convolution parameter.
			<parameter>target</parameter> selects the convolution filter to be affected: <constant>GL_CONVOLUTION_1D</constant>,
			<constant>GL_CONVOLUTION_2D</constant>, or <constant>GL_SEPARABLE_2D</constant> for the 1D, 2D, or separable 2D filter,
			respectively. <parameter>pname</parameter> selects the parameter to be changed.
			<constant>GL_CONVOLUTION_FILTER_SCALE</constant> and <constant>GL_CONVOLUTION_FILTER_BIAS</constant> affect the
			definition of the convolution filter kernel; see <citerefentry>
				<refentrytitle>glConvolutionFilter1D</refentrytitle>
				<manvolnum>3G</manvolnum>
			</citerefentry>, <function moreinfo="refentry">glConvolutionFilter2D</function>, and <function
			moreinfo="refentry">glSeparableFilter2D</function> for details. In these cases, <parameter>params</parameter> is an
			array of four values to be applied to red, green, blue, and alpha values, respectively. The initial value for
			<constant>GL_CONVOLUTION_FILTER_SCALE</constant> is (1, 1, 1, 1), and the initial value for
			<constant>GL_CONVOLUTION_FILTER_BIAS</constant> is (0, 0, 0, 0). A <parameter>pname</parameter> value of
			<constant>GL_CONVOLUTION_BORDER_MODE</constant> controls the convolution border mode. The accepted modes are:
		</para>
		<variablelist>
			<varlistentry>
				<term><constant>GL_REDUCE</constant></term>
				<listitem>
					<simpara>
						The image resulting from convolution is smaller than the source image. If the filter width is
						<inlineequation>
							<mml:math>
								<mml:mi>Wf</mml:mi>
							</mml:math>
						</inlineequation> and height is <inlineequation>
							<mml:math>
								<mml:mi>Hf</mml:mi>
							</mml:math>
						</inlineequation>, and the source image width is <inlineequation>
							<mml:math>
								<mml:mi>Ws</mml:mi>
							</mml:math>
						</inlineequation> and height is <inlineequation>
							<mml:math>
								<mml:mi>Hs</mml:mi>
							</mml:math>
						</inlineequation>, then the convolved image width will be <inlineequation>
							<mml:math>
								<mml:mi>Ws</mml:mi>
								<mml:mo>-</mml:mo>
								<mml:mi>Wf</mml:mi>
								<mml:mo>+</mml:mo>
								<mml:mn>1</mml:mn>
							</mml:math>
						</inlineequation> and height will be <inlineequation>
							<mml:math>
								<mml:mi>Hs</mml:mi>
								<mml:mo>-</mml:mo>
								<mml:mi>Hf</mml:mi>
								<mml:mo>+</mml:mo>
								<mml:mn>1</mml:mn>
							</mml:math>
						</inlineequation>. (If this reduction would generate an image with zero or negative width and/or height,
						the output is simply <constant>NULL</constant>, with no error generated.) The coordinates of the image
						resulting from convolution are zero through <inlineequation>
							<mml:math>
								<mml:mi>Ws</mml:mi>
								<mml:mo>-</mml:mo>
								<mml:mi>Wf</mml:mi>
							</mml:math>
						</inlineequation> in width and zero through <inlineequation>
							<mml:math>
								<mml:mi>Hs</mml:mi>
								<mml:mo>-</mml:mo>
								<mml:mi>Hf</mml:mi>
							</mml:math>
						</inlineequation> in height.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_CONSTANT_BORDER</constant></term>
				<listitem>
					<simpara>
						The image resulting from convolution is the same size as the source image, and processed as if the source
						image were surrounded by pixels with their color specified by the
						<constant>GL_CONVOLUTION_BORDER_COLOR</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_REPLICATE_BORDER</constant></term>
				<listitem>
					<simpara>
						The image resulting from convolution is the same size as the source image, and processed as if the
						outermost pixel on the border of the source image were replicated.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsect1>
	<refsect1 id="glConvolutionParameter.3G-notes">
		<title>Notes</title>
		<para>
			<function moreinfo="refentry">glConvolutionParameter</function> is present only if <constant>GL_ARB_imaging</constant>
			is returned when <function moreinfo="refentry">glGetString</function> is called with an argument of
			<constant>GL_EXTENSIONS</constant>.
		</para>
		<para>
			In cases where errors can result from the specification of invalid image dimensions, it is the dimensions after
			convolution that are tested, not the dimensions of the source image. For example, <function
			moreinfo="refentry">glTexImage1D</function> requires power-of-two image size. When <constant>GL_REDUCE</constant>
			border mode is in effect, the source image must be larger than the final power-of-two size by one less than the size of
			the 1D filter kernel.
		</para>
	</refsect1>
	<refsect1 id="glConvolutionParameter.3G-errors">
		<title>Errors</title>
		<para>
			<constant>GL_INVALID_ENUM</constant> is generated if <parameter>target</parameter> is not one of the allowable values.
		</para>
		<para>
			<constant>GL_INVALID_ENUM</constant> is generated if <parameter>pname</parameter> is not one of the allowable values.
		</para>
		<para>
			<constant>GL_INVALID_ENUM</constant> is generated if <parameter>pname</parameter> is
			<constant>GL_CONVOLUTION_BORDER_MODE</constant> and <parameter>params</parameter> is not one of
			<constant>GL_REDUCE</constant>, <constant>GL_CONSTANT_BORDER</constant>, or <constant>GL_REPLICATE_BORDER</constant>.
		</para>
		<para>
			<constant>GL_INVALID_OPERATION</constant> is generated if <function
			moreinfo="refentry">glConvolutionParameter</function> is executed between the execution of <function
			moreinfo="refentry">glBegin</function> and the corresponding execution of <function
			moreinfo="refentry">glEnd</function>.
		</para>
	</refsect1>
	<refsect1 id="glConvolutionParameter.3G-associated_gets">
		<title>Associated Gets</title>
		<para>
			<function moreinfo="refentry">glGetConvolutionParameter</function>
		</para>
	</refsect1>
	<refsect1 id="glConvolutionParameter.3G-see_also">
		<title>See Also</title>
		<para>
			<simplelist type="inline">
				<member><citerefentry>
					<refentrytitle>glConvolutionFilter1D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glConvolutionFilter2D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glSeparableFilter2D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glGetConvolutionParameter</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
			</simplelist>
		</para>
	</refsect1>
</refentry>
