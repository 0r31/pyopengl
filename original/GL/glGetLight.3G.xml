<refentry id="glGetLight.3G">
	<refmeta id="glGetLight.3G-meta">
		<refentrytitle>glGetLight</refentrytitle>
		<manvolnum>3G</manvolnum>
	</refmeta>
	<refnamediv id="glGetLight.3G-name">
		<refname>glGetLightfv</refname>
		<refname>glGetLightiv</refname>
		<refpurpose>return light source parameter values</refpurpose>
	</refnamediv>
	<refsynopsisdiv id="glGetLight.3G-c_spec">
		<title>C Specification</title>
		<funcsynopsis>
			<funcprototype>
				<funcdef>void&nbsp;<function>glGetLightfv</function></funcdef>
				<paramdef>GLenum&nbsp;<parameter>light</parameter></paramdef>
				<paramdef>GLenum&nbsp;<parameter>pname</parameter></paramdef>
				<paramdef>GLfloat&nbsp;*<parameter>params</parameter></paramdef>
			</funcprototype>
			<funcprototype>
				<funcdef>void&nbsp;<function>glGetLightiv</function></funcdef>
				<paramdef>GLenum&nbsp;<parameter>light</parameter></paramdef>
				<paramdef>GLenum&nbsp;<parameter>pname</parameter></paramdef>
				<paramdef>GLint&nbsp;*<parameter>params</parameter></paramdef>
			</funcprototype>
		</funcsynopsis>
	</refsynopsisdiv>
	<refsect1 id="glGetLight.3G-parameters">
		<title>Parameters</title>
		<variablelist>
			<varlistentry>
				<term><parameter>light</parameter></term>
				<listitem>
					<simpara>
						Specifies a light source. The number of possible lights depends on the implementation, but at least eight
						lights are supported. They are identified by symbolic names of the form
						<constant>GL_LIGHT</constant><inlineequation>
							<mml:math>
								<mml:mi>i</mml:mi>
							</mml:math>
						</inlineequation> where 0 &le; <inlineequation>
							<mml:math>
								<mml:mi>i</mml:mi>
							</mml:math>
						</inlineequation> &lt; <constant>GL_MAX_LIGHTS</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>pname</parameter></term>
				<listitem>
					<simpara>
						Specifies a light source parameter for <parameter>light</parameter>. Accepted symbolic names are
						<constant>GL_AMBIENT</constant>, <constant>GL_DIFFUSE</constant>, <constant>GL_SPECULAR</constant>,
						<constant>GL_POSITION</constant>, <constant>GL_SPOT_DIRECTION</constant>,
						<constant>GL_SPOT_EXPONENT</constant>, <constant>GL_SPOT_CUTOFF</constant>,
						<constant>GL_CONSTANT_ATTENUATION</constant>, <constant>GL_LINEAR_ATTENUATION</constant>, and
						<constant>GL_QUADRATIC_ATTENUATION</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>params</parameter></term>
				<listitem>
					<simpara>
						Returns the requested data.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsect1>
	<refsect1 id="glGetLight.3G-description">
		<title>Description</title>
		<para>
			<function moreinfo="refentry">glGetLight</function> returns in <parameter>params</parameter> the value or values of a
			light source parameter. <parameter>light</parameter> names the light and is a symbolic name of the form
			<constant>GL_LIGHT</constant><inlineequation>
				<mml:math>
					<mml:mi>i</mml:mi>
				</mml:math>
			</inlineequation> for 0 &le; <inlineequation>
				<mml:math>
					<mml:mi>i</mml:mi>
				</mml:math>
			</inlineequation> &lt; <constant>GL_MAX_LIGHTS</constant>, where <constant>GL_MAX_LIGHTS</constant> is an
			implementation dependent constant that is greater than or equal to eight. <parameter>pname</parameter> specifies one of
			ten light source parameters, again by symbolic name.
		</para>
		<para>
			The following parameters are defined:
		</para>
		<variablelist>
			<varlistentry>
				<term><constant>GL_AMBIENT</constant></term>
				<listitem>
					<simpara>
						<parameter>params</parameter> returns four integer or floating-point values representing the ambient
						intensity of the light source. Integer values, when requested, are linearly mapped from the internal
						floating-point representation such that 1.0 maps to the most positive representable integer value, and -1.0
						maps to the most negative representable integer value. If the internal value is outside the range [-1, 1],
						the corresponding integer return value is undefined. The initial value is (0, 0, 0, 1).
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_DIFFUSE</constant></term>
				<listitem>
					<simpara>
						<parameter>params</parameter> returns four integer or floating-point values representing the diffuse
						intensity of the light source. Integer values, when requested, are linearly mapped from the internal
						floating-point representation such that 1.0 maps to the most positive representable integer value, and -1.0
						maps to the most negative representable integer value. If the internal value is outside the range [-1, 1],
						the corresponding integer return value is undefined. The initial value for <constant>GL_LIGHT0</constant>
						is (1, 1, 1, 1); for other lights, the initial value is (0, 0, 0, 0).
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_SPECULAR</constant></term>
				<listitem>
					<simpara>
						<parameter>params</parameter> returns four integer or floating-point values representing the specular
						intensity of the light source. Integer values, when requested, are linearly mapped from the internal
						floating-point representation such that 1.0 maps to the most positive representable integer value, and -1.0
						maps to the most negative representable integer value. If the internal value is outside the range [-1, 1],
						the corresponding integer return value is undefined. The initial value for <constant>GL_LIGHT0</constant>
						is (1, 1, 1, 1); for other lights, the initial value is (0, 0, 0, 0).
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_POSITION</constant></term>
				<listitem>
					<simpara>
						<parameter>params</parameter> returns four integer or floating-point values representing the position of
						the light source. Integer values, when requested, are computed by rounding the internal floating-point
						values to the nearest integer value. The returned values are those maintained in eye coordinates. They will
						not be equal to the values specified using <function moreinfo="refentry">glLight</function>, unless the
						modelview matrix was identity at the time <function moreinfo="refentry">glLight</function> was called. The
						initial value is (0, 0, 1, 0).
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_SPOT_DIRECTION</constant></term>
				<listitem>
					<simpara>
						<parameter>params</parameter> returns three integer or floating-point values representing the direction of
						the light source. Integer values, when requested, are computed by rounding the internal floating-point
						values to the nearest integer value. The returned values are those maintained in eye coordinates. They will
						not be equal to the values specified using <function moreinfo="refentry">glLight</function>, unless the
						modelview matrix was identity at the time <function moreinfo="refentry">glLight</function> was called.
						Although spot direction is normalized before being used in the lighting equation, the returned values are
						the transformed versions of the specified values prior to normalization. The initial value is (0, 0, -1).
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_SPOT_EXPONENT</constant></term>
				<listitem>
					<simpara>
						<parameter>params</parameter> returns a single integer or floating-point value representing the spot
						exponent of the light. An integer value, when requested, is computed by rounding the internal
						floating-point representation to the nearest integer. The initial value is 0.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_SPOT_CUTOFF</constant></term>
				<listitem>
					<simpara>
						<parameter>params</parameter> returns a single integer or floating-point value representing the spot cutoff
						angle of the light. An integer value, when requested, is computed by rounding the internal floating-point
						representation to the nearest integer. The initial value is 180.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_CONSTANT_ATTENUATION</constant></term>
				<listitem>
					<simpara>
						<parameter>params</parameter> returns a single integer or floating-point value representing the constant
						(not distance-related) attenuation of the light. An integer value, when requested, is computed by rounding
						the internal floating-point representation to the nearest integer. The initial value is 1.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_LINEAR_ATTENUATION</constant></term>
				<listitem>
					<simpara>
						<parameter>params</parameter> returns a single integer or floating-point value representing the linear
						attenuation of the light. An integer value, when requested, is computed by rounding the internal
						floating-point representation to the nearest integer. The initial value is 0.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_QUADRATIC_ATTENUATION</constant></term>
				<listitem>
					<simpara>
						<parameter>params</parameter> returns a single integer or floating-point value representing the quadratic
						attenuation of the light. An integer value, when requested, is computed by rounding the internal
						floating-point representation to the nearest integer. The initial value is 0.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsect1>
	<refsect1 id="glGetLight.3G-notes">
		<title>Notes</title>
		<para>
			It is always the case that <constant>GL_LIGHT</constant><inlineequation>
				<mml:math>
					<mml:mi>i</mml:mi>
				</mml:math>
			</inlineequation> = <constant>GL_LIGHT0</constant> + <inlineequation>
				<mml:math>
					<mml:mi>i</mml:mi>
				</mml:math>
			</inlineequation>.
		</para>
		<para>
			If an error is generated, no change is made to the contents of <parameter>params</parameter>.
		</para>
	</refsect1>
	<refsect1 id="glGetLight.3G-errors">
		<title>Errors</title>
		<para>
			<constant>GL_INVALID_ENUM</constant> is generated if <parameter>light</parameter> or <parameter>pname</parameter> is
			not an accepted value.
		</para>
		<para>
			<constant>GL_INVALID_OPERATION</constant> is generated if <function moreinfo="refentry">glGetLight</function> is
			executed between the execution of <function moreinfo="refentry">glBegin</function> and the corresponding execution of
			<function moreinfo="refentry">glEnd</function>.
		</para>
	</refsect1>
	<refsect1 id="glGetLight.3G-see_also">
		<title>See Also</title>
		<para>
			<simplelist type="inline">
				<member><citerefentry>
					<refentrytitle>glLight</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
			</simplelist>
		</para>
	</refsect1>
</refentry>
