<refentry id="glGetTexImage.3G">
	<refmeta id="glGetTexImage.3G-meta">
		<refentrytitle>glGetTexImage</refentrytitle>
		<manvolnum>3G</manvolnum>
	</refmeta>
	<refnamediv id="glGetTexImage.3G-name">
		<refname>glGetTexImage</refname>
		<refpurpose>return a texture image</refpurpose>
	</refnamediv>
	<refsynopsisdiv id="glGetTexImage.3G-c_spec">
		<title>C Specification</title>
		<funcsynopsis>
			<funcprototype>
				<funcdef>void&nbsp;<function>glGetTexImage</function></funcdef>
				<paramdef>GLenum&nbsp;<parameter>target</parameter></paramdef>
				<paramdef>GLint&nbsp;<parameter>level</parameter></paramdef>
				<paramdef>GLenum&nbsp;<parameter>format</parameter></paramdef>
				<paramdef>GLenum&nbsp;<parameter>type</parameter></paramdef>
				<paramdef>GLvoid&nbsp;*<parameter>pixels</parameter></paramdef>
			</funcprototype>
		</funcsynopsis>
	</refsynopsisdiv>
	<refsect1 id="glGetTexImage.3G-parameters">
		<title>Parameters</title>
		<variablelist>
			<varlistentry>
				<term><parameter>target</parameter></term>
				<listitem>
					<simpara>
						Specifies which texture is to be obtained. <constant>GL_TEXTURE_1D</constant>,
						<constant>GL_TEXTURE_2D</constant>, and <constant>GL_TEXTURE_3D</constant> are accepted.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>level</parameter></term>
				<listitem>
					<simpara>
						Specifies the level-of-detail number of the desired image. Level 0 is the base image level. Level
						<inlineequation>
							<mml:math>
								<mml:mi>n</mml:mi>
							</mml:math>
						</inlineequation> is the <inlineequation>
							<mml:math>
								<mml:mi>n</mml:mi>
							</mml:math>
						</inlineequation>th mipmap reduction image.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>format</parameter></term>
				<listitem>
					<simpara>
						Specifies a pixel for the returned data. The supported formats are <constant>GL_RED</constant>,
						<constant>GL_GREEN</constant>, <constant>GL_BLUE</constant>, <constant>GL_ALPHA</constant>,
						<constant>GL_RGB</constant>, <constant>GL_BGR</constant>, <constant>GL_RGBA</constant>,
						<constant>GL_BGRA</constant>, <constant>GL_LUMINANCE</constant>, and
						<constant>GL_LUMINANCE_ALPHA</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>type</parameter></term>
				<listitem>
					<simpara>
						Specifies a pixel type for the returned data. The supported types are
						<constant>GL_UNSIGNED_BYTE</constant>, <constant>GL_BYTE</constant>,
						<constant>GL_UNSIGNED_SHORT</constant>, <constant>GL_SHORT</constant>,
						<constant>GL_UNSIGNED_INT</constant>, <constant>GL_INT</constant>, <constant>GL_FLOAT</constant>,
						<constant>GL_UNSIGNED_BYTE_3_3_2</constant>, <constant>GL_UNSIGNED_BYTE_2_3_3_REV</constant>,
						<constant>GL_UNSIGNED_SHORT_5_6_5</constant>, <constant>GL_UNSIGNED_SHORT_5_6_5_REV</constant>,
						<constant>GL_UNSIGNED_SHORT_4_4_4_4</constant>, <constant>GL_UNSIGNED_SHORT_4_4_4_4_REV</constant>,
						<constant>GL_UNSIGNED_SHORT_5_5_5_1</constant>, <constant>GL_UNSIGNED_SHORT_1_5_5_5_REV</constant>,
						<constant>GL_UNSIGNED_INT_8_8_8_8</constant>, <constant>GL_UNSIGNED_INT_8_8_8_8_REV</constant>,
						<constant>GL_UNSIGNED_INT_10_10_10_2</constant>, and <constant>GL_UNSIGNED_INT_2_10_10_10_REV</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>pixels</parameter></term>
				<listitem>
					<simpara>
						Returns the texture image. Should be a pointer to an array of the type specified by
						<parameter>type</parameter>.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsect1>
	<refsect1 id="glGetTexImage.3G-description">
		<title>Description</title>
		<para>
			<function>glGetTexImage</function> returns a texture image into <parameter>pixels</parameter>.
			<parameter>target</parameter> specifies whether the desired texture image is one specified by <function
			moreinfo="refentry">glTexImage1D</function> (<constant>GL_TEXTURE_1D</constant>), <function
			moreinfo="refentry">glTexImage2D</function> (<constant>GL_TEXTURE_2D</constant>), or <function
			moreinfo="refentry">glTexImage3D</function> (<constant>GL_TEXTURE_3D</constant>). <parameter>level</parameter>
			specifies the level-of-detail number of the desired image. <parameter>format</parameter> and
			<parameter>type</parameter> specify the and type of the desired image array. See the reference pages <function
			moreinfo="refentry">glTexImage1D</function> and <function moreinfo="refentry">glDrawPixels</function> for a description
			of the acceptable values for the <parameter>format</parameter> and <parameter>type</parameter> parameters,
			respectively.
		</para>
		<para>
			To understand the operation of <function>glGetTexImage</function>, consider the selected internal four-component
			texture image to be an RGBA color buffer the size of the image. The semantics of <function>glGetTexImage</function> are
			then identical to those of <function moreinfo="refentry">glReadPixels</function>, with the exception that no pixel
			transfer operations are performed, when called with the same <parameter>format</parameter> and
			<parameter>type</parameter>, with <parameter>x</parameter> and <parameter>y</parameter> set to 0,
			<parameter>width</parameter> set to the width of the texture image (including border if one was specified), and
			<parameter>height</parameter> set to 1 for 1D images, or to the height of the texture image (including border if one
			was specified) for 2D images. Because the internal texture image is an RGBA image, pixel formats
			<constant>GL_COLOR_INDEX</constant>, <constant>GL_STENCIL_INDEX</constant>, and <constant>GL_DEPTH_COMPONENT</constant>
			are not accepted, and pixel type <constant>GL_BITMAP</constant> is not accepted.
		</para>
		<para>
			If the selected texture image does not contain four components, the following mappings are applied. Single-component
			textures are treated as RGBA buffers with red set to the single-component value, green set to 0, blue set to 0, and
			alpha set to 1. Two-component textures are treated as RGBA buffers with red set to the value of component zero, alpha
			set to the value of component one, and green and blue set to 0. Finally, three-component textures are treated as RGBA
			buffers with red set to component zero, green set to component one, blue set to component two, and alpha set to 1.
		</para>
		<para>
			To determine the required size of <parameter>pixels</parameter>, use <function
			moreinfo="refentry">glGetTexLevelParameter</function> to determine the dimensions of the internal texture image, then
			scale the required number of pixels by the storage required for each pixel, based on <parameter>format</parameter> and
			<parameter>type</parameter>. Be sure to take the pixel storage parameters into account, especially
			<constant>GL_PACK_ALIGNMENT</constant>.
		</para>
	</refsect1>
	<refsect1 id="glGetTexImage.3G-notes">
		<title>Notes</title>
		<para>
			If an error is generated, no change is made to the contents of <parameter>pixels</parameter>.
		</para>
		<para>
			When the <constant>GL_ARB_multitexture</constant> extension is supported, <function>glGetTexImage</function> returns
			the texture image for the active texture unit.
		</para>
		<para>
			The types <constant>GL_UNSIGNED_BYTE_3_3_2</constant>, <constant>GL_UNSIGNED_BYTE_2_3_3_REV</constant>,
			<constant>GL_UNSIGNED_SHORT_5_6_5</constant>, <constant>GL_UNSIGNED_SHORT_5_6_5_REV</constant>,
			<constant>GL_UNSIGNED_SHORT_4_4_4_4</constant>, <constant>GL_UNSIGNED_SHORT_4_4_4_4_REV</constant>,
			<constant>GL_UNSIGNED_SHORT_5_5_5_1</constant>, <constant>GL_UNSIGNED_SHORT_1_5_5_5_REV</constant>,
			<constant>GL_UNSIGNED_INT_8_8_8_8</constant>, <constant>GL_UNSIGNED_INT_8_8_8_8_REV</constant>,
			<constant>GL_UNSIGNED_INT_10_10_10_2</constant>, <constant>GL_UNSIGNED_INT_2_10_10_10_REV</constant>, and the formats
			<constant>GL_BGR</constant>, and <constant>GL_BGRA</constant> are available only if the GL version is 1.2 or greater.
		</para>
	</refsect1>
	<refsect1 id="glGetTexImage.3G-errors">
		<title>Errors</title>
		<para>
			<constant>GL_INVALID_ENUM</constant> is generated if <parameter>target</parameter>, <parameter>format</parameter>, or
			<parameter>type</parameter> is not an accepted value.
		</para>
		<para>
			<constant>GL_INVALID_VALUE</constant> is generated if <parameter>level</parameter> is less than 0.
		</para>
		<para>
			<constant>GL_INVALID_VALUE</constant> may be generated if <parameter>level</parameter> is greater than <inlineequation>
				<mml:math>
					<mml:mrow>
						<mml:msub>
							<mml:mi>log</mml:mi>
							<mml:mn>2</mml:mn>
						</mml:msub>
						<mml:mi>max</mml:mi>
					</mml:mrow>
				</mml:math>
			</inlineequation>, where <inlineequation>
				<mml:math>
					<mml:mi>max</mml:mi>
				</mml:math>
			</inlineequation> is the returned value of <constant>GL_MAX_TEXTURE_SIZE</constant>.
		</para>
		<para>
			<constant>GL_INVALID_OPERATION</constant> is generated if <function>glGetTexImage</function> is executed between the
			execution of <function moreinfo="refentry">glBegin</function> and the corresponding execution of <function
			moreinfo="refentry">glEnd</function>.
		</para>
		<para>
			<constant>GL_INVALID_OPERATION</constant> is returned if <parameter>type</parameter> is one of
			<constant>GL_UNSIGNED_BYTE_3_3_2</constant>, <constant>GL_UNSIGNED_BYTE_2_3_3_REV</constant>,
			<constant>GL_UNSIGNED_SHORT_5_6_5</constant>, or <constant>GL_UNSIGNED_SHORT_5_6_5_REV</constant> and
			<parameter>format</parameter> is not <constant>GL_RGB</constant>.
		</para>
		<para>
			<constant>GL_INVALID_OPERATION</constant> is returned if <parameter>type</parameter> is one of
			<constant>GL_UNSIGNED_SHORT_4_4_4_4</constant>, <constant>GL_UNSIGNED_SHORT_4_4_4_4_REV</constant>,
			<constant>GL_UNSIGNED_SHORT_5_5_5_1</constant>, <constant>GL_UNSIGNED_SHORT_1_5_5_5_REV</constant>,
			<constant>GL_UNSIGNED_INT_8_8_8_8</constant>, <constant>GL_UNSIGNED_INT_8_8_8_8_REV</constant>,
			<constant>GL_UNSIGNED_INT_10_10_10_2</constant>, or <constant>GL_UNSIGNED_INT_2_10_10_10_REV</constant>, and
			<parameter>format</parameter> is neither <constant>GL_RGBA</constant> or <constant>GL_BGRA</constant>.
		</para>
	</refsect1>
	<refsect1 id="glGetTexImage.3G-associated_gets">
		<title>Associated Gets</title>
		<para>
			<function moreinfo="refentry">glGetTexLevelParameter</function> with argument <constant>GL_TEXTURE_WIDTH</constant>
		</para>
		<para>
			<function moreinfo="refentry">glGetTexLevelParameter</function> with argument <constant>GL_TEXTURE_HEIGHT</constant>
		</para>
		<para>
			<function moreinfo="refentry">glGetTexLevelParameter</function> with argument <constant>GL_TEXTURE_BORDER</constant>
		</para>
		<para>
			<function moreinfo="refentry">glGetTexLevelParameter</function> with argument
			<constant>GL_TEXTURE_INTERNALFORMAT</constant>
		</para>
		<para>
			<function moreinfo="refentry">glGet</function> with arguments <constant>GL_PACK_ALIGNMENT</constant> and others
		</para>
	</refsect1>
	<refsect1 id="glGetTexImage.3G-see_also">
		<title>See Also</title>
		<para>
			<simplelist type="inline">
				<member><citerefentry>
					<refentrytitle>glActiveTextureARB</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glDrawPixels</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glReadPixels</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexEnv</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexGen</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexImage1D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexImage2D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexImage3D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexSubImage1D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexSubImage2D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexSubImage3D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexParameter</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
			</simplelist>
		</para>
	</refsect1>
</refentry>
