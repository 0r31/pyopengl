<refentry id="glGetConvolutionFilter.3G">
	<refmeta id="glGetConvolutionFilter.3G-meta">
		<refentrytitle>glGetConvolutionFilter</refentrytitle>
		<manvolnum>3G</manvolnum>
	</refmeta>
	<refnamediv id="glGetConvolutionFilter.3G-name">
		<refname>glGetConvolutionFilter</refname>
		<refpurpose>get current 1D or 2D convolution filter kernel</refpurpose>
	</refnamediv>
	<refsynopsisdiv id="glGetConvolutionFilter.3G-c_spec">
		<title>C Specification</title>
		<funcsynopsis>
			<funcprototype>
				<funcdef>void&nbsp;<function>glGetConvolutionFilter</function></funcdef>
				<paramdef>GLenum&nbsp;<parameter>target</parameter></paramdef>
				<paramdef>GLenum&nbsp;<parameter>format</parameter></paramdef>
				<paramdef>GLenum&nbsp;<parameter>type</parameter></paramdef>
				<paramdef>GLvoid&nbsp;*<parameter>image</parameter></paramdef>
			</funcprototype>
		</funcsynopsis>
	</refsynopsisdiv>
	<refsect1 id="glGetConvolutionFilter.3G-parameters">
		<title>Parameters</title>
		<variablelist>
			<varlistentry>
				<term><parameter>target</parameter></term>
				<listitem>
					<simpara>
						The filter to be retrieved. Must be one of <constant>GL_CONVOLUTION_1D</constant> or
						<constant>GL_CONVOLUTION_2D</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>format</parameter></term>
				<listitem>
					<simpara>
						Format of the output image. Must be one of <constant>GL_RED</constant>, <constant>GL_GREEN</constant>,
						<constant>GL_BLUE</constant>, <constant>GL_ALPHA</constant>, <constant>GL_RGB</constant>,
						<constant>GL_BGR</constant>, <constant>GL_RGBA</constant>, <constant>GL_BGRA</constant>,
						<constant>GL_LUMINANCE</constant>, or <constant>GL_LUMINANCE_ALPHA</constant>.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>type</parameter></term>
				<listitem>
					<simpara>
						Data type of components in the output image. Symbolic constants <constant>GL_UNSIGNED_BYTE</constant>,
						<constant>GL_BYTE</constant>, <constant>GL_BITMAP</constant>, <constant>GL_UNSIGNED_SHORT</constant>,
						<constant>GL_SHORT</constant>, <constant>GL_UNSIGNED_INT</constant>, <constant>GL_INT</constant>,
						<constant>GL_FLOAT</constant>, <constant>GL_UNSIGNED_BYTE_3_3_2</constant>,
						<constant>GL_UNSIGNED_BYTE_2_3_3_REV</constant>, <constant>GL_UNSIGNED_SHORT_5_6_5</constant>,
						<constant>GL_UNSIGNED_SHORT_5_6_5_REV</constant>, <constant>GL_UNSIGNED_SHORT_4_4_4_4</constant>,
						<constant>GL_UNSIGNED_SHORT_4_4_4_4_REV</constant>, <constant>GL_UNSIGNED_SHORT_5_5_5_1</constant>,
						<constant>GL_UNSIGNED_SHORT_1_5_5_5_REV</constant>, <constant>GL_UNSIGNED_INT_8_8_8_8</constant>,
						<constant>GL_UNSIGNED_INT_8_8_8_8_REV</constant>, <constant>GL_UNSIGNED_INT_10_10_10_2</constant>, and
						<constant>GL_UNSIGNED_INT_2_10_10_10_REV</constant> are accepted.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>image</parameter></term>
				<listitem>
					<simpara>
						Pointer to storage for the output image.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsect1>
	<refsect1 id="glGetConvolutionFilter.3G-description">
		<title>Description</title>
		<para>
			<function>glGetConvolutionFilter</function> returns the current 1D or 2D convolution filter kernel as an image. The
			one- or two-dimensional image is placed in <parameter>image</parameter> according to the specifications in
			<parameter>format</parameter> and <parameter>type</parameter>. No pixel transfer operations are performed on this
			image, but the relevant pixel storage modes are applied. Color components that are present in
			<parameter>format</parameter> but not included in the internal of the filter are returned as zero. The assignments of
			internal color components to the components of <parameter>format</parameter> are as follows.
		</para>
		<informaltable frame="topbot">
			<tgroup cols="2">
				<tbody>
					<row>
						<entry><emphasis role="bold">Internal Component</emphasis></entry>
						<entry><emphasis role="bold">Resulting Component</emphasis></entry>
					</row>
					<row>
						<entry>Red</entry>
						<entry>Red</entry>
					</row>
					<row>
						<entry>Green</entry>
						<entry>Green</entry>
					</row>
					<row>
						<entry>Blue</entry>
						<entry>Blue</entry>
					</row>
					<row>
						<entry>Alpha</entry>
						<entry>Alpha</entry>
					</row>
					<row>
						<entry>Luminance</entry>
						<entry>Red</entry>
					</row>
					<row>
						<entry>Intensity</entry>
						<entry>Red</entry>
					</row>
				</tbody>
			</tgroup>
		</informaltable>
	</refsect1>
	<refsect1 id="glGetConvolutionFilter.3G-notes">
		<title>Notes</title>
		<para>
			<function>glGetConvolutionFilter</function> is present only if <constant>GL_ARB_imaging</constant> is returned when
			<function moreinfo="refentry">glGetString</function> is called with an argument of <constant>GL_EXTENSIONS</constant>.
		</para>
		<para>
			The current separable 2D filter must be retrieved with <function moreinfo="refentry">glGetSeparableFilter</function>
			rather than <function>glGetConvolutionFilter</function>.
		</para>
	</refsect1>
	<refsect1 id="glGetConvolutionFilter.3G-errors">
		<title>Errors</title>
		<para>
			<constant>GL_INVALID_ENUM</constant> is generated if <parameter>target</parameter> is not one of the allowable values.
		</para>
		<para>
			<constant>GL_INVALID_ENUM</constant> is generated if <parameter>format</parameter> is not one of the allowable values.
		</para>
		<para>
			<constant>GL_INVALID_ENUM</constant> is generated if <parameter>type</parameter> is not one of the allowable values.
		</para>
		<para>
			<constant>GL_INVALID_OPERATION</constant> is generated if <function>glGetConvolutionFilter</function> is executed
			between the execution of <function moreinfo="refentry">glBegin</function> and the corresponding execution of <function
			moreinfo="refentry">glEnd</function>.
		</para>
		<para>
			<constant>GL_INVALID_OPERATION</constant> is generated if <parameter>type</parameter> is one of
			<constant>GL_UNSIGNED_BYTE_3_3_2</constant>, <constant>GL_UNSIGNED_BYTE_2_3_3_REV</constant>,
			<constant>GL_UNSIGNED_SHORT_5_6_5</constant>, or <constant>GL_UNSIGNED_SHORT_5_6_5_REV</constant> and
			<parameter>format</parameter> is not <constant>GL_RGB</constant>.
		</para>
		<para>
			<constant>GL_INVALID_OPERATION</constant> is generated if <parameter>type</parameter> is one of
			<constant>GL_UNSIGNED_SHORT_4_4_4_4</constant>, <constant>GL_UNSIGNED_SHORT_4_4_4_4_REV</constant>,
			<constant>GL_UNSIGNED_SHORT_5_5_5_1</constant>, <constant>GL_UNSIGNED_SHORT_1_5_5_5_REV</constant>,
			<constant>GL_UNSIGNED_INT_8_8_8_8</constant>, <constant>GL_UNSIGNED_INT_8_8_8_8_REV</constant>,
			<constant>GL_UNSIGNED_INT_10_10_10_2</constant>, or <constant>GL_UNSIGNED_INT_2_10_10_10_REV</constant> and
			<parameter>format</parameter> is neither <constant>GL_RGBA</constant> nor <constant>GL_BGRA</constant>.
		</para>
	</refsect1>
	<refsect1 id="glGetConvolutionFilter.3G-associated_gets">
		<title>Associated Gets</title>
		<para>
			<function moreinfo="refentry">glGetConvolutionParameter</function>
		</para>
	</refsect1>
	<refsect1 id="glGetConvolutionFilter.3G-see_also">
		<title>See Also</title>
		<para>
			<simplelist type="inline">
				<member><citerefentry>
					<refentrytitle>glGetSeparableFilter</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glConvolutionParameter</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glConvolutionFilter1D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glConvolutionFilter2D</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
			</simplelist>
		</para>
	</refsect1>
</refentry>
