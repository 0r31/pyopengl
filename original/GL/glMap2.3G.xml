<refentry id="glMap2.3G">
	<refmeta id="glMap2.3G-meta">
		<refentrytitle>glMap2</refentrytitle>
		<manvolnum>3G</manvolnum>
	</refmeta>
	<refnamediv id="glMap2.3G-name">
		<refname>glMap2d</refname>
		<refname>glMap2f</refname>
		<refpurpose>define a two-dimensional evaluator</refpurpose>
	</refnamediv>
	<refsynopsisdiv id="glMap2.3G-c_spec">
		<title>C Specification</title>
		<funcsynopsis>
			<funcprototype>
				<funcdef>void&nbsp;<function>glMap2d</function></funcdef>
				<paramdef>GLenum&nbsp;<parameter>target</parameter></paramdef>
				<paramdef>GLdouble&nbsp;<parameter>u1</parameter></paramdef>
				<paramdef>GLdouble&nbsp;<parameter>u2</parameter></paramdef>
				<paramdef>GLint&nbsp;<parameter>ustride</parameter></paramdef>
				<paramdef>GLint&nbsp;<parameter>uorder</parameter></paramdef>
				<paramdef>GLdouble&nbsp;<parameter>v1</parameter></paramdef>
				<paramdef>GLdouble&nbsp;<parameter>v2</parameter></paramdef>
				<paramdef>GLint&nbsp;<parameter>vstride</parameter></paramdef>
				<paramdef>GLint&nbsp;<parameter>vorder</parameter></paramdef>
				<paramdef>const&nbsp;GLdouble&nbsp;*<parameter>points</parameter></paramdef>
			</funcprototype>
			<funcprototype>
				<funcdef>void&nbsp;<function>glMap2f</function></funcdef>
				<paramdef>GLenum&nbsp;<parameter>target</parameter></paramdef>
				<paramdef>GLfloat&nbsp;<parameter>u1</parameter></paramdef>
				<paramdef>GLfloat&nbsp;<parameter>u2</parameter></paramdef>
				<paramdef>GLint&nbsp;<parameter>ustride</parameter></paramdef>
				<paramdef>GLint&nbsp;<parameter>uorder</parameter></paramdef>
				<paramdef>GLfloat&nbsp;<parameter>v1</parameter></paramdef>
				<paramdef>GLfloat&nbsp;<parameter>v2</parameter></paramdef>
				<paramdef>GLint&nbsp;<parameter>vstride</parameter></paramdef>
				<paramdef>GLint&nbsp;<parameter>vorder</parameter></paramdef>
				<paramdef>const&nbsp;GLfloat&nbsp;*<parameter>points</parameter></paramdef>
			</funcprototype>
		</funcsynopsis>
	</refsynopsisdiv>
	<refsect1 id="glMap2.3G-parameters">
		<title>Parameters</title>
		<variablelist>
			<varlistentry>
				<term><parameter>target</parameter></term>
				<listitem>
					<simpara>
						Specifies the kind of values that are generated by the evaluator. Symbolic constants
						<constant>GL_MAP2_VERTEX_3</constant>, <constant>GL_MAP2_VERTEX_4</constant>,
						<constant>GL_MAP2_INDEX</constant>, <constant>GL_MAP2_COLOR_4</constant>,
						<constant>GL_MAP2_NORMAL</constant>, <constant>GL_MAP2_TEXTURE_COORD_1</constant>,
						<constant>GL_MAP2_TEXTURE_COORD_2</constant>, <constant>GL_MAP2_TEXTURE_COORD_3</constant>, and
						<constant>GL_MAP2_TEXTURE_COORD_4</constant> are accepted.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>u1</parameter>, <parameter>u2</parameter></term>
				<listitem>
					<simpara>
						Specify a linear mapping of <inlineequation>
							<mml:math>
								<mml:mi>u</mml:mi>
							</mml:math>
						</inlineequation>, as presented to <function moreinfo="refentry">glEvalCoord2</function>, to
						<inlineequation>
							<mml:math>
								<mml:mover>
									<mml:mi>u</mml:mi>
									<mml:mo>&Hat;</mml:mo>
								</mml:mover>
							</mml:math>
						</inlineequation>, one of the two variables that are evaluated by the equations specified by this command.
						Initially, <parameter>u1</parameter> is 0 and <parameter>u2</parameter> is 1.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>ustride</parameter></term>
				<listitem>
					<simpara>
						Specifies the number of floats or doubles between the beginning of control point <inlineequation>
							<mml:math>
								<mml:msub>
									<mml:mi>R</mml:mi>
									<mml:mi>ij</mml:mi>
								</mml:msub>
							</mml:math>
						</inlineequation> and the beginning of control point <inlineequation>
							<mml:math>
								<mml:msub>
									<mml:mi>R</mml:mi>
									<mml:mrow>
										<mml:mo>(</mml:mo>
										<mml:mi>i+1</mml:mi>
										<mml:mo>)</mml:mo>
										<mml:mi>j</mml:mi>
									</mml:mrow>
								</mml:msub>
							</mml:math>
						</inlineequation>, where <inlineequation>
							<mml:math>
								<mml:mi>i</mml:mi>
							</mml:math>
						</inlineequation> and <inlineequation>
							<mml:math>
								<mml:mi>j</mml:mi>
							</mml:math>
						</inlineequation> are the <inlineequation>
							<mml:math>
								<mml:mi>u</mml:mi>
							</mml:math>
						</inlineequation> and <inlineequation>
							<mml:math>
								<mml:mi>v</mml:mi>
							</mml:math>
						</inlineequation> control point indices, respectively. This allows control points to be embedded in
						arbitrary data structures. The only constraint is that the values for a particular control point must
						occupy contiguous memory locations. The initial value of <parameter>ustride</parameter> is 0.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>uorder</parameter></term>
				<listitem>
					<simpara>
						Specifies the dimension of the control point array in the <inlineequation>
							<mml:math>
								<mml:mi>u</mml:mi>
							</mml:math>
						</inlineequation> axis. Must be positive. The initial value is 1.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>v1</parameter>, <parameter>v2</parameter></term>
				<listitem>
					<simpara>
						Specify a linear mapping of <inlineequation>
							<mml:math>
								<mml:mi>v</mml:mi>
							</mml:math>
						</inlineequation>, as presented to <function moreinfo="refentry">glEvalCoord2</function>, to
						<inlineequation>
							<mml:math>
								<mml:mover>
									<mml:mi>v</mml:mi>
									<mml:mo>&Hat;</mml:mo>
								</mml:mover>
							</mml:math>
						</inlineequation>, one of the two variables that are evaluated by the equations specified by this command.
						Initially, <parameter>v1</parameter> is 0 and <parameter>v2</parameter> is 1.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>vstride</parameter></term>
				<listitem>
					<simpara>
						Specifies the number of floats or doubles between the beginning of control point <inlineequation>
							<mml:math>
								<mml:msub>
									<mml:mi>R</mml:mi>
									<mml:mi>ij</mml:mi>
								</mml:msub>
							</mml:math>
						</inlineequation> and the beginning of control point <inlineequation>
							<mml:math>
								<mml:msub>
									<mml:mi>R</mml:mi>
									<mml:mrow>
										<mml:mi>i</mml:mi>
										<mml:mo>(</mml:mo>
										<mml:mi>j+1</mml:mi>
										<mml:mo>)</mml:mo>
									</mml:mrow>
								</mml:msub>
							</mml:math>
						</inlineequation>, where <inlineequation>
							<mml:math>
								<mml:mi>i</mml:mi>
							</mml:math>
						</inlineequation> and <inlineequation>
							<mml:math>
								<mml:mi>j</mml:mi>
							</mml:math>
						</inlineequation> are the <inlineequation>
							<mml:math>
								<mml:mi>u</mml:mi>
							</mml:math>
						</inlineequation> and <inlineequation>
							<mml:math>
								<mml:mi>v</mml:mi>
							</mml:math>
						</inlineequation> control point indices, respectively. This allows control points to be embedded in
						arbitrary data structures. The only constraint is that the values for a particular control point must
						occupy contiguous memory locations. The initial value of <parameter>vstride</parameter> is 0.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>vorder</parameter></term>
				<listitem>
					<simpara>
						Specifies the dimension of the control point array in the <inlineequation>
							<mml:math>
								<mml:mi>v</mml:mi>
							</mml:math>
						</inlineequation> axis. Must be positive. The initial value is 1.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>points</parameter></term>
				<listitem>
					<simpara>
						Specifies a pointer to the array of control points.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsect1>
	<refsect1 id="glMap2.3G-description">
		<title>Description</title>
		<para>
			Evaluators provide a way to use polynomial or rational polynomial mapping to produce vertices, normals, texture
			coordinates, and colors. The values produced by an evaluator are sent on to further stages of GL processing just as if
			they had been presented using <function moreinfo="refentry">glVertex</function>, <function
			moreinfo="refentry">glNormal</function>, <function moreinfo="refentry">glTexCoord</function>, and <function
			moreinfo="refentry">glColor</function> commands, except that the generated values do not update the current normal,
			texture coordinates, or color.
		</para>
		<para>
			All polynomial or rational polynomial splines of any degree (up to the maximum degree supported by the GL
			implementation) can be described using evaluators. These include almost all surfaces used in computer graphics,
			including B-spline surfaces, NURBS surfaces, Bezier surfaces, and so on.
		</para>
		<para>
			Evaluators define surfaces based on bivariate Bernstein polynomials. Define <inlineequation>
				<mml:math>
					<mml:mrow>
						<mml:mi>p</mml:mi>
						<mml:mo>(</mml:mo>
						<mml:mover>
							<mml:mi>u</mml:mi>
							<mml:mo>&Hat;</mml:mo>
						</mml:mover>
						<mml:mover>
							<mml:mi>v</mml:mi>
							<mml:mo>&Hat;</mml:mo>
						</mml:mover>
						<mml:mo>)</mml:mo>
					</mml:mrow>
				</mml:math>
			</inlineequation> as <informalequation>
				<mml:math mode="display">
					<mml:mrow>
						<mml:mi>p</mml:mi>
						<mml:mo>(</mml:mo>
						<mml:mover>
							<mml:mi>u</mml:mi>
							<mml:mo>&Hat;</mml:mo>
						</mml:mover>
						<mml:mover>
							<mml:mi>v</mml:mi>
							<mml:mo>&Hat;</mml:mo>
						</mml:mover>
						<mml:mo>)</mml:mo>
						<mml:mo>=</mml:mo>
						<mml:munderover>
							<mml:mo>&Sum;</mml:mo>
							<mml:mrow>
								<mml:mi>i</mml:mi>
								<mml:mo>=</mml:mo>
								<mml:mn>0</mml:mn>
							</mml:mrow>
							<mml:mi>n</mml:mi>
						</mml:munderover>
						<mml:munderover>
							<mml:mo>&Sum;</mml:mo>
							<mml:mrow>
								<mml:mi>j</mml:mi>
								<mml:mo>=</mml:mo>
								<mml:mn>0</mml:mn>
							</mml:mrow>
							<mml:mi>m</mml:mi>
						</mml:munderover>
						<mml:mrow>
							<mml:msup>
								<mml:msub>
									<mml:mi>B</mml:mi>
									<mml:mi>i</mml:mi>
								</mml:msub>
								<mml:mi>n</mml:mi>
							</mml:msup>
							<mml:mo>(</mml:mo>
							<mml:mover>
								<mml:mi>u</mml:mi>
								<mml:mo>&Hat;</mml:mo>
							</mml:mover>
							<mml:mo>)</mml:mo>
							<mml:msup>
								<mml:msub>
									<mml:mi>B</mml:mi>
									<mml:mi>j</mml:mi>
								</mml:msub>
								<mml:mi>m</mml:mi>
							</mml:msup>
							<mml:mo>(</mml:mo>
							<mml:mover>
								<mml:mi>v</mml:mi>
								<mml:mo>&Hat;</mml:mo>
							</mml:mover>
							<mml:mo>)</mml:mo>
							<mml:msub>
								<mml:mi>R</mml:mi>
								<mml:mi>ij</mml:mi>
							</mml:msub>
						</mml:mrow>
					</mml:mrow>
				</mml:math>
			</informalequation>
		</para>
		<para>
			where <inlineequation>
				<mml:math>
					<mml:msub>
						<mml:mi>R</mml:mi>
						<mml:mi>ij</mml:mi>
					</mml:msub>
				</mml:math>
			</inlineequation> is a control point, <inlineequation>
				<mml:math>
					<mml:mrow>
						<mml:msup>
							<mml:msub>
								<mml:mi>B</mml:mi>
								<mml:mi>i</mml:mi>
							</mml:msub>
							<mml:mi>n</mml:mi>
						</mml:msup>
						<mml:mo>(</mml:mo>
						<mml:mover>
							<mml:mi>u</mml:mi>
							<mml:mo>&Hat;</mml:mo>
						</mml:mover>
						<mml:mo>)</mml:mo>
					</mml:mrow>
				</mml:math>
			</inlineequation> is the <inlineequation>
				<mml:math>
					<mml:mi>i</mml:mi>
				</mml:math>
			</inlineequation>th Bernstein polynomial of degree
			<inlineequation>
				<mml:math>
					<mml:mi>n</mml:mi>
				</mml:math>
			</inlineequation> (<parameter>uorder</parameter> = <inlineequation>
				<mml:math>
					<mml:mrow>
						<mml:mi>n</mml:mi>
						<mml:mo>+</mml:mo>
						<mml:mn>1</mml:mn>
					</mml:mrow>
				</mml:math>
			</inlineequation>) <informalequation>
				<mml:math mode="display">
					<mml:mrow>
						<mml:msup>
							<mml:msub>
								<mml:mi>B</mml:mi>
								<mml:mi>i</mml:mi>
							</mml:msub>
							<mml:mi>n</mml:mi>
						</mml:msup>
						<mml:mo>(</mml:mo>
						<mml:mover>
							<mml:mi>u</mml:mi>
							<mml:mo>&Hat;</mml:mo>
						</mml:mover>
						<mml:mo>)</mml:mo>
						<mml:mo>=</mml:mo>
						<mml:mrow>
							<mml:mo>(</mml:mo>
							<mml:mtable columnalign="center">
								<mml:mtr>
									<mml:mtd>
										<mml:mi>n</mml:mi>
									</mml:mtd>
								</mml:mtr>
								<mml:mtr>
									<mml:mtd>
										<mml:mi>i</mml:mi>
									</mml:mtd>
								</mml:mtr>
							</mml:mtable>
							<mml:mo>)</mml:mo>
						</mml:mrow>
						<mml:msup>
							<mml:mover>
								<mml:mi>u</mml:mi>
								<mml:mo>&Hat;</mml:mo>
							</mml:mover>
							<mml:mi>i</mml:mi>
						</mml:msup>
						<mml:mo>(</mml:mo>
						<mml:mn>1</mml:mn>
						<mml:mo>-</mml:mo>
						<mml:mover>
							<mml:mi>u</mml:mi>
							<mml:mo>&Hat;</mml:mo>
						</mml:mover>
						<mml:msup>
							<mml:mo>)</mml:mo>
							<mml:mrow>
								<mml:mi>n</mml:mi>
								<mml:mo>-</mml:mo>
								<mml:mi>i</mml:mi>
							</mml:mrow>
						</mml:msup>
					</mml:mrow>
				</mml:math>
			</informalequation> and <inlineequation>
				<mml:math>
					<mml:mrow>
						<mml:msup>
							<mml:msub>
								<mml:mi>B</mml:mi>
								<mml:mi>j</mml:mi>
							</mml:msub>
							<mml:mi>m</mml:mi>
						</mml:msup>
						<mml:mo>(</mml:mo>
						<mml:mover>
							<mml:mi>v</mml:mi>
							<mml:mo>&Hat;</mml:mo>
						</mml:mover>
						<mml:mo>)</mml:mo>
					</mml:mrow>
				</mml:math>
			</inlineequation> is the <inlineequation>
				<mml:math>
					<mml:mi>j</mml:mi>
				</mml:math>
			</inlineequation>th Bernstein polynomial of degree <inlineequation>
				<mml:math>
					<mml:mi>m</mml:mi>
				</mml:math>
			</inlineequation> (<parameter>vorder</parameter> = <inlineequation>
				<mml:math>
					<mml:mrow>
						<mml:mi>m</mml:mi>
						<mml:mo>+</mml:mo>
						<mml:mn>1</mml:mn>
					</mml:mrow>
				</mml:math>
			</inlineequation>) <informalequation>
				<mml:math mode="display">
					<mml:mrow>
						<mml:msup>
							<mml:msub>
								<mml:mi>B</mml:mi>
								<mml:mi>j</mml:mi>
							</mml:msub>
							<mml:mi>m</mml:mi>
						</mml:msup>
						<mml:mo>(</mml:mo>
						<mml:mover>
							<mml:mi>v</mml:mi>
							<mml:mo>&Hat;</mml:mo>
						</mml:mover>
						<mml:mo>)</mml:mo>
						<mml:mo>=</mml:mo>
						<mml:mrow>
							<mml:mo>(</mml:mo>
							<mml:mtable columnalign="center">
								<mml:mtr>
									<mml:mtd>
										<mml:mi>m</mml:mi>
									</mml:mtd>
								</mml:mtr>
								<mml:mtr>
									<mml:mtd>
										<mml:mi>j</mml:mi>
									</mml:mtd>
								</mml:mtr>
							</mml:mtable>
							<mml:mo>)</mml:mo>
						</mml:mrow>
						<mml:msup>
							<mml:mover>
								<mml:mi>v</mml:mi>
								<mml:mo>&Hat;</mml:mo>
							</mml:mover>
							<mml:mi>j</mml:mi>
						</mml:msup>
						<mml:mo>(</mml:mo>
						<mml:mn>1</mml:mn>
						<mml:mo>-</mml:mo>
						<mml:mover>
							<mml:mi>v</mml:mi>
							<mml:mo>&Hat;</mml:mo>
						</mml:mover>
						<mml:msup>
							<mml:mo>)</mml:mo>
							<mml:mrow>
								<mml:mi>m</mml:mi>
								<mml:mo>-</mml:mo>
								<mml:mi>j</mml:mi>
							</mml:mrow>
						</mml:msup>
					</mml:mrow>
				</mml:math>
			</informalequation>Recall that <inlineequation>
				<mml:math>
					<mml:mrow>
						<mml:msup>
							<mml:mn>0</mml:mn>
							<mml:mn>0</mml:mn>
						</mml:msup>
						<mml:mo>&Congruent;</mml:mo>
						<mml:mn>1</mml:mn>
					</mml:mrow>
				</mml:math>
			</inlineequation> and <inlineequation>
				<mml:math>
					<mml:mrow>
						<mml:mrow>
							<mml:mo>(</mml:mo>
							<mml:mtable columnalign="center">
								<mml:mtr>
									<mml:mtd>
										<mml:mi>n</mml:mi>
									</mml:mtd>
								</mml:mtr>
								<mml:mtr>
									<mml:mtd>
										<mml:mn>0</mml:mn>
									</mml:mtd>
								</mml:mtr>
							</mml:mtable>
							<mml:mo>)</mml:mo>
						</mml:mrow>
						<mml:mo>&Congruent;</mml:mo>
						<mml:mn>1</mml:mn>
					</mml:mrow>
				</mml:math>
			</inlineequation> <function moreinfo="refentry">glMap2</function> is used to define the basis and to specify what kind
			of values are produced. Once defined, a map can be enabled and disabled by calling <function
			moreinfo="refentry">glEnable</function> and <function moreinfo="refentry">glDisable</function> with the map name, one
			of the nine predefined values for <parameter>target</parameter>, described below. When <function
			moreinfo="refentry">glEvalCoord2</function> presents values <inlineequation>
				<mml:math>
					<mml:mi>u</mml:mi>
				</mml:math>
			</inlineequation> and <inlineequation>
				<mml:math>
					<mml:mi>v</mml:mi>
				</mml:math>
			</inlineequation>, the bivariate Bernstein polynomials are evaluated using <inlineequation>
				<mml:math>
					<mml:mover>
						<mml:mi>u</mml:mi>
						<mml:mo>&Hat;</mml:mo>
					</mml:mover>
				</mml:math>
			</inlineequation> and <inlineequation>
				<mml:math>
					<mml:mover>
						<mml:mi>v</mml:mi>
						<mml:mo>&Hat;</mml:mo>
					</mml:mover>
				</mml:math>
			</inlineequation>, where
			</para>
			<informalequation>
				<mml:math>
					<mml:mrow>
						<mml:mover>
							<mml:mi>u</mml:mi>
							<mml:mo>&Hat;</mml:mo>
						</mml:mover>
						<mml:mo>=</mml:mo>
						<mml:mfrac>
							<mml:mrow>
								<mml:mi>u</mml:mi>
								<mml:mo>-</mml:mo>
								<mml:mi>u1</mml:mi>
							</mml:mrow>
							<mml:mrow>
								<mml:mi>u2</mml:mi>
								<mml:mo>-</mml:mo>
								<mml:mi>u1</mml:mi>
							</mml:mrow>
						</mml:mfrac>
					</mml:mrow>
				</mml:math>
			</informalequation> <informalequation>
				<mml:math>
					<mml:mrow>
						<mml:mover>
							<mml:mi>v</mml:mi>
							<mml:mo>&Hat;</mml:mo>
						</mml:mover>
						<mml:mo>=</mml:mo>
						<mml:mfrac>
							<mml:mrow>
								<mml:mi>v</mml:mi>
								<mml:mo>-</mml:mo>
								<mml:mi>v1</mml:mi>
							</mml:mrow>
							<mml:mrow>
								<mml:mi>v2</mml:mi>
								<mml:mo>-</mml:mo>
								<mml:mi>v1</mml:mi>
							</mml:mrow>
						</mml:mfrac>
					</mml:mrow>
				</mml:math>
			</informalequation>
		<para>
			<parameter>target</parameter> is a symbolic constant that indicates what kind of control points are
			provided in <parameter>points</parameter>, and what output is generated when the map is evaluated. It can assume one of
			nine predefined values:
		</para>
		<variablelist>
			<varlistentry>
				<term><constant>GL_MAP2_VERTEX_3</constant></term>
				<listitem>
					<simpara>
						Each control point is three floating-point values representing <inlineequation>
							<mml:math>
								<mml:mi>x</mml:mi>
							</mml:math>
						</inlineequation>, <inlineequation>
							<mml:math>
								<mml:mi>y</mml:mi>
							</mml:math>
						</inlineequation>, and <inlineequation>
							<mml:math>
								<mml:mi>z</mml:mi>
							</mml:math>
						</inlineequation>. Internal <function moreinfo="refentry">glVertex3</function> commands are generated when
						the map is evaluated.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_MAP2_VERTEX_4</constant></term>
				<listitem>
					<simpara>
						Each control point is four floating-point values representing <inlineequation>
							<mml:math>
								<mml:mi>x</mml:mi>
							</mml:math>
						</inlineequation>, <inlineequation>
							<mml:math>
								<mml:mi>y</mml:mi>
							</mml:math>
						</inlineequation>, <inlineequation>
							<mml:math>
								<mml:mi>z</mml:mi>
							</mml:math>
						</inlineequation>, and <inlineequation>
							<mml:math>
								<mml:mi>w</mml:mi>
							</mml:math>
						</inlineequation>. Internal <function moreinfo="refentry">glVertex4</function> commands are generated when
						the map is evaluated.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_MAP2_INDEX</constant></term>
				<listitem>
					<simpara>
						Each control point is a single floating-point value representing a color index. Internal <function
						moreinfo="refentry">glIndex</function> commands are generated when the map is evaluated but the current
						index is not updated with the value of these <function moreinfo="refentry">glIndex</function> commands.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_MAP2_COLOR_4</constant></term>
				<listitem>
					<simpara>
						Each control point is four floating-point values representing red, green, blue, and alpha. Internal
						<function moreinfo="refentry">glColor4</function> commands are generated when the map is evaluated but the
						current color is not updated with the value of these <function moreinfo="refentry">glColor4</function>
						commands.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_MAP2_NORMAL</constant></term>
				<listitem>
					<simpara>
						Each control point is three floating-point values representing the <inlineequation>
							<mml:math>
								<mml:mi>x</mml:mi>
							</mml:math>
						</inlineequation>, <inlineequation>
							<mml:math>
								<mml:mi>y</mml:mi>
							</mml:math>
						</inlineequation>, and <inlineequation>
							<mml:math>
								<mml:mi>z</mml:mi>
							</mml:math>
						</inlineequation> components of a normal vector. Internal <function moreinfo="refentry">glNormal</function>
						commands are generated when the map is evaluated but the current normal is not updated with the value of
						these <function moreinfo="refentry">glNormal</function> commands.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_MAP2_TEXTURE_COORD_1</constant></term>
				<listitem>
					<simpara>
						Each control point is a single floating-point value representing the <inlineequation>
							<mml:math>
								<mml:mi>s</mml:mi>
							</mml:math>
						</inlineequation> texture coordinate. Internal
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
		<para>
			<function moreinfo="refentry">glTexCoord1</function> commands are generated when the map is evaluated but the current
			texture coordinates are not updated with the value of these <function moreinfo="refentry">glTexCoord</function>
			commands.
		</para>
		<variablelist>
			<varlistentry>
				<term><constant>GL_MAP2_TEXTURE_COORD_2</constant></term>
				<listitem>
					<simpara>
						Each control point is two floating-point values representing the <inlineequation>
							<mml:math>
								<mml:mi>s</mml:mi>
							</mml:math>
						</inlineequation> and <inlineequation>
							<mml:math>
								<mml:mi>t</mml:mi>
							</mml:math>
						</inlineequation> texture coordinates. Internal
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
		<para>
			<function moreinfo="refentry">glTexCoord2</function> commands are generated when the map is evaluated but the current
			texture coordinates are not updated with the value of these <function moreinfo="refentry">glTexCoord</function>
			commands.
		</para>
		<variablelist>
			<varlistentry>
				<term><constant>GL_MAP2_TEXTURE_COORD_3</constant></term>
				<listitem>
					<simpara>
						Each control point is three floating-point values representing the <inlineequation>
							<mml:math>
								<mml:mi>s</mml:mi>
							</mml:math>
						</inlineequation>, <inlineequation>
							<mml:math>
								<mml:mi>t</mml:mi>
							</mml:math>
						</inlineequation>, and <inlineequation>
							<mml:math>
								<mml:mi>r</mml:mi>
							</mml:math>
						</inlineequation> texture coordinates. Internal <function moreinfo="refentry">glTexCoord3</function>
						commands are generated when the map is evaluated but the current texture coordinates are not updated with
						the value of these <function moreinfo="refentry">glTexCoord</function> commands.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><constant>GL_MAP2_TEXTURE_COORD_4</constant></term>
				<listitem>
					<simpara>
						Each control point is four floating-point values representing the <inlineequation>
							<mml:math>
								<mml:mi>s</mml:mi>
							</mml:math>
						</inlineequation>, <inlineequation>
							<mml:math>
								<mml:mi>t</mml:mi>
							</mml:math>
						</inlineequation>, <inlineequation>
							<mml:math>
								<mml:mi>r</mml:mi>
							</mml:math>
						</inlineequation>, and <inlineequation>
							<mml:math>
								<mml:mi>q</mml:mi>
							</mml:math>
						</inlineequation> texture coordinates. Internal
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
		<para>
			<function moreinfo="refentry">glTexCoord4</function> commands are generated when the map is evaluated but the current
			texture coordinates are not updated with the value of these <function moreinfo="refentry">glTexCoord</function>
			commands.
		</para>
		<para>
			<parameter>ustride</parameter>, <parameter>uorder</parameter>, <parameter>vstride</parameter>,
			<parameter>vorder</parameter>, and <parameter>points</parameter> define the array addressing for accessing the control
			points. <parameter>points</parameter> is the location of the first control point, which occupies one, two, three, or
			four contiguous memory locations, depending on which map is being defined. There are <inlineequation>
				<mml:math>
					<mml:mrow>
						<mml:mi>uorder</mml:mi>
						<mml:mo>&times;</mml:mo>
						<mml:mi>vorder</mml:mi>
					</mml:mrow>
				</mml:math>
			</inlineequation> control points in the array. <parameter>ustride</parameter> specifies how many float or double
			locations are skipped to advance the internal memory pointer from control point <inlineequation>
				<mml:math>
					<mml:msub>
						<mml:mi>R</mml:mi>
						<mml:mrow>
							<mml:mi>i</mml:mi>
							<mml:mi>j</mml:mi>
						</mml:mrow>
					</mml:msub>
				</mml:math>
			</inlineequation> to control point <inlineequation>
				<mml:math>
					<mml:msub>
						<mml:mi>R</mml:mi>
						<mml:mrow>
							<mml:mo>(</mml:mo>
							<mml:mi>i+1</mml:mi>
							<mml:mo>)</mml:mo>
							<mml:mi>j</mml:mi>
						</mml:mrow>
					</mml:msub>
				</mml:math>
			</inlineequation>. <parameter>vstride</parameter> specifies how many float or double locations are skipped to advance
			the internal memory pointer from control point <inlineequation>
				<mml:math>
					<mml:msub>
						<mml:mi>R</mml:mi>
						<mml:mrow>
							<mml:mi>i</mml:mi>
							<mml:mi>j</mml:mi>
						</mml:mrow>
					</mml:msub>
				</mml:math>
			</inlineequation> to control point <inlineequation>
				<mml:math>
					<mml:msub>
						<mml:mi>R</mml:mi>
						<mml:mrow>
							<mml:mi>i</mml:mi>
							<mml:mo>(</mml:mo>
							<mml:mi>j+1</mml:mi>
							<mml:mo>)</mml:mo>
						</mml:mrow>
					</mml:msub>
				</mml:math>
			</inlineequation>.
		</para>
	</refsect1>
	<refsect1 id="glMap2.3G-notes">
		<title>Notes</title>
		<para>
			As is the case with all GL commands that accept pointers to data, it is as if the contents of
			<parameter>points</parameter> were copied by <function moreinfo="refentry">glMap2</function> before <function
			moreinfo="refentry">glMap2</function> returns. Changes to the contents of <parameter>points</parameter> have no effect
			after <function moreinfo="refentry">glMap2</function> is called.
		</para>
		<para>
			Initially, <constant>GL_AUTO_NORMAL</constant> is enabled. If <constant>GL_AUTO_NORMAL</constant> is enabled, normal
			vectors are generated when either <constant>GL_MAP2_VERTEX_3</constant> or <constant>GL_MAP2_VERTEX_4</constant> is
			used to generate vertices.
		</para>
	</refsect1>
	<refsect1 id="glMap2.3G-errors">
		<title>Errors</title>
		<para>
			<constant>GL_INVALID_ENUM</constant> is generated if <parameter>target</parameter> is not an accepted value.
		</para>
		<para>
			<constant>GL_INVALID_VALUE</constant> is generated if <parameter>u1</parameter> is equal to <parameter>u2</parameter>,
			or if <parameter>v1</parameter> is equal to <parameter>v2</parameter>.
		</para>
		<para>
			<constant>GL_INVALID_VALUE</constant> is generated if either <parameter>ustride</parameter> or
			<parameter>vstride</parameter> is less than the number of values in a control point.
		</para>
		<para>
			<constant>GL_INVALID_VALUE</constant> is generated if either <parameter>uorder</parameter> or
			<parameter>vorder</parameter> is less than 1 or greater than the return value of
			<constant>GL_MAX_EVAL_ORDER</constant>.
		</para>
		<para>
			<constant>GL_INVALID_OPERATION</constant> is generated if <function moreinfo="refentry">glMap2</function> is executed
			between the execution of <function moreinfo="refentry">glBegin</function> and the corresponding execution of <function
			moreinfo="refentry">glEnd</function>.
		</para>
		<para>
			When the <constant>GL_ARB_multitexture</constant> extension is supported, <constant>GL_INVALID_OPERATION</constant> is
			generated if <function moreinfo="refentry">glMap2</function> is called and the value of
			<constant>GL_ACTIVE_TEXTURE_ARB</constant> is not <constant>GL_TEXTURE0_ARB</constant>.
		</para>
	</refsect1>
	<refsect1 id="glMap2.3G-associated_gets">
		<title>Associated Gets</title>
		<para>
			<function moreinfo="refentry">glGetMap</function>
		</para>
		<para>
			<function moreinfo="refentry">glGet</function> with argument <constant>GL_MAX_EVAL_ORDER</constant>
		</para>
		<para>
			<function moreinfo="refentry">glIsEnabled</function> with argument <constant>GL_MAP2_VERTEX_3</constant>
		</para>
		<para>
			<function moreinfo="refentry">glIsEnabled</function> with argument <constant>GL_MAP2_VERTEX_4</constant>
		</para>
		<para>
			<function moreinfo="refentry">glIsEnabled</function> with argument <constant>GL_MAP2_INDEX</constant>
		</para>
		<para>
			<function moreinfo="refentry">glIsEnabled</function> with argument <constant>GL_MAP2_COLOR_4</constant>
		</para>
		<para>
			<function moreinfo="refentry">glIsEnabled</function> with argument <constant>GL_MAP2_NORMAL</constant>
		</para>
		<para>
			<function moreinfo="refentry">glIsEnabled</function> with argument <constant>GL_MAP2_TEXTURE_COORD_1</constant>
		</para>
		<para>
			<function moreinfo="refentry">glIsEnabled</function> with argument <constant>GL_MAP2_TEXTURE_COORD_2</constant>
		</para>
		<para>
			<function moreinfo="refentry">glIsEnabled</function> with argument <constant>GL_MAP2_TEXTURE_COORD_3</constant>
		</para>
		<para>
			<function moreinfo="refentry">glIsEnabled</function> with argument <constant>GL_MAP2_TEXTURE_COORD_4</constant>
		</para>
	</refsect1>
	<refsect1 id="glMap2.3G-see_also">
		<title>See Also</title>
		<para>
			<simplelist type="inline">
				<member><citerefentry>
					<refentrytitle>glBegin</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glColor</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glEnable</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glEvalCoord</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glEvalMesh</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glEvalPoint</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glMap1</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glMapGrid</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glNormal</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glTexCoord</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
				<member><citerefentry>
					<refentrytitle>glVertex</refentrytitle>
					<manvolnum>3G</manvolnum>
				</citerefentry></member>
			</simplelist>
		</para>
	</refsect1>
</refentry>
