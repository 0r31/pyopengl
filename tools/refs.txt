GLE_TEXTURE_ENABLE
  OpenGLContext scenegraph/extrusions.py mode = GLE_TEXTURE_ENABLE
GLE_TEXTURE_NORMAL_CYL
  OpenGLContext scenegraph/extrusions.py ('cyl', GLE_TEXTURE_NORMAL_CYL),
GLE_TEXTURE_NORMAL_FLAT
  OpenGLContext scenegraph/extrusions.py ('flat', GLE_TEXTURE_NORMAL_FLAT),
GLE_TEXTURE_NORMAL_MODEL_CYL
  OpenGLContext scenegraph/extrusions.py ('cyl', GLE_TEXTURE_NORMAL_MODEL_CYL),
GLE_TEXTURE_NORMAL_MODEL_FLAT
  OpenGLContext scenegraph/extrusions.py ('flat', GLE_TEXTURE_NORMAL_MODEL_FLAT),
GLE_TEXTURE_NORMAL_MODEL_SPH
  OpenGLContext scenegraph/extrusions.py ('sph', GLE_TEXTURE_NORMAL_MODEL_SPH),
GLE_TEXTURE_NORMAL_SPH
  OpenGLContext scenegraph/extrusions.py ('sph', GLE_TEXTURE_NORMAL_SPH),
GLE_TEXTURE_VERTEX_CYL
  OpenGLContext scenegraph/extrusions.py ('cyl', GLE_TEXTURE_VERTEX_CYL),
GLE_TEXTURE_VERTEX_FLAT
  OpenGLContext scenegraph/extrusions.py ('flat', GLE_TEXTURE_VERTEX_FLAT),
GLE_TEXTURE_VERTEX_MODEL_CYL
  OpenGLContext scenegraph/extrusions.py ('cyl', GLE_TEXTURE_VERTEX_MODEL_CYL),
GLE_TEXTURE_VERTEX_MODEL_FLAT
  OpenGLContext scenegraph/extrusions.py ('flat', GLE_TEXTURE_VERTEX_MODEL_FLAT),
GLE_TEXTURE_VERTEX_MODEL_SPH
  OpenGLContext scenegraph/extrusions.py ('sph', GLE_TEXTURE_VERTEX_MODEL_SPH),
GLE_TEXTURE_VERTEX_SPH
  OpenGLContext scenegraph/extrusions.py ('sph', GLE_TEXTURE_VERTEX_SPH),
GLE_demo
  OpenGL/Demo simple/GLE.py class GLE_demo:
  OpenGL/Demo simple/GLE.py GLE_demo()
GLUT_ACTIVE_ALT
  OpenGLContext events/glutevents.py not( not(GLUT_ACTIVE_ALT & modifierMask)),
  (LGPL) PyUI pyui/renderers/openglGlut.py if mod & GLUT_ACTIVE_ALT:
GLUT_ACTIVE_CTRL
  OpenGLContext events/glutevents.py not( not(GLUT_ACTIVE_CTRL & modifierMask)),
  (LGPL) PyUI pyui/renderers/openglGlut.py if mod & GLUT_ACTIVE_CTRL:
GLUT_ACTIVE_SHIFT
  OpenGLContext events/glutevents.py not( not(GLUT_ACTIVE_SHIFT & modifierMask)),
  (LGPL) PyUI pyui/renderers/openglGlut.py if mod & GLUT_ACTIVE_SHIFT:
GLUT_ALPHA
  SciPy/kiva tests/test_glcore2d.py glutInitDisplayMode( GLUT_DOUBLE | GLUT_RGBA | GLUT_ALPHA )
GLUT_BITMAP_8_BY_13
  OpenGLContext scenegraph/text/glutfont.py def __init__ (self, specifier = GLUT_BITMAP_8_BY_13):
  (LGPL) PyUI pyui/renderers/openglGlut.py font = GLUT_BITMAP_8_BY_13
GLUT_BITMAP_HELVETICA_10
  SciPy/kiva glcore2d.py self._glut_font = GLUT_BITMAP_HELVETICA_10
GLUT_BITMAP_HELVETICA_12
  SciPy/kiva glcore2d.py self._glut_font = GLUT_BITMAP_HELVETICA_12
  (LGPL) PyUI pyui/renderers/openglGlut.py w += glutBitmapWidth(GLUT_BITMAP_HELVETICA_12, ord(c))
  (LGPL) PyUI pyui/renderers/openglGlut.py font = GLUT_BITMAP_HELVETICA_12
GLUT_BITMAP_HELVETICA_18
  OpenGLContext tests/glutbitmapcharacter.py glutBitmapCharacter(GLUT_BITMAP_HELVETICA_18, ord(character));
  SciPy/kiva glcore2d.py self._glut_font = GLUT_BITMAP_HELVETICA_18
GLUT_BITMAP_TIMES_ROMAN_10
  SciPy/kiva glcore2d.py self._glut_font = GLUT_BITMAP_TIMES_ROMAN_10
GLUT_BITMAP_TIMES_ROMAN_24
  SciPy/kiva glcore2d.py self._glut_font = GLUT_BITMAP_TIMES_ROMAN_24
  (LGPL) VisionEgg src/Text.py 'font':(glut.GLUT_BITMAP_TIMES_ROMAN_24,
GLUT_DEPTH
  OpenGLContext glutcontext.py DISPLAYMODE = GLUT_DOUBLE | GLUT_DEPTH
  OpenGL/Demo GLE/maintest.py glutInitDisplayMode (GLUT_DOUBLE | GLUT_RGB | GLUT_DEPTH)
  OpenGL/Demo GLUT/examples/molehill.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo NeHe/lesson1.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo NeHe/lesson18.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo NeHe/lesson2.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo NeHe/lesson3.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo NeHe/lesson4.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo NeHe/lesson5.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo NeHe/lesson6-multi.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo NeHe/lesson6.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo redbook/scene.py glutInitDisplayMode (GLUT_SINGLE | GLUT_RGB | GLUT_DEPTH)
  OpenGL/Demo redbook/teapots.py glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB | GLUT_DEPTH);
  OpenGL/Demo simple/GLE.py glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB | GLUT_DEPTH)
  OpenGL/Demo suite/GLUT.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo twburton/knot.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  (LGPL) PyUI pyui/renderers/openglGlut.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)   #GLUT_ALPHA |
GLUT_DOUBLE
  OpenGLContext glutcontext.py DISPLAYMODE = GLUT_DOUBLE | GLUT_DEPTH
  OpenGL/Demo da/dots.py glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB)
  OpenGL/Demo GLE/maintest.py glutInitDisplayMode (GLUT_DOUBLE | GLUT_RGB | GLUT_DEPTH)
  OpenGL/Demo GLUT/examples/molehill.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo NeHe/lesson1.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo NeHe/lesson18.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo NeHe/lesson2.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo NeHe/lesson3.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo NeHe/lesson4.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo NeHe/lesson5.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo NeHe/lesson6-multi.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo NeHe/lesson6.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo redbook/double.py glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB)
  OpenGL/Demo redbook/fog.py glutInitDisplayMode (GLUT_DOUBLE | GLUT_RGB );
  OpenGL/Demo simple/GLE.py glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB | GLUT_DEPTH)
  OpenGL/Demo suite/GLUT.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo twburton/knot.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  SciPy/kiva tests/test_glcore2d.py glutInitDisplayMode( GLUT_DOUBLE | GLUT_RGBA | GLUT_ALPHA )
  (LGPL) PyUI pyui/renderers/openglGlut.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)   #GLUT_ALPHA |
GLUT_DOWN
  OpenGL/Demo da/dots.py elif button == GLUT_MIDDLE_BUTTON and state == GLUT_DOWN:
  OpenGL/Demo redbook/double.py if(state == GLUT_DOWN):
  OpenGL/Demo redbook/double.py if(state == GLUT_DOWN):
  OpenGL/Demo redbook/movelight.py if button == GLUT_LEFT_BUTTON and state == GLUT_DOWN:
  SciPy/kiva tests/test_glcore2d.py elif button == GLUT_MIDDLE_BUTTON and state == GLUT_DOWN:
GLUT_KEY_DOWN
  OpenGLContext events/glutevents.py GLUT_KEY_DOWN: '<down>',
  OpenGL/Demo twburton/knot.py elif key == GLUT_KEY_DOWN:
GLUT_KEY_END
  OpenGLContext events/glutevents.py GLUT_KEY_END: '<end>',
GLUT_KEY_F1
  OpenGLContext events/glutevents.py GLUT_KEY_F1: '<F1>',
GLUT_KEY_F10
  OpenGLContext events/glutevents.py GLUT_KEY_F10: '<F10>',
GLUT_KEY_F11
  OpenGLContext events/glutevents.py GLUT_KEY_F11: '<F11>',
GLUT_KEY_F12
  OpenGLContext events/glutevents.py GLUT_KEY_F12: '<F12>',
GLUT_KEY_F2
  OpenGLContext events/glutevents.py GLUT_KEY_F2: '<F2>',
GLUT_KEY_F3
  OpenGLContext events/glutevents.py GLUT_KEY_F3: '<F3>',
GLUT_KEY_F4
  OpenGLContext events/glutevents.py GLUT_KEY_F4: '<F4>',
GLUT_KEY_F5
  OpenGLContext events/glutevents.py GLUT_KEY_F5: '<F5>',
GLUT_KEY_F6
  OpenGLContext events/glutevents.py GLUT_KEY_F6: '<F6>',
GLUT_KEY_F7
  OpenGLContext events/glutevents.py GLUT_KEY_F7: '<F7>',
GLUT_KEY_F8
  OpenGLContext events/glutevents.py GLUT_KEY_F8: '<F8>',
GLUT_KEY_F9
  OpenGLContext events/glutevents.py GLUT_KEY_F9: '<F9>',
GLUT_KEY_HOME
  OpenGLContext events/glutevents.py GLUT_KEY_HOME: '<home>',
GLUT_KEY_INSERT
  OpenGLContext events/glutevents.py GLUT_KEY_INSERT: '<insert>',
GLUT_KEY_LEFT
  OpenGLContext events/glutevents.py GLUT_KEY_LEFT: '<left>',
  OpenGL/Demo twburton/knot.py if key == GLUT_KEY_LEFT:
GLUT_KEY_PAGE_DOWN
  OpenGLContext events/glutevents.py GLUT_KEY_PAGE_DOWN: '<pagedown>',
GLUT_KEY_PAGE_UP
  OpenGLContext events/glutevents.py GLUT_KEY_PAGE_UP: '<pageup>',
GLUT_KEY_RIGHT
  OpenGLContext events/glutevents.py GLUT_KEY_RIGHT: '<right>',
  OpenGL/Demo twburton/knot.py elif key == GLUT_KEY_RIGHT:
GLUT_KEY_UP
  OpenGLContext events/glutevents.py GLUT_KEY_UP: '<up>',
  OpenGL/Demo twburton/knot.py elif key == GLUT_KEY_UP:
GLUT_LEFT_BUTTON
  OpenGLContext events/glutevents.py GLUT_LEFT_BUTTON: 0,
  OpenGLContext events/glutevents.py GLUT_LEFT_BUTTON: 0,
  OpenGL/Demo da/dots.py if button == GLUT_LEFT_BUTTON:
  OpenGL/Demo redbook/double.py if button == GLUT_LEFT_BUTTON:
  OpenGL/Demo redbook/movelight.py if button == GLUT_LEFT_BUTTON and state == GLUT_DOWN:
  SciPy/kiva tests/test_glcore2d.py if button == GLUT_LEFT_BUTTON:
GLUT_MIDDLE_BUTTON
  OpenGLContext events/glutevents.py GLUT_MIDDLE_BUTTON: 2,
  OpenGLContext events/glutevents.py GLUT_MIDDLE_BUTTON: 2,
  OpenGL/Demo da/dots.py elif button == GLUT_MIDDLE_BUTTON and state == GLUT_DOWN:
  OpenGL/Demo redbook/double.py elif button == GLUT_MIDDLE_BUTTON or button == GLUT_RIGHT_BUTTON:
  SciPy/kiva tests/test_glcore2d.py elif button == GLUT_MIDDLE_BUTTON and state == GLUT_DOWN:
GLUT_RGB
  OpenGL/Demo da/dots.py glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB)
  OpenGL/Demo GLE/maintest.py glutInitDisplayMode (GLUT_DOUBLE | GLUT_RGB | GLUT_DEPTH)
  OpenGL/Demo redbook/cube.py glutInitDisplayMode (GLUT_SINGLE | GLUT_RGB)
  OpenGL/Demo redbook/double.py glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB)
  OpenGL/Demo redbook/drawf.py glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB)
  OpenGL/Demo redbook/fog.py glutInitDisplayMode (GLUT_DOUBLE | GLUT_RGB );
  OpenGL/Demo redbook/hello.py glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB)
  OpenGL/Demo redbook/lines.py glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB)
  OpenGL/Demo redbook/movelight.py glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB)
  OpenGL/Demo redbook/scene.py glutInitDisplayMode (GLUT_SINGLE | GLUT_RGB | GLUT_DEPTH)
  OpenGL/Demo redbook/smooth.py glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB)
  OpenGL/Demo redbook/teapots.py glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB | GLUT_DEPTH);
  OpenGL/Demo simple/GLE.py glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB | GLUT_DEPTH)
GLUT_RGBA
  OpenGL/Demo GLUT/examples/molehill.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo NeHe/lesson1.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo NeHe/lesson18.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo NeHe/lesson2.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo NeHe/lesson3.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo NeHe/lesson4.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo NeHe/lesson5.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo NeHe/lesson6-multi.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo NeHe/lesson6.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo suite/GLUT.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo twburton/knot.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  SciPy/kiva tests/test_glcore2d.py glutInitDisplayMode( GLUT_DOUBLE | GLUT_RGBA | GLUT_ALPHA )
  (LGPL) PyUI pyui/renderers/openglGlut.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)   #GLUT_ALPHA |
GLUT_RIGHT_BUTTON
  OpenGLContext events/glutevents.py GLUT_RIGHT_BUTTON: 1,
  OpenGLContext events/glutevents.py GLUT_RIGHT_BUTTON: 1,
  OpenGL/Demo da/dots.py elif button == GLUT_RIGHT_BUTTON:
  OpenGL/Demo redbook/double.py elif button == GLUT_MIDDLE_BUTTON or button == GLUT_RIGHT_BUTTON:
  OpenGL/Demo suite/GLUT.py glutAttachMenu(GLUT_RIGHT_BUTTON)
  SciPy/kiva tests/test_glcore2d.py elif button == GLUT_RIGHT_BUTTON:
GLUT_SINGLE
  OpenGL/Demo redbook/cube.py glutInitDisplayMode (GLUT_SINGLE | GLUT_RGB)
  OpenGL/Demo redbook/drawf.py glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB)
  OpenGL/Demo redbook/hello.py glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB)
  OpenGL/Demo redbook/lines.py glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB)
  OpenGL/Demo redbook/movelight.py glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB)
  OpenGL/Demo redbook/scene.py glutInitDisplayMode (GLUT_SINGLE | GLUT_RGB | GLUT_DEPTH)
  OpenGL/Demo redbook/smooth.py glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB)
  OpenGL/Demo redbook/teapots.py glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB | GLUT_DEPTH);
GLUT_STROKE_ROMAN
  (LGPL) VisionEgg src/Text.py 'font':(glut.GLUT_STROKE_ROMAN,
GLUT_UP
  OpenGLContext events/glutevents.py if state == GLUT_UP:
GLUT_WINDOW_HEIGHT
  OpenGLContext tests/glut_fullscreen.py glutGet( GLUT_WINDOW_HEIGHT ),
  OpenGL/Demo suite/GLUT.py on_reshape(glutGet(GLUT_WINDOW_WIDTH), glutGet(GLUT_WINDOW_HEIGHT))
GLUT_WINDOW_WIDTH
  OpenGLContext tests/glut_fullscreen.py glutGet( GLUT_WINDOW_WIDTH  ),
  OpenGL/Demo suite/GLUT.py on_reshape(glutGet(GLUT_WINDOW_WIDTH), glutGet(GLUT_WINDOW_HEIGHT))
GLUT_WINDOW_X
  OpenGLContext tests/glut_fullscreen.py glutGet( GLUT_WINDOW_X ),
GLUT_WINDOW_Y
  OpenGLContext tests/glut_fullscreen.py glutGet( GLUT_WINDOW_Y ),
GLU_DISPLAY_MODE
  OpenGLContext tests/redbook_surface.py gluNurbsProperty(self.theNurb, GLU_DISPLAY_MODE, GLU_FILL);
  OpenGLContext tests/redbook_trim.py gluNurbsProperty(self.theNurb, GLU_DISPLAY_MODE, GLU_FILL);
  OpenGLContext tests/redbook_surface_cb.py gluNurbsProperty(self.theNurb, GLU_DISPLAY_MODE, GLU_FILL);
  OpenGLContext scenegraph/nurbs.py gluNurbsProperty( nurbObject, GLU_DISPLAY_MODE, mode )
  OpenGL/Demo GLUT/examples/molehill.py gluNurbsProperty(nurb, GLU_DISPLAY_MODE, GLU_FILL)
GLU_DOMAIN_DISTANCE
  OpenGLContext scenegraph/nurbs.py gluNurbsProperty( nurbObject, GLU_SAMPLING_METHOD, GLU_DOMAIN_DISTANCE )
GLU_FILL
  OpenGLContext tests/redbook_surface.py gluNurbsProperty(self.theNurb, GLU_DISPLAY_MODE, GLU_FILL);
  OpenGLContext tests/redbook_trim.py gluNurbsProperty(self.theNurb, GLU_DISPLAY_MODE, GLU_FILL);
  OpenGLContext tests/redbook_surface_cb.py gluNurbsProperty(self.theNurb, GLU_DISPLAY_MODE, GLU_FILL);
  OpenGLContext scenegraph/nurbs.py mode = GLU_FILL
  OpenGLContext scenegraph/nurbs.py mode = GLU_FILL
  OpenGL/Demo GLUT/examples/molehill.py gluNurbsProperty(nurb, GLU_DISPLAY_MODE, GLU_FILL)
GLU_MAP1_TRIM_2
  OpenGLContext tests/redbook_trim.py gluPwlCurve (self.theNurb, edgePt, GLU_MAP1_TRIM_2)
  OpenGLContext tests/redbook_trim.py gluNurbsCurve (self.theNurb, curveKnots, curvePt, GLU_MAP1_TRIM_2);
  OpenGLContext tests/redbook_trim.py gluPwlCurve (self.theNurb, pwlPt, GLU_MAP1_TRIM_2);
  OpenGLContext scenegraph/nurbs.py GLU_MAP1_TRIM_2
  OpenGLContext scenegraph/nurbs.py GLU_MAP1_TRIM_2
GLU_NURBS_BEGIN
  OpenGLContext tests/redbook_surface_cb.py gluNurbsCallback( self.theNurb, GLU_NURBS_BEGIN, self.OnBegin )
GLU_NURBS_COLOR
  OpenGLContext tests/redbook_surface_cb.py gluNurbsCallback( self.theNurb, GLU_NURBS_COLOR, self.OnColor )
GLU_NURBS_END
  OpenGLContext tests/redbook_surface_cb.py gluNurbsCallback( self.theNurb, GLU_NURBS_END, self.OnEnd )
GLU_NURBS_MODE_EXT
  OpenGLContext tests/redbook_surface_cb.py gluNurbsProperty( self.theNurb, nurbs_tessellator.GLU_NURBS_MODE_EXT, nurbs_tessellator.GLU_NURBS_TESSELLATOR_EXT)
GLU_NURBS_TESSELLATOR_EXT
  OpenGLContext tests/redbook_surface_cb.py gluNurbsProperty( self.theNurb, nurbs_tessellator.GLU_NURBS_MODE_EXT, nurbs_tessellator.GLU_NURBS_TESSELLATOR_EXT)
GLU_NURBS_TEXTURE_COORD
  OpenGLContext tests/redbook_surface_cb.py gluNurbsCallback( self.theNurb, GLU_NURBS_TEXTURE_COORD, self.OnTexCoord )
GLU_NURBS_VERTEX
  OpenGLContext tests/redbook_surface_cb.py gluNurbsCallback( self.theNurb, GLU_NURBS_VERTEX, self.OnVertex )
GLU_OBJECT_PARAMETRIC_ERROR_EXT
  OpenGLContext scenegraph/nurbs.py object_space_tess.GLU_OBJECT_PARAMETRIC_ERROR_EXT
GLU_OBJECT_PATH_LENGTH_EXT
  OpenGLContext scenegraph/nurbs.py object_space_tess.GLU_OBJECT_PATH_LENGTH_EXT,
GLU_OUTLINE_PATCH
  OpenGLContext scenegraph/nurbs.py mode = GLU_OUTLINE_PATCH
  OpenGLContext scenegraph/nurbs.py mode = GLU_OUTLINE_PATCH
GLU_PARAMETRIC_ERROR
  OpenGLContext scenegraph/nurbs.py GLU_PARAMETRIC_ERROR
GLU_PARAMETRIC_TOLERANCE
  OpenGLContext scenegraph/nurbs.py gluNurbsProperty( nurbObject, GLU_PARAMETRIC_TOLERANCE, self.tolerance )
GLU_PATH_LENGTH
  OpenGLContext scenegraph/nurbs.py GLU_PATH_LENGTH,
GLU_SAMPLING_METHOD
  OpenGLContext scenegraph/nurbs.py gluNurbsProperty( nurbObject, GLU_SAMPLING_METHOD, method )
  OpenGLContext scenegraph/nurbs.py gluNurbsProperty( nurbObject, GLU_SAMPLING_METHOD, GLU_DOMAIN_DISTANCE )
GLU_SAMPLING_TOLERANCE
  OpenGLContext tests/redbook_surface.py gluNurbsProperty(self.theNurb, GLU_SAMPLING_TOLERANCE, 25.0);
  OpenGLContext tests/redbook_trim.py gluNurbsProperty(self.theNurb, GLU_SAMPLING_TOLERANCE, 100.0);
  OpenGLContext tests/redbook_surface_cb.py gluNurbsProperty(self.theNurb, GLU_SAMPLING_TOLERANCE, 25.0);
  OpenGLContext scenegraph/nurbs.py gluNurbsProperty( nurbObject, GLU_SAMPLING_TOLERANCE, self.tolerance )
  OpenGL/Demo GLUT/examples/molehill.py gluNurbsProperty(nurb, GLU_SAMPLING_TOLERANCE, 5.0)
GLU_SMOOTH
  OpenGLContext scenegraph/quadrics.py gluQuadricNormals(quadratic, GLU_SMOOTH)
  OpenGL/Demo NeHe/lesson18.py gluQuadricNormals(quadratic, GLU_SMOOTH)		# Create Smooth Normals (NEW)
GLU_TESS_BEGIN
  OpenGLContext scenegraph/polygontessellator.py gluTessCallback( controller, GLU_TESS_BEGIN, self.begin )
  SciPy/kiva glcore2d.py gluTessCallback( self._glu_tess, GLU_TESS_BEGIN,  glBegin )
GLU_TESS_BOUNDARY_ONLY
  SciPy/kiva glcore2d.py gluTessProperty( self._glu_tess, GLU_TESS_BOUNDARY_ONLY, GL_FALSE )
GLU_TESS_COMBINE
  OpenGLContext scenegraph/polygontessellator.py gluTessCallback( controller, GLU_TESS_COMBINE, self.combine )
  SciPy/kiva glcore2d.py gluTessCallback( self._glu_tess, GLU_TESS_COMBINE, mycombine )
GLU_TESS_END
  OpenGLContext scenegraph/polygontessellator.py gluTessCallback( controller, GLU_TESS_END, self.end )
  SciPy/kiva glcore2d.py gluTessCallback( self._glu_tess, GLU_TESS_END,    glEnd )
GLU_TESS_VERTEX
  OpenGLContext scenegraph/polygontessellator.py gluTessCallback( controller, GLU_TESS_VERTEX, self.vertex )
  SciPy/kiva glcore2d.py gluTessCallback( self._glu_tess, GLU_TESS_VERTEX, myvertex )
GLU_TESS_WINDING_NONZERO
  SciPy/kiva glcore2d.py GLU_TESS_WINDING_NONZERO )
GLU_TESS_WINDING_ODD
  SciPy/kiva glcore2d.py GLU_TESS_WINDING_ODD )
GLU_TESS_WINDING_RULE
  SciPy/kiva glcore2d.py gluTessProperty( self._glu_tess, GLU_TESS_WINDING_RULE,
  SciPy/kiva glcore2d.py gluTessProperty( self._glu_tess, GLU_TESS_WINDING_RULE,
GLU_U_STEP
  OpenGLContext scenegraph/nurbs.py gluNurbsProperty( nurbObject, GLU_U_STEP, self.uStep)
GLU_VERSION_1_2
  OpenGL/Demo GLUT/examples/molehill.py GLU_VERSION_1_2
GLU_VERSION_1_3
  OpenGLContext tests/redbook_surface_cb.py GLU_VERSION_1_3
GLU_V_STEP
  OpenGLContext scenegraph/nurbs.py gluNurbsProperty( nurbObject, GLU_V_STEP, self.vStep)
GL_ACCUM_ALPHA_BITS
  (LGPL) VisionEgg test/opengl_info.py print " GL_ACCUM_ALPHA_BITS =",glGetIntegerv( GL_ACCUM_ALPHA_BITS )
GL_ACCUM_BLUE_BITS
  (LGPL) VisionEgg test/opengl_info.py print " GL_ACCUM_BLUE_BITS =",glGetIntegerv( GL_ACCUM_BLUE_BITS )
GL_ACCUM_GREEN_BITS
  (LGPL) VisionEgg test/opengl_info.py print " GL_ACCUM_GREEN_BITS =",glGetIntegerv( GL_ACCUM_GREEN_BITS )
GL_ACCUM_RED_BITS
  (LGPL) VisionEgg test/opengl_info.py print " GL_ACCUM_RED_BITS =",glGetIntegerv( GL_ACCUM_RED_BITS )
GL_ALPHA
  (LGPL) VisionEgg src/Gratings.py self.gl_internal_format = gl.GL_ALPHA
  (LGPL) VisionEgg src/Gratings.py self.format = gl.GL_ALPHA
  (LGPL) VisionEgg src/Gratings.py self.gl_internal_format = gl.GL_ALPHA
  (LGPL) VisionEgg src/Gratings.py self.format = gl.GL_ALPHA
  (LGPL) VisionEgg src/Gratings.py self.gl_internal_format = gl.GL_ALPHA
  (LGPL) VisionEgg src/Gratings.py self.format = gl.GL_ALPHA
  (LGPL) VisionEgg src/SphereMap.py self.gl_internal_format = gl.GL_ALPHA # change from luminance to alpha
  (LGPL) VisionEgg src/SphereMap.py self.format = gl.GL_ALPHA
  (LGPL) VisionEgg src/SphereMap.py self.gl_internal_format = gl.GL_ALPHA # change from luminance to alpha
  (LGPL) VisionEgg src/SphereMap.py self.format = gl.GL_ALPHA
  (LGPL) VisionEgg src/Textures.py data_format=gl.GL_ALPHA,
  (LGPL) VisionEgg src/Textures.py internal_format=gl.GL_ALPHA)
GL_ALPHA_BITS
  (LGPL) VisionEgg src/Gratings.py alpha_bit_depth = gl.glGetIntegerv( gl.GL_ALPHA_BITS )
  (LGPL) VisionEgg test/opengl_info.py print " GL_ALPHA_BITS =",glGetIntegerv( GL_ALPHA_BITS )
GL_ALPHA_SIZE
  (LGPL) VisionEgg src/Core.py pygame.display.gl_set_attribute(pygame.locals.GL_ALPHA_SIZE,a)
  (LGPL) VisionEgg src/Core.py self.alpha_bits = pygame.display.gl_get_attribute(pygame.locals.GL_ALPHA_SIZE)
GL_ALPHA_TEST
  OpenGLContext tests/gldrawpixels.py glEnable(GL_ALPHA_TEST);
GL_ALWAYS
  OpenGLContext shadow/passes.py glStencilFunc(GL_ALWAYS, 0, ~0);
  OpenGLContext shadow/passes.py glStencilFunc(GL_ALWAYS,0,~0);
GL_AMBIENT
  OpenGLContext tests/glgetlight.py (GL_AMBIENT, "GL_AMBIENT"),
  OpenGLContext tests/glgetmaterial.py (GL_AMBIENT, "GL_AMBIENT"),
  OpenGLContext tests/nehe7.py glLightfv( GL_LIGHT1, GL_AMBIENT, (0.2, .2, .2, 1.0) );
  OpenGLContext tests/nehe8.py glLightfv( GL_LIGHT1, GL_AMBIENT, (0.2, .2, .2, 1.0) );
  OpenGLContext scenegraph/material.py datamap = (GL_DIFFUSE, GL_EMISSION, GL_SPECULAR, GL_AMBIENT)
  OpenGLContext scenegraph/light.py glLight(lightID, GL_AMBIENT, (x,y,z,1.0))
  OpenGL/Demo NeHe/lesson18.py glLightfv(GL_LIGHT0, GL_AMBIENT, (0.5, 0.5, 0.5, 1.0))		# Setup The Ambient Light
  OpenGL/Demo redbook/fog.py glMaterialfv(GL_FRONT, GL_AMBIENT, mat)
  OpenGL/Demo redbook/scene.py glLightfv(GL_LIGHT0, GL_AMBIENT, light_ambient)
  OpenGL/Demo redbook/teapots.py glLightfv(GL_LIGHT0, GL_AMBIENT, ambient)
  OpenGL/Demo redbook/teapots.py glMaterialfv(GL_FRONT, GL_AMBIENT, mat)
  OpenGL/Demo tom/cone.py glMaterialfv(GL_FRONT, GL_AMBIENT, [0.2, 0.2, 0.2, 1.0])
  OpenGL/Demo tom/cone.py glLightfv(GL_LIGHT0, GL_AMBIENT, [0.0, 1.0, 0.0, 1.0])
  OpenGL/Demo tom/conechecker.py glMaterialfv(GL_FRONT, GL_AMBIENT, [0.2, 0.2, 0.2, 1.0])
  OpenGL/Demo tom/conechecker.py glLightfv(GL_LIGHT0, GL_AMBIENT, [0.0, 1.0, 0.0, 1.0])
  OpenGL/Demo tom/conesave.py glMaterialfv(GL_FRONT, GL_AMBIENT, [0.2, 0.2, 0.2, 1.0])
  OpenGL/Demo tom/conesave.py glLightfv(GL_LIGHT0, GL_AMBIENT, [0.0, 1.0, 0.0, 1.0])
  OpenGL/Demo tom/fog.py glMaterialfv(GL_FRONT, GL_AMBIENT, [0.1745, 0.01175, 0.01175, 1.0])
GL_AMBIENT_AND_DIFFUSE
  OpenGLContext scenegraph/spherebackground.py glColorMaterial(GL_FRONT_AND_BACK, GL_AMBIENT_AND_DIFFUSE)
  OpenGL/Demo suite/items/GLE/helix.py glColorMaterial(GL_FRONT_AND_BACK, GL_AMBIENT_AND_DIFFUSE)
GL_AUTO_NORMAL
  OpenGLContext tests/redbook_surface.py glEnable(GL_AUTO_NORMAL);
  OpenGLContext tests/redbook_trim.py glEnable(GL_AUTO_NORMAL);
  OpenGLContext tests/redbook_surface_cb.py glEnable(GL_AUTO_NORMAL);
  OpenGLContext scenegraph/nurbs.py glEnable( GL_AUTO_NORMAL )
  OpenGLContext scenegraph/nurbs.py glDisable( GL_AUTO_NORMAL )
  OpenGL/Demo GLUT/examples/molehill.py glEnable(GL_AUTO_NORMAL)
  OpenGL/Demo redbook/teapots.py glEnable(GL_AUTO_NORMAL)
  OpenGL/Demo tom/fog.py glEnable(GL_AUTO_NORMAL)
GL_AUX_BUFFERS
  (LGPL) VisionEgg test/opengl_info.py print " GL_AUX_BUFFERS =",glGetIntegerv( GL_AUX_BUFFERS )
GL_BACK
  OpenGLContext rendervisitor.py glCullFace(GL_BACK)
  OpenGLContext shadow/passes.py glCullFace(GL_BACK);
  OpenGLContext shadow/volume.py glCullFace(GL_BACK);
  OpenGL/Demo dek/OglSurface/triangle.py glCullFace(GL_BACK)
  (LGPL) VisionEgg src/Core.py gl.glReadBuffer( gl.GL_BACK )
  (LGPL) VisionEgg src/Core.py gl.glReadBuffer( gl.GL_BACK )
  (LGPL) VisionEgg src/Textures.py gl.glReadBuffer( gl.GL_BACK )
GL_BLEND
  OpenGLContext renderpass.py glEnable(GL_BLEND);
  OpenGLContext renderpass.py glDisable(GL_BLEND);
  OpenGLContext shadow/passes.py glDisable(GL_BLEND);
  OpenGLContext shadow/passes.py glDisable(GL_BLEND);
  OpenGLContext shadow/passes.py glEnable(GL_BLEND);
  OpenGLContext shadow/passes.py glEnable(GL_BLEND);
  OpenGLContext tests/nehe8.py glDisable(GL_BLEND);
  OpenGLContext tests/nehe8.py glEnable(GL_BLEND);
  OpenGLContext tests/redbook_alpha.py glEnable (GL_BLEND);
  OpenGLContext tests/redbook_alpha3D.py glEnable (GL_BLEND);
  OpenGLContext tests/redbook_alpha3D.py glDisable (GL_BLEND);
  OpenGLContext scenegraph/imagetexture.py glEnable (GL_BLEND)
  OpenGL/Demo dek/OglSurface/OglFrame.py glEnable(GL_BLEND);
  OpenGL/Demo dek/OglSurface/triangle.py glEnable(GL_BLEND)
  OpenGL/Demo dek/OglSurface/triangle.py glDisable(GL_BLEND)
  OpenGL/Demo dek/OglSurface/triangle.py glDisable(GL_BLEND)
  OpenGL/Demo dek/OglSurface/triangle.py glEnable(GL_BLEND)
  OpenGL/Demo NeHe/lesson6-multi.py glTexEnvi(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_BLEND)
  SciPy/kiva glcore2d.py glDisable(GL_BLEND)
  SciPy/kiva glcore2d.py glEnable( GL_BLEND )
  SciPy/kiva glcore2d.py glDisable( GL_BLEND )
  SciPy/kiva glcore2d.py glEnable( GL_BLEND )
  SciPy/kiva glcore2d.py glDisable( GL_BLEND )
  (LGPL) PyUI pyui/renderers/openglBase.py glEnable(GL_BLEND)
  (LGPL) VisionEgg src/Core.py gl.glDisable(gl.GL_BLEND)
  (LGPL) VisionEgg src/Dots.py gl.glEnable( gl.GL_BLEND )
  (LGPL) VisionEgg src/Dots.py gl.glDisable( gl.GL_BLEND )
  (LGPL) VisionEgg src/Gratings.py gl.glEnable( gl.GL_BLEND )
  (LGPL) VisionEgg src/Gratings.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_BLEND)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glDisable(gl.GL_BLEND)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glEnable(gl.GL_BLEND)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glDisable(gl.GL_BLEND)
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_BLEND ) # Contrast control implemented through blending
  (LGPL) VisionEgg src/SphereMap.py gl.glDisable( gl.GL_BLEND )
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_BLEND )
  (LGPL) VisionEgg src/Text.py gl.glDisable(gl.GL_BLEND)
  (LGPL) VisionEgg src/Text.py gl.glEnable(gl.GL_BLEND)
  (LGPL) VisionEgg src/Text.py gl.glDisable(gl.GL_BLEND)
  (LGPL) VisionEgg src/Textures.py gl.glEnable( gl.GL_BLEND )
  (LGPL) VisionEgg src/Textures.py gl.glDisable(gl.GL_BLEND)
  (LGPL) VisionEgg src/Textures.py gl.glEnable( gl.GL_BLEND ) # Contrast control implemented through blending
GL_BLUE_BITS
  (LGPL) VisionEgg src/Gratings.py elif gl.glGetIntegerv( gl.GL_BLUE_BITS ) < self.parameters.bit_depth:
  (LGPL) VisionEgg src/Gratings.py current_bit_depth = gl.glGetIntegerv( gl.GL_BLUE_BITS )
  (LGPL) VisionEgg test/opengl_info.py print " GL_BLUE_BITS =",glGetIntegerv( GL_BLUE_BITS )
GL_BLUE_SIZE
  (LGPL) VisionEgg src/Core.py pygame.display.gl_set_attribute(pygame.locals.GL_BLUE_SIZE,b)
  (LGPL) VisionEgg src/Core.py self.blue_bits = pygame.display.gl_get_attribute(pygame.locals.GL_BLUE_SIZE)
GL_CCW
  OpenGLContext shadow/passes.py ccw = ag.ccw == GL_CCW,
  OpenGLContext shadow/volume.py glFrontFace( GL_CCW )
  OpenGLContext scenegraph/arraygeometry.py self.ccw = GL_CCW
  OpenGLContext scenegraph/indexedpolygons.py glFrontFace( GL_CCW )
  OpenGLContext scenegraph/indexedpolygons.py glFrontFace( GL_CCW )
  OpenGLContext scenegraph/spherebackground.py glFrontFace( GL_CCW )
  OpenGLContext scenegraph/nurbs.py glFrontFace(  GL_CCW )
  OpenGLContext scenegraph/nurbs.py glFrontFace( GL_CCW )
  OpenGL/Demo tom/text.py glFrontFace(GL_CCW)     #
GL_CLAMP
  OpenGLContext scenegraph/imagetexture.py glTexParameter(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP)
  OpenGLContext scenegraph/imagetexture.py glTexParameter(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP)
  OpenGL/Demo NeHe/lesson18.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP)
  OpenGL/Demo NeHe/lesson18.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP)
  OpenGL/Demo NeHe/lesson6-multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP)
  OpenGL/Demo NeHe/lesson6-multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP)
  OpenGL/Demo NeHe/lesson6.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP)
  OpenGL/Demo NeHe/lesson6.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP)
  (LGPL) VisionEgg src/Textures.py gl.GL_CLAMP_TO_EDGE = gl.GL_CLAMP
GL_CLAMP_TO_EDGE
  (LGPL) VisionEgg src/Gratings.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_WRAP_S,gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/Gratings.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_WRAP_T,gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/Lib3DS.py 'texture_wrap_s':(gl.GL_CLAMP_TO_EDGE,
  (LGPL) VisionEgg src/Lib3DS.py 'texture_wrap_t':(gl.GL_CLAMP_TO_EDGE,
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_2D,gl.GL_TEXTURE_WRAP_S,gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_2D,gl.GL_TEXTURE_WRAP_T,gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/Textures.py gl.GL_CLAMP_TO_EDGE = OpenGL.GL.SGIS.texture_edge_clamp.GL_CLAMP_TO_EDGE_SGIS
  (LGPL) VisionEgg src/Textures.py del gl.GL_CLAMP_TO_EDGE
  (LGPL) VisionEgg src/Textures.py gl.GL_CLAMP_TO_EDGE = gl.GL_CLAMP
  (LGPL) VisionEgg src/Textures.py gl.GL_CLAMP_TO_EDGE = 0x812F # This value is in Mesa gl.h and nVidia gl.h, so hopefully it's OK for others
  (LGPL) VisionEgg src/Textures.py self.parameters.texture_wrap_s = gl.GL_CLAMP_TO_EDGE
  (LGPL) VisionEgg src/Textures.py self.parameters.texture_wrap_t = gl.GL_CLAMP_TO_EDGE
  (LGPL) VisionEgg src/Textures.py self.texture_object.set_wrap_mode_s(gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/Textures.py self.texture_object.set_wrap_mode_t(gl.GL_CLAMP_TO_EDGE)
GL_CLAMP_TO_EDGE_SGIS
  (LGPL) VisionEgg src/Textures.py gl.GL_CLAMP_TO_EDGE = OpenGL.GL.SGIS.texture_edge_clamp.GL_CLAMP_TO_EDGE_SGIS
GL_COLOR_ARRAY
  OpenGLContext scenegraph/arraygeometry.py glEnableClientState( GL_COLOR_ARRAY )
  OpenGLContext scenegraph/arraygeometry.py glDisableClientState( GL_COLOR_ARRAY )
  OpenGLContext scenegraph/indexedpolygons.py glDisableClientState( GL_COLOR_ARRAY )
  OpenGLContext scenegraph/indexedpolygons.py glEnableClientState( GL_COLOR_ARRAY )
  OpenGLContext scenegraph/spherebackground.py glEnableClientState( GL_COLOR_ARRAY )
  OpenGLContext scenegraph/spherebackground.py glDisableClientState( GL_COLOR_ARRAY )
  OpenGLContext scenegraph/pointset.py glEnable( GL_COLOR_ARRAY )
  OpenGLContext scenegraph/pointset.py glDisable( GL_COLOR_ARRAY )
  OpenGL/Demo tom/arraytest.py glEnableClientState(GL_COLOR_ARRAY)
  OpenGL/Demo tom/poly.py glEnableClientState(GL_COLOR_ARRAY)
GL_COLOR_BUFFER_BIT
  OpenGLContext context.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT )
  OpenGLContext rendervisitor.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT )
  OpenGLContext tests/gldrawpixels.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT )
  OpenGLContext tests/glprint.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT )
  OpenGLContext tests/glutbitmapcharacter.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT )
  OpenGLContext tests/nehe8.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT )
  OpenGLContext tests/redbook_alpha3D.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT )
  OpenGLContext tests/textobject.py glClear( GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT )
  OpenGLContext tests/wgl_font.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT )
  OpenGLContext scenegraph/cubebackground.py glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT|GL_STENCIL_BUFFER_BIT)
  OpenGLContext scenegraph/simplebackground.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGLContext scenegraph/spherebackground.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT | GL_STENCIL_BUFFER_BIT);
  OpenGL/Demo da/dots.py glClear(GL_COLOR_BUFFER_BIT)
  OpenGL/Demo dek/texturesurf.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo dek/texturesurf2.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo dek/tile.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo GLE/cone.py glClear (GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo GLE/helix.py glClear (GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo GLE/texas.py glClear (GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo GLUT/examples/molehill.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo NeHe/lesson1.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo NeHe/lesson18.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)	# Clear The Screen And The Depth Buffer
  OpenGL/Demo NeHe/lesson2.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo NeHe/lesson3.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo NeHe/lesson4.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo NeHe/lesson5.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);	# Clear The Screen And The Depth Buffer
  OpenGL/Demo NeHe/lesson6-multi.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)	# Clear The Screen And The Depth Buffer
  OpenGL/Demo NeHe/lesson6.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)	# Clear The Screen And The Depth Buffer
  OpenGL/Demo redbook/cube.py glClear (GL_COLOR_BUFFER_BIT)
  OpenGL/Demo redbook/double.py glClear(GL_COLOR_BUFFER_BIT)
  OpenGL/Demo redbook/drawf.py glClear(GL_COLOR_BUFFER_BIT)
  OpenGL/Demo redbook/fog.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo redbook/hello.py glClear (GL_COLOR_BUFFER_BIT)
  OpenGL/Demo redbook/lines.py glClear(GL_COLOR_BUFFER_BIT)
  OpenGL/Demo redbook/movelight.py glClear (GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo redbook/scene.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo redbook/smooth.py glClear(GL_COLOR_BUFFER_BIT)
  OpenGL/Demo redbook/teapots.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo simple/GLE.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo suite/GLUT.py glClear (GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo tom/arraytest.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo tom/checker.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo tom/cone.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo tom/conechecker.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo tom/conechecker.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo tom/conesave.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo tom/demo.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo tom/demo.py glClear(GL_COLOR_BUFFER_BIT)
  OpenGL/Demo tom/demo.py glClear(GL_COLOR_BUFFER_BIT)
  OpenGL/Demo tom/first.py glClear(GL_COLOR_BUFFER_BIT)
  OpenGL/Demo tom/fog.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo tom/Line.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo tom/lorentz.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo tom/poly.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo twburton/knot.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  SciPy/kiva glcore2d.py glClear( GL_COLOR_BUFFER_BIT )
  SciPy/kiva tests/test_glcore2d.py glClear( GL_COLOR_BUFFER_BIT )
  (LGPL) PyUI pyui/renderers/openglBase.py glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT)
  (LGPL) VisionEgg src/Core.py gl.glClear(gl.GL_COLOR_BUFFER_BIT | gl.GL_DEPTH_BUFFER_BIT)
GL_COLOR_INDEXES
  OpenGLContext tests/glgetmaterial.py (GL_COLOR_INDEXES, "GL_COLOR_INDEXES"),
GL_COLOR_MATERIAL
  OpenGLContext scenegraph/arraygeometry.py glEnable( GL_COLOR_MATERIAL )
  OpenGLContext scenegraph/arraygeometry.py glDisable( GL_COLOR_MATERIAL )
  OpenGLContext scenegraph/cubebackground.py glDisable( GL_COLOR_MATERIAL )
  OpenGLContext scenegraph/cubebackground.py glEnable( GL_COLOR_MATERIAL )
  OpenGLContext scenegraph/indexedlineset.py glEnable( GL_COLOR_MATERIAL )
  OpenGLContext scenegraph/indexedlineset.py glDisable( GL_COLOR_MATERIAL )
  OpenGLContext scenegraph/indexedpolygons.py glDisable( GL_COLOR_MATERIAL )
  OpenGLContext scenegraph/indexedpolygons.py glEnable( GL_COLOR_MATERIAL )
  OpenGLContext scenegraph/spherebackground.py glEnable( GL_COLOR_MATERIAL )
  OpenGLContext scenegraph/spherebackground.py glDisable( GL_COLOR_MATERIAL )
  OpenGLContext scenegraph/nurbs.py glEnable( GL_COLOR_MATERIAL )
  OpenGLContext scenegraph/pointset.py glEnable( GL_COLOR_MATERIAL )
  OpenGLContext scenegraph/pointset.py glDisable( GL_COLOR_MATERIAL )
  OpenGL/Demo dek/OglSurface/triangle.py glEnable(GL_COLOR_MATERIAL)
  OpenGL/Demo GLE/maintest.py glEnable (GL_COLOR_MATERIAL)
  OpenGL/Demo simple/GLE.py glEnable(GL_COLOR_MATERIAL)
  OpenGL/Demo suite/items/GLE/cone.py glEnable(GL_COLOR_MATERIAL)
  OpenGL/Demo suite/items/GLE/cone.py glDisable(GL_COLOR_MATERIAL)
  OpenGL/Demo suite/items/GLE/helix.py glEnable(GL_COLOR_MATERIAL)
  OpenGL/Demo suite/items/GLE/helix.py glDisable(GL_COLOR_MATERIAL)
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glEnable(GL_COLOR_MATERIAL)
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glDisable(GL_COLOR_MATERIAL)
GL_COMPILE
  OpenGLContext displaylist.py def start( self, mode= GL_COMPILE ):
  OpenGLContext tests/dek_texturesurf.py glNewList( displayList, GL_COMPILE)
  OpenGLContext tests/redbook_alpha3D.py glNewList(self.sphereList, GL_COMPILE);
  OpenGLContext tests/redbook_alpha3D.py glNewList(self.cubeList, GL_COMPILE);
  OpenGL/Demo dek/texturesurf.py glNewList(self.list, GL_COMPILE)
  OpenGL/Demo dek/texturesurf2.py glNewList(self.list, GL_COMPILE)
  OpenGL/Demo dek/OglSurface/triangle.py glNewList(self.surfacelist, GL_COMPILE);
  OpenGL/Demo dek/OglSurface/triangle.py glNewList(self.bondlist, GL_COMPILE);
  OpenGL/Demo GLUT/examples/molehill.py glNewList(1, GL_COMPILE)
  OpenGL/Demo redbook/teapots.py glNewList (teapotList, GL_COMPILE)
  OpenGL/Demo tom/lorentz.py glNewList(o.grob, GL_COMPILE);
  (LGPL) PyUI pyui/renderers/openglPygame.py glNewList(newList, GL_COMPILE)
  (LGPL) VisionEgg src/SphereMap.py gl.glNewList(self.cached_display_list,gl.GL_COMPILE)
  (LGPL) VisionEgg src/SphereMap.py gl.glNewList(self.cached_display_list_id,gl.GL_COMPILE)
  (LGPL) VisionEgg src/SphereMap.py gl.glNewList(self.windowed_display_list_id,gl.GL_COMPILE)
  (LGPL) VisionEgg src/SphereMap.py gl.glNewList(self.opaque_display_list_id,gl.GL_COMPILE)
  (LGPL) VisionEgg src/Textures.py gl.glNewList(self.cached_display_list_normal,gl.GL_COMPILE)
  (LGPL) VisionEgg src/Textures.py gl.glNewList(self.cached_display_list_mirror,gl.GL_COMPILE)
GL_COMPILE_AND_EXECUTE
  OpenGL/Demo tom/demo.py glNewList(ogl.grob, GL_COMPILE_AND_EXECUTE);
  OpenGL/Demo tom/text.py glNewList(o.grob, GL_COMPILE_AND_EXECUTE);
  OpenGL/Demo twburton/knot.py glNewList(self.list, GL_COMPILE_AND_EXECUTE)
  (LGPL) PyUI pyui/renderers/openglGlut.py glNewList(w.displayList, GL_COMPILE_AND_EXECUTE)
  (LGPL) PyUI pyui/renderers/openglPygame.py glNewList(w.displayList, GL_COMPILE_AND_EXECUTE)
GL_CONSTANT_ATTENUATION
  OpenGLContext tests/glgetlight.py (GL_CONSTANT_ATTENUATION,"GL_CONSTANT_ATTENUATION"),
  OpenGLContext scenegraph/light.py glLight(lightID, GL_CONSTANT_ATTENUATION, self.attenuation[0])
GL_CULL_FACE
  OpenGLContext rendervisitor.py glEnable(GL_CULL_FACE)
  OpenGLContext shadow/passes.py glEnable( GL_CULL_FACE )
  OpenGLContext tests/dek_texturesurf.py glDisable(GL_CULL_FACE)
  OpenGLContext tests/nehe2.py glDisable( GL_CULL_FACE )
  OpenGLContext tests/nehe3.py glDisable( GL_CULL_FACE)
  OpenGLContext tests/nehe4.py glDisable( GL_CULL_FACE)
  OpenGLContext tests/nehe8.py glDisable( GL_CULL_FACE )
  OpenGLContext scenegraph/arraygeometry.py glEnable( GL_CULL_FACE )
  OpenGLContext scenegraph/arraygeometry.py glDisable( GL_CULL_FACE )
  OpenGLContext scenegraph/arraygeometry.py glDisable( GL_CULL_FACE )
  OpenGLContext scenegraph/indexedpolygons.py glEnable( GL_CULL_FACE )
  OpenGLContext scenegraph/indexedpolygons.py glDisable( GL_CULL_FACE )
  OpenGLContext scenegraph/indexedpolygons.py glDisable( GL_CULL_FACE )
  OpenGLContext scenegraph/spherebackground.py glDisable( GL_CULL_FACE )
  OpenGLContext scenegraph/spherebackground.py glEnable( GL_CULL_FACE )
  OpenGLContext scenegraph/nurbs.py glEnable( GL_CULL_FACE )
  OpenGLContext scenegraph/nurbs.py glDisable( GL_CULL_FACE )
  OpenGLContext scenegraph/nurbs.py glEnable( GL_CULL_FACE )
  OpenGL/Demo dek/texturesurf.py glDisable(GL_CULL_FACE)
  OpenGL/Demo dek/texturesurf2.py glDisable(GL_CULL_FACE)
  OpenGL/Demo dek/OglSurface/triangle.py glEnable(GL_CULL_FACE)
  OpenGL/Demo tom/text.py glEnable(GL_CULL_FACE)  # added by jfp to use with new logo.py
  OpenGL/Demo twburton/knot.py glEnable(GL_CULL_FACE)
GL_CW
  OpenGLContext shadow/volume.py glFrontFace( GL_CW )
  OpenGLContext scenegraph/arraygeometry.py self.ccw = GL_CW
  OpenGLContext scenegraph/indexedpolygons.py glFrontFace( GL_CW )
  OpenGLContext scenegraph/nurbs.py glFrontFace(  GL_CW )
  OpenGL/Demo redbook/teapots.py glFrontFace(GL_CW)
  OpenGL/Demo tom/fog.py glFrontFace(GL_CW)
GL_DECAL
  OpenGLContext tests/dek_texturesurf.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGLContext tests/nehe6_timer.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGLContext tests/multitexture_1.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGLContext tests/nehe6.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGLContext tests/nehe6_multi.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGL/Demo dek/texturesurf.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGL/Demo dek/texturesurf2.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGL/Demo dek/tile.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGL/Demo NeHe/lesson18.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGL/Demo NeHe/lesson6-multi.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGL/Demo NeHe/lesson6.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  (LGPL) PyUI tests/testcube.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_DECAL)
  (LGPL) VisionEgg src/Textures.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_DECAL)
GL_DECR
  OpenGLContext shadow/volume.py glStencilOp(GL_KEEP,GL_KEEP,GL_DECR);
GL_DEPTH_BUFFER_BIT
  OpenGLContext context.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT )
  OpenGLContext rendervisitor.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT )
  OpenGLContext tests/gldrawpixels.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT )
  OpenGLContext tests/glprint.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT )
  OpenGLContext tests/glutbitmapcharacter.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT )
  OpenGLContext tests/nehe8.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT )
  OpenGLContext tests/redbook_alpha3D.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT )
  OpenGLContext tests/textobject.py glClear( GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT )
  OpenGLContext tests/wgl_font.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT )
  OpenGLContext scenegraph/cubebackground.py glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT|GL_STENCIL_BUFFER_BIT)
  OpenGLContext scenegraph/cubebackground.py glClear(GL_DEPTH_BUFFER_BIT)
  OpenGLContext scenegraph/simplebackground.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGLContext scenegraph/spherebackground.py glClear( GL_DEPTH_BUFFER_BIT )
  OpenGLContext scenegraph/spherebackground.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT | GL_STENCIL_BUFFER_BIT);
  OpenGL/Demo dek/texturesurf.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo dek/texturesurf2.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo dek/tile.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo GLE/cone.py glClear (GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo GLE/helix.py glClear (GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo GLE/texas.py glClear (GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo GLUT/examples/molehill.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo NeHe/lesson1.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo NeHe/lesson18.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)	# Clear The Screen And The Depth Buffer
  OpenGL/Demo NeHe/lesson2.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo NeHe/lesson3.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo NeHe/lesson4.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo NeHe/lesson5.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);	# Clear The Screen And The Depth Buffer
  OpenGL/Demo NeHe/lesson6-multi.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)	# Clear The Screen And The Depth Buffer
  OpenGL/Demo NeHe/lesson6.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)	# Clear The Screen And The Depth Buffer
  OpenGL/Demo redbook/fog.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo redbook/movelight.py glClear (GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo redbook/scene.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo redbook/teapots.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo simple/GLE.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo suite/GLUT.py glClear (GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo tom/arraytest.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo tom/checker.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo tom/cone.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo tom/conechecker.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo tom/conechecker.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo tom/conesave.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo tom/demo.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo tom/fog.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo tom/Line.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo tom/lorentz.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo tom/poly.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo twburton/knot.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  (LGPL) PyUI pyui/renderers/openglBase.py glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT)
  (LGPL) VisionEgg src/Core.py gl.glClear(gl.GL_COLOR_BUFFER_BIT | gl.GL_DEPTH_BUFFER_BIT)
GL_DEPTH_COMPONENT
  OpenGLContext debug/bufferimage.py data = glReadPixelsf(x, y, width, height, GL_DEPTH_COMPONENT)
GL_DEPTH_TEST
  OpenGLContext renderpass.py glEnable(GL_DEPTH_TEST);
  OpenGLContext renderpass.py glEnable(GL_DEPTH_TEST);
  OpenGLContext rendervisitor.py glEnable(GL_DEPTH_TEST);
  OpenGLContext shadow/passes.py glEnable(GL_DEPTH_TEST);
  OpenGLContext tests/dek_texturesurf.py glEnable(GL_DEPTH_TEST)
  OpenGLContext tests/nehe8.py glEnable(GL_DEPTH_TEST);
  OpenGLContext tests/nehe8.py glDisable(GL_DEPTH_TEST);
  OpenGLContext tests/redbook_alpha.py glDisable(GL_DEPTH_TEST);
  OpenGLContext scenegraph/cubebackground.py glDisable( GL_DEPTH_TEST ) # we don't want to do anything with the depth buffer...
  OpenGLContext scenegraph/cubebackground.py glEnable( GL_DEPTH_TEST )
  OpenGLContext scenegraph/spherebackground.py glDisable( GL_DEPTH_TEST ) # we don't want to do anything with the depth buffer...
  OpenGLContext scenegraph/spherebackground.py glEnable( GL_DEPTH_TEST )
  OpenGL/Demo dek/texturesurf.py glEnable(GL_DEPTH_TEST)
  OpenGL/Demo dek/texturesurf2.py glEnable(GL_DEPTH_TEST)
  OpenGL/Demo dek/OglSurface/triangle.py glEnable(GL_DEPTH_TEST)
  OpenGL/Demo GLE/maintest.py glEnable (GL_DEPTH_TEST)
  OpenGL/Demo GLUT/examples/molehill.py glEnable(GL_DEPTH_TEST)
  OpenGL/Demo NeHe/lesson1.py glEnable(GL_DEPTH_TEST)				# Enables Depth Testing
  OpenGL/Demo NeHe/lesson18.py glEnable(GL_DEPTH_TEST)				# Enables Depth Testing
  OpenGL/Demo NeHe/lesson2.py glEnable(GL_DEPTH_TEST)				# Enables Depth Testing
  OpenGL/Demo NeHe/lesson3.py glEnable(GL_DEPTH_TEST)				# Enables Depth Testing
  OpenGL/Demo NeHe/lesson4.py glEnable(GL_DEPTH_TEST)				# Enables Depth Testing
  OpenGL/Demo NeHe/lesson5.py glEnable(GL_DEPTH_TEST)				# Enables Depth Testing
  OpenGL/Demo NeHe/lesson6-multi.py glEnable(GL_DEPTH_TEST)				# Enables Depth Testing
  OpenGL/Demo NeHe/lesson6.py glEnable(GL_DEPTH_TEST)				# Enables Depth Testing
  OpenGL/Demo redbook/fog.py glEnable(GL_DEPTH_TEST)
  OpenGL/Demo redbook/movelight.py glEnable(GL_DEPTH_TEST)
  OpenGL/Demo redbook/scene.py glEnable(GL_DEPTH_TEST)
  OpenGL/Demo redbook/teapots.py glEnable(GL_DEPTH_TEST)
  OpenGL/Demo simple/GLE.py glEnable(GL_DEPTH_TEST)
  OpenGL/Demo suite/items/GLE/cone.py glEnable(GL_DEPTH_TEST)
  OpenGL/Demo suite/items/GLE/cone.py glDisable(GL_DEPTH_TEST)
  OpenGL/Demo suite/items/GLE/helix.py glEnable(GL_DEPTH_TEST)
  OpenGL/Demo suite/items/GLE/helix.py glDisable(GL_DEPTH_TEST)
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glEnable(GL_DEPTH_TEST)
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glDisable(GL_DEPTH_TEST)
  OpenGL/Demo tom/cone.py glEnable(GL_DEPTH_TEST)
  OpenGL/Demo tom/conechecker.py glEnable(GL_DEPTH_TEST)
  OpenGL/Demo tom/fog.py glEnable(GL_DEPTH_TEST)
  OpenGL/Demo tom/text.py glEnable(GL_DEPTH_TEST) #
  OpenGL/Demo twburton/knot.py glEnable(GL_DEPTH_TEST)
  (LGPL) PyUI pyui/renderers/openglBase.py glDisable(GL_DEPTH_TEST)
  (LGPL) PyUI tests/testcube.py glEnable(GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Core.py gl.glDisable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Dots.py gl.glEnable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Gratings.py gl.glDisable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Gratings.py gl.glEnable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glDisable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_DEPTH_TEST )
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_DEPTH_TEST )
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_DEPTH_TEST )
  (LGPL) VisionEgg src/Text.py gl.glDisable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Text.py gl.glDisable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Textures.py gl.glDisable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Textures.py gl.glEnable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Textures.py gl.glDisable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Textures.py gl.glEnable( gl.GL_DEPTH_TEST )
GL_DIFFUSE
  OpenGLContext rendervisitor.py glLight(lightID, GL_DIFFUSE, (1.0,1.0,1.0,1.0))
  OpenGLContext tests/dek_texturesurf.py glLight( GL_LIGHT0, GL_DIFFUSE, (0,0,1))
  OpenGLContext tests/glgetlight.py (GL_DIFFUSE, "GL_DIFFUSE"),
  OpenGLContext tests/glgetmaterial.py (GL_DIFFUSE, "GL_DIFFUSE"),
  OpenGLContext tests/nehe7.py glLightfv(GL_LIGHT1, GL_DIFFUSE, (.8,.8,.8));
  OpenGLContext tests/nehe8.py glLightfv(GL_LIGHT1, GL_DIFFUSE, (.8,.8,.8));
  OpenGLContext tests/redbook_alpha3D.py glMaterialfv(GL_FRONT, GL_DIFFUSE, (0.75, 0.75, 0.0, 1.0), );
  OpenGLContext tests/redbook_alpha3D.py glMaterialfv(GL_FRONT, GL_DIFFUSE, ( 0.0, 0.8, 0.8, 0.8), );
  OpenGLContext tests/redbook_surface.py glMaterialfv(GL_FRONT, GL_DIFFUSE, [0.7, 0.7, 0.7, 1.0]);
  OpenGLContext tests/redbook_trim.py glMaterialfv(GL_FRONT, GL_DIFFUSE, [0.7, 0.7, 0.7, 1.0]);
  OpenGLContext tests/redbook_surface_cb.py glMaterialfv(GL_FRONT, GL_DIFFUSE, [0.7, 0.7, 0.7, 1.0]);
  OpenGLContext scenegraph/arraygeometry.py glColorMaterial( GL_FRONT_AND_BACK, GL_DIFFUSE)
  OpenGLContext scenegraph/material.py datamap = (GL_DIFFUSE, GL_EMISSION, GL_SPECULAR, GL_AMBIENT)
  OpenGLContext scenegraph/indexedpolygons.py glColorMaterial( GL_FRONT_AND_BACK, GL_DIFFUSE)
  OpenGLContext scenegraph/light.py glLight(lightID, GL_DIFFUSE, (x,y,z,1.0))
  OpenGLContext scenegraph/pointset.py glColorMaterial( GL_FRONT_AND_BACK, GL_DIFFUSE)
  OpenGL/Demo dek/OglSurface/triangle.py glColorMaterial(GL_FRONT, GL_DIFFUSE)
  OpenGL/Demo GLE/maintest.py glLightfv (GL_LIGHT0, GL_DIFFUSE, lightOneColor)
  OpenGL/Demo GLE/maintest.py glLightfv (GL_LIGHT1, GL_DIFFUSE, lightTwoColor)
  OpenGL/Demo GLE/maintest.py glColorMaterial (GL_FRONT_AND_BACK, GL_DIFFUSE)
  OpenGL/Demo GLUT/examples/molehill.py glMaterialfv(GL_FRONT, GL_DIFFUSE, mat_red_diffuse)
  OpenGL/Demo GLUT/examples/molehill.py glMaterialfv(GL_FRONT, GL_DIFFUSE, mat_green_diffuse)
  OpenGL/Demo GLUT/examples/molehill.py glMaterialfv(GL_FRONT, GL_DIFFUSE, mat_blue_diffuse)
  OpenGL/Demo GLUT/examples/molehill.py glMaterialfv(GL_FRONT, GL_DIFFUSE, mat_yellow_diffuse)
  OpenGL/Demo NeHe/lesson18.py glLightfv(GL_LIGHT0, GL_DIFFUSE, (1.0, 1.0, 1.0, 1.0))		# Setup The Diffuse Light
  OpenGL/Demo redbook/fog.py glMaterialfv(GL_FRONT, GL_DIFFUSE, mat)
  OpenGL/Demo redbook/scene.py glLightfv(GL_LIGHT0, GL_DIFFUSE, light_diffuse)
  OpenGL/Demo redbook/teapots.py glLightfv(GL_LIGHT0, GL_DIFFUSE, diffuse)
  OpenGL/Demo redbook/teapots.py glMaterialfv(GL_FRONT, GL_DIFFUSE, mat)
  OpenGL/Demo simple/GLE.py glLightfv(GL_LIGHT0, GL_DIFFUSE, (0.99, 0.99, 0.99, 1.0))
  OpenGL/Demo simple/GLE.py glLightfv(GL_LIGHT1, GL_DIFFUSE, (0.99, 0.99, 0.99, 1.0))
  OpenGL/Demo simple/GLE.py glColorMaterial(GL_FRONT_AND_BACK, GL_DIFFUSE)
  OpenGL/Demo suite/items/GLE/cone.py glLightfv(GL_LIGHT0, GL_DIFFUSE, (0.99, 0.99, 0.99, 1.0))
  OpenGL/Demo suite/items/GLE/cone.py glLightfv(GL_LIGHT1, GL_DIFFUSE, (0.99, 0.99, 0.99, 1.0))
  OpenGL/Demo suite/items/GLE/cone.py glLightfv(GL_LIGHT0, GL_DIFFUSE, (1, 1, 1, 1))
  OpenGL/Demo suite/items/GLE/cone.py glLightfv(GL_LIGHT1, GL_DIFFUSE, (0, 0, 0, 0))
  OpenGL/Demo suite/items/GLE/helix.py glLightfv(GL_LIGHT0, GL_DIFFUSE, (0.99, 0.99, 0.99, 1.0))
  OpenGL/Demo suite/items/GLE/helix.py glLightfv(GL_LIGHT1, GL_DIFFUSE, (0.99, 0.99, 0.99, 1.0))
  OpenGL/Demo suite/items/GLE/helix.py glColorMaterial(GL_FRONT_AND_BACK, GL_DIFFUSE)
  OpenGL/Demo suite/items/GLE/helix.py glLightfv (GL_LIGHT0, GL_DIFFUSE, (1, 1, 1, 1))
  OpenGL/Demo suite/items/GLE/helix.py glLightfv (GL_LIGHT1, GL_DIFFUSE, (0, 0, 0, 0))
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glLightfv(GL_LIGHT0, GL_DIFFUSE, (0.99, 0.99, 0.99, 1.0))
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glLightfv(GL_LIGHT1, GL_DIFFUSE, (0.99, 0.99, 0.99, 1.0))
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glLightfv (GL_LIGHT0, GL_DIFFUSE, (1, 1, 1, 1))
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glLightfv (GL_LIGHT1, GL_DIFFUSE, (0, 0, 0, 0))
  OpenGL/Demo tom/cone.py glMaterialfv(GL_FRONT, GL_DIFFUSE, [0.8, 0.8, 0.8, 1.0])
  OpenGL/Demo tom/cone.py glLightfv(GL_LIGHT0, GL_DIFFUSE, [1.0, 1.0, 1.0, 1.0])
  OpenGL/Demo tom/conechecker.py glMaterialfv(GL_FRONT, GL_DIFFUSE, [0.8, 0.8, 0.8, 1.0])
  OpenGL/Demo tom/conechecker.py glLightfv(GL_LIGHT0, GL_DIFFUSE, [1.0, 1.0, 1.0, 1.0])
  OpenGL/Demo tom/conesave.py glMaterialfv(GL_FRONT, GL_DIFFUSE, [0.8, 0.8, 0.8, 1.0])
  OpenGL/Demo tom/conesave.py glLightfv(GL_LIGHT0, GL_DIFFUSE, [1.0, 1.0, 1.0, 1.0])
  OpenGL/Demo tom/demo.py glMaterialfv(GL_FRONT, GL_DIFFUSE, [1, 0, 0, 0])
  OpenGL/Demo tom/fog.py glMaterialfv(GL_FRONT, GL_DIFFUSE, [0.61424, 0.04136, 0.04136, 1.0])
  OpenGL/Demo tom/pick.py glMaterialfv(GL_FRONT, GL_DIFFUSE, [1., 1., 0., 0.])
  OpenGL/Demo tom/pick.py glMaterialfv(GL_FRONT, GL_DIFFUSE, [0.3, 0.9, 0.3, 0.])
  OpenGL/Demo tom/text.py glMaterialfv(GL_FRONT, GL_DIFFUSE, [1., 1., 0., 0.])
  OpenGL/Demo twburton/knot.py glMaterialfv(GL_FRONT, GL_DIFFUSE, self.colors[i] + [1])
GL_DITHER
  OpenGL/Demo tom/fog.py glDisable(GL_DITHER)
GL_DONT_CARE
  OpenGL/Demo redbook/fog.py glHint (GL_FOG_HINT, GL_DONT_CARE)
  OpenGL/Demo tom/fog.py glHint(GL_FOG_HINT, GL_DONT_CARE)
GL_DOUBLE
  OpenGLContext tests/gldrawarrays_string.py glVertexPointer(3, GL_DOUBLE, 0, flower_geometry.points_expanded.tostring() );
  OpenGLContext tests/gldrawarrays_string.py glNormalPointer(GL_DOUBLE, 0, flower_geometry.normals_expanded.tostring() )
GL_DOUBLEBUFFER
  (LGPL) VisionEgg test/opengl_info.py print " GL_DOUBLEBUFFER = ",glGetBooleanv( GL_DOUBLEBUFFER )
GL_DST_ALPHA
  OpenGLContext tests/nehe8.py (GL_SRC_ALPHA, GL_DST_ALPHA), # just for kicks...
GL_EMISSION
  OpenGLContext tests/glgetmaterial.py (GL_EMISSION, "GL_EMISSION"),
  OpenGLContext tests/redbook_alpha3D.py glMaterialfv(GL_FRONT, GL_EMISSION, ( 0.0, 0.0, 0.0, 1.0), );
  OpenGLContext tests/redbook_alpha3D.py glMaterialfv(GL_FRONT, GL_EMISSION, ( 0.0, 0.3, 0.3, 0.6), );
  OpenGLContext scenegraph/material.py datamap = (GL_DIFFUSE, GL_EMISSION, GL_SPECULAR, GL_AMBIENT)
GL_EQUAL
  OpenGLContext shadow/passes.py glStencilFunc(GL_EQUAL, 0, ~0);
  OpenGLContext shadow/passes.py glDepthFunc(GL_EQUAL);
  OpenGLContext shadow/passes.py glStencilFunc(GL_EQUAL, 0, ~0);
  OpenGLContext shadow/passes.py glDepthFunc(GL_EQUAL);
GL_EXP
  OpenGL/Demo redbook/fog.py fogMode = GL_EXP
  OpenGL/Demo redbook/fog.py if (fogMode == GL_EXP):
  OpenGL/Demo redbook/fog.py fogMode = GL_EXP
  OpenGL/Demo tom/fog.py self.mode.set(GL_EXP)
  OpenGL/Demo tom/fog.py value=GL_EXP, command=self.selectFog)
  OpenGL/Demo tom/fog.py elif val == GL_EXP:
  OpenGL/Demo tom/fog.py glFogi(GL_FOG_MODE, GL_EXP)
GL_EXP2
  OpenGL/Demo redbook/fog.py fogMode = GL_EXP2;
  OpenGL/Demo redbook/fog.py elif (fogMode == GL_EXP2):
GL_EXTENSIONS
  (LGPL) VisionEgg test/opengl_info.py for extension in string.split(glGetString(GL_EXTENSIONS)):
GL_FALSE
  OpenGLContext shadow/passes.py glDepthMask(GL_FALSE);
  OpenGLContext tests/redbook_alpha3D.py glDepthMask (GL_FALSE);
  SciPy/kiva glcore2d.py gluTessProperty( self._glu_tess, GLU_TESS_BOUNDARY_ONLY, GL_FALSE )
GL_FILL
  OpenGLContext tests/dek_texturesurf.py glEvalMesh2(GL_FILL, 0, 20, 0, 20)
  OpenGL/Demo dek/texturesurf.py glEvalMesh2(GL_FILL, 0, 20, 0, 20)
  OpenGL/Demo dek/texturesurf2.py glEvalMesh2(GL_FILL, 0, 20, 0, 20)
  SciPy/kiva glcore2d.py fill_mode = GL_FILL
  SciPy/kiva glcore2d.py glPolygonMode( GL_FRONT_AND_BACK, GL_FILL )
  SciPy/kiva glcore2d.py glPolygonMode( GL_FRONT_AND_BACK, GL_FILL )
  (LGPL) VisionEgg src/MoreStimuli.py gl.glPolygonMode(gl.GL_FRONT_AND_BACK,gl.GL_FILL)
GL_FLAT
  OpenGLContext tests/dek_texturesurf.py glShadeModel(GL_FLAT)
  OpenGLContext tests/redbook_alpha.py glShadeModel (GL_FLAT);
  OpenGL/Demo dek/texturesurf.py glShadeModel(GL_FLAT)
  OpenGL/Demo dek/texturesurf2.py glShadeModel(GL_FLAT)
  OpenGL/Demo dek/tile.py glShadeModel(GL_FLAT)
  OpenGL/Demo redbook/cube.py glShadeModel (GL_FLAT)
  OpenGL/Demo redbook/double.py glShadeModel(GL_FLAT)
  OpenGL/Demo redbook/lines.py glShadeModel(GL_FLAT)
GL_FLOAT
  OpenGLContext tests/gldrawelements_base.py glVertexPointer( len(points)+3,GL_FLOAT, 0, points)
GL_FOG
  OpenGL/Demo redbook/fog.py glEnable(GL_FOG)
  OpenGL/Demo tom/fog.py glEnable(GL_FOG)
GL_FOG_COLOR
  OpenGL/Demo redbook/fog.py glFogfv (GL_FOG_COLOR, fogColor)
  OpenGL/Demo tom/fog.py glFogfv(GL_FOG_COLOR, fogColor)
GL_FOG_DENSITY
  OpenGL/Demo redbook/fog.py glFogf (GL_FOG_DENSITY, 0.35)
  OpenGL/Demo tom/fog.py glFogf(GL_FOG_DENSITY, 0.35)
GL_FOG_END
  OpenGL/Demo redbook/fog.py glFogf (GL_FOG_END, 5.0)
  OpenGL/Demo tom/fog.py glFogf(GL_FOG_END, 5.0)
GL_FOG_HINT
  OpenGL/Demo redbook/fog.py glHint (GL_FOG_HINT, GL_DONT_CARE)
  OpenGL/Demo tom/fog.py glHint(GL_FOG_HINT, GL_DONT_CARE)
GL_FOG_MODE
  OpenGL/Demo redbook/fog.py glFogi (GL_FOG_MODE, fogMode)
  OpenGL/Demo redbook/fog.py glFogi(GL_FOG_MODE, fogMode)
  OpenGL/Demo tom/fog.py glFogi(GL_FOG_MODE, val)
  OpenGL/Demo tom/fog.py glFogi(GL_FOG_MODE, val)
  OpenGL/Demo tom/fog.py glFogi(GL_FOG_MODE, GL_EXP)
GL_FOG_START
  OpenGL/Demo redbook/fog.py glFogf (GL_FOG_START, 1.0)
  OpenGL/Demo tom/fog.py glFogf(GL_FOG_START, 1.0)
GL_FRONT
  OpenGLContext shadow/volume.py glCullFace(GL_FRONT);
  OpenGLContext tests/glgetmaterial.py print name, glGetMaterialfv(GL_FRONT, param )
  OpenGLContext tests/redbook_alpha3D.py glMaterialfv(GL_FRONT, GL_SPECULAR, (1.0, 1.0, 1.0, 0.15) );
  OpenGLContext tests/redbook_alpha3D.py glMaterialfv(GL_FRONT, GL_SHININESS, (100.0, ) );
  OpenGLContext tests/redbook_alpha3D.py glMaterialfv(GL_FRONT, GL_EMISSION, ( 0.0, 0.0, 0.0, 1.0), );
  OpenGLContext tests/redbook_alpha3D.py glMaterialfv(GL_FRONT, GL_DIFFUSE, (0.75, 0.75, 0.0, 1.0), );
  OpenGLContext tests/redbook_alpha3D.py glMaterialfv(GL_FRONT, GL_EMISSION, ( 0.0, 0.3, 0.3, 0.6), );
  OpenGLContext tests/redbook_alpha3D.py glMaterialfv(GL_FRONT, GL_DIFFUSE, ( 0.0, 0.8, 0.8, 0.8), );
  OpenGLContext tests/redbook_surface.py glMaterialfv(GL_FRONT, GL_DIFFUSE, [0.7, 0.7, 0.7, 1.0]);
  OpenGLContext tests/redbook_surface.py glMaterialfv(GL_FRONT, GL_SPECULAR, [1.0, 1.0, 1.0, 1.0]);
  OpenGLContext tests/redbook_surface.py glMaterialfv(GL_FRONT, GL_SHININESS, [100.0]);
  OpenGLContext tests/redbook_trim.py glMaterialfv(GL_FRONT, GL_DIFFUSE, [0.7, 0.7, 0.7, 1.0]);
  OpenGLContext tests/redbook_trim.py glMaterialfv(GL_FRONT, GL_SPECULAR, [1.0, 1.0, 1.0, 1.0]);
  OpenGLContext tests/redbook_trim.py glMaterialfv(GL_FRONT, GL_SHININESS, [100.0]);
  OpenGLContext tests/redbook_surface_cb.py glMaterialfv(GL_FRONT, GL_DIFFUSE, [0.7, 0.7, 0.7, 1.0]);
  OpenGLContext tests/redbook_surface_cb.py glMaterialfv(GL_FRONT, GL_SPECULAR, [1.0, 1.0, 1.0, 1.0]);
  OpenGLContext tests/redbook_surface_cb.py glMaterialfv(GL_FRONT, GL_SHININESS, [100.0]);
  OpenGL/Demo dek/OglSurface/triangle.py glColorMaterial(GL_FRONT, GL_DIFFUSE)
  OpenGL/Demo GLUT/examples/molehill.py glMaterialfv(GL_FRONT, GL_SPECULAR, mat_specular)
  OpenGL/Demo GLUT/examples/molehill.py glMaterialfv(GL_FRONT, GL_SHININESS, mat_shininess)
  OpenGL/Demo GLUT/examples/molehill.py glMaterialfv(GL_FRONT, GL_DIFFUSE, mat_red_diffuse)
  OpenGL/Demo GLUT/examples/molehill.py glMaterialfv(GL_FRONT, GL_DIFFUSE, mat_green_diffuse)
  OpenGL/Demo GLUT/examples/molehill.py glMaterialfv(GL_FRONT, GL_DIFFUSE, mat_blue_diffuse)
  OpenGL/Demo GLUT/examples/molehill.py glMaterialfv(GL_FRONT, GL_DIFFUSE, mat_yellow_diffuse)
  OpenGL/Demo redbook/fog.py glMaterialfv(GL_FRONT, GL_AMBIENT, mat)
  OpenGL/Demo redbook/fog.py glMaterialfv(GL_FRONT, GL_DIFFUSE, mat)
  OpenGL/Demo redbook/fog.py glMaterialfv(GL_FRONT, GL_SPECULAR, mat)
  OpenGL/Demo redbook/fog.py glMaterialf(GL_FRONT, GL_SHININESS, 0.6*128.0)
  OpenGL/Demo redbook/teapots.py glMaterialfv(GL_FRONT, GL_AMBIENT, mat)
  OpenGL/Demo redbook/teapots.py glMaterialfv(GL_FRONT, GL_DIFFUSE, mat)
  OpenGL/Demo redbook/teapots.py glMaterialfv(GL_FRONT, GL_SPECULAR, mat)
  OpenGL/Demo redbook/teapots.py glMaterialf(GL_FRONT, GL_SHININESS, shine * 128.0)
  OpenGL/Demo tom/cone.py glMaterialfv(GL_FRONT, GL_AMBIENT, [0.2, 0.2, 0.2, 1.0])
  OpenGL/Demo tom/cone.py glMaterialfv(GL_FRONT, GL_DIFFUSE, [0.8, 0.8, 0.8, 1.0])
  OpenGL/Demo tom/cone.py glMaterialfv(GL_FRONT, GL_SPECULAR, [1.0, 0.0, 1.0, 1.0])
  OpenGL/Demo tom/cone.py glMaterialfv(GL_FRONT, GL_SHININESS, 50.0)
  OpenGL/Demo tom/conechecker.py glMaterialfv(GL_FRONT, GL_AMBIENT, [0.2, 0.2, 0.2, 1.0])
  OpenGL/Demo tom/conechecker.py glMaterialfv(GL_FRONT, GL_DIFFUSE, [0.8, 0.8, 0.8, 1.0])
  OpenGL/Demo tom/conechecker.py glMaterialfv(GL_FRONT, GL_SPECULAR, [1.0, 0.0, 1.0, 1.0])
  OpenGL/Demo tom/conechecker.py glMaterialfv(GL_FRONT, GL_SHININESS, 50.0)
  OpenGL/Demo tom/conesave.py glMaterialfv(GL_FRONT, GL_AMBIENT, [0.2, 0.2, 0.2, 1.0])
  OpenGL/Demo tom/conesave.py glMaterialfv(GL_FRONT, GL_DIFFUSE, [0.8, 0.8, 0.8, 1.0])
  OpenGL/Demo tom/conesave.py glMaterialfv(GL_FRONT, GL_SPECULAR, [1.0, 0.0, 1.0, 1.0])
  OpenGL/Demo tom/conesave.py glMaterialfv(GL_FRONT, GL_SHININESS, 50.0)
  OpenGL/Demo tom/demo.py glMaterialfv(GL_FRONT, GL_DIFFUSE, [1, 0, 0, 0])
  OpenGL/Demo tom/fog.py glMaterialfv(GL_FRONT, GL_AMBIENT, [0.1745, 0.01175, 0.01175, 1.0])
  OpenGL/Demo tom/fog.py glMaterialfv(GL_FRONT, GL_DIFFUSE, [0.61424, 0.04136, 0.04136, 1.0])
  OpenGL/Demo tom/fog.py glMaterialfv(GL_FRONT, GL_SPECULAR, [0.727811, 0.626959, 0.626959, 1.0])
  OpenGL/Demo tom/fog.py glMaterialfv(GL_FRONT, GL_SHININESS, 0.6 * 128.0)
  OpenGL/Demo tom/pick.py glMaterialfv(GL_FRONT, GL_DIFFUSE, [1., 1., 0., 0.])
  OpenGL/Demo tom/pick.py glMaterialfv(GL_FRONT, GL_DIFFUSE, [0.3, 0.9, 0.3, 0.])
  OpenGL/Demo tom/text.py glMaterialfv(GL_FRONT, GL_DIFFUSE, [1., 1., 0., 0.])
  OpenGL/Demo twburton/knot.py glMaterialfv(GL_FRONT, GL_DIFFUSE, self.colors[i] + [1])
  (LGPL) VisionEgg src/Core.py gl.glReadBuffer( gl.GL_FRONT )
  (LGPL) VisionEgg src/Core.py gl.glReadBuffer( gl.GL_FRONT )
  (LGPL) VisionEgg src/Textures.py gl.glReadBuffer( gl.GL_FRONT )
GL_FRONT_AND_BACK
  OpenGLContext scenegraph/arraygeometry.py glColorMaterial( GL_FRONT_AND_BACK, GL_DIFFUSE)
  OpenGLContext scenegraph/material.py faces = (GL_FRONT_AND_BACK,)*4
  OpenGLContext scenegraph/indexedpolygons.py glColorMaterial( GL_FRONT_AND_BACK, GL_DIFFUSE)
  OpenGLContext scenegraph/spherebackground.py glColorMaterial(GL_FRONT_AND_BACK, GL_AMBIENT_AND_DIFFUSE)
  OpenGLContext scenegraph/pointset.py glColorMaterial( GL_FRONT_AND_BACK, GL_DIFFUSE)
  OpenGL/Demo GLE/maintest.py glColorMaterial (GL_FRONT_AND_BACK, GL_DIFFUSE)
  OpenGL/Demo simple/GLE.py glColorMaterial(GL_FRONT_AND_BACK, GL_DIFFUSE)
  OpenGL/Demo suite/items/GLE/helix.py glColorMaterial(GL_FRONT_AND_BACK, GL_DIFFUSE)
  OpenGL/Demo suite/items/GLE/helix.py glColorMaterial(GL_FRONT_AND_BACK, GL_AMBIENT_AND_DIFFUSE)
  OpenGL/Demo twburton/knot.py glMaterialf(GL_FRONT_AND_BACK, GL_SHININESS, 50)
  OpenGL/Demo twburton/knot.py glMaterialfv(GL_FRONT_AND_BACK, GL_SPECULAR, ( 1.0, 1.0, 1.0, 1.0 ))
  SciPy/kiva glcore2d.py glPolygonMode( GL_FRONT_AND_BACK, fill_mode )
  SciPy/kiva glcore2d.py glPolygonMode( GL_FRONT_AND_BACK, GL_FILL )
  SciPy/kiva glcore2d.py glPolygonMode( GL_FRONT_AND_BACK, GL_LINE )
  SciPy/kiva glcore2d.py glPolygonMode( GL_FRONT_AND_BACK, GL_FILL )
  (LGPL) VisionEgg src/MoreStimuli.py gl.glPolygonMode(gl.GL_FRONT_AND_BACK,gl.GL_LINE)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glPolygonMode(gl.GL_FRONT_AND_BACK,gl.GL_FILL)
GL_GREATER
  OpenGLContext tests/gldrawpixels.py glAlphaFunc(GL_GREATER,0);
GL_GREEN_BITS
  (LGPL) VisionEgg src/Gratings.py elif gl.glGetIntegerv( gl.GL_GREEN_BITS ) < self.parameters.bit_depth:
  (LGPL) VisionEgg src/Gratings.py current_bit_depth = gl.glGetIntegerv( gl.GL_GREEN_BITS )
  (LGPL) VisionEgg test/opengl_info.py print " GL_GREEN_BITS =",glGetIntegerv( GL_GREEN_BITS )
GL_GREEN_SIZE
  (LGPL) VisionEgg src/Core.py pygame.display.gl_set_attribute(pygame.locals.GL_GREEN_SIZE,g)
  (LGPL) VisionEgg src/Core.py self.green_bits = pygame.display.gl_get_attribute(pygame.locals.GL_GREEN_SIZE)
GL_INCR
  OpenGLContext shadow/passes.py glStencilOp(GL_KEEP,GL_KEEP,GL_INCR);
  OpenGLContext shadow/passes.py glStencilOp(GL_KEEP,GL_KEEP,GL_INCR);
  OpenGLContext shadow/volume.py glStencilOp(GL_KEEP, GL_KEEP, GL_INCR);
GL_INT
  (LGPL) VisionEgg src/Gratings.py self.gl_type = gl.GL_INT
  (LGPL) VisionEgg src/Gratings.py self.gl_type = gl.GL_INT
GL_KEEP
  OpenGLContext shadow/passes.py glStencilOp(GL_KEEP,GL_KEEP,GL_KEEP);
  OpenGLContext shadow/passes.py glStencilOp(GL_KEEP,GL_KEEP,GL_KEEP);
  OpenGLContext shadow/passes.py glStencilOp(GL_KEEP,GL_KEEP,GL_KEEP);
  OpenGLContext shadow/passes.py glStencilOp(GL_KEEP,GL_KEEP,GL_INCR);
  OpenGLContext shadow/passes.py glStencilOp(GL_KEEP,GL_KEEP,GL_INCR);
  OpenGLContext shadow/passes.py glStencilOp(GL_KEEP,GL_KEEP,GL_INCR);
  OpenGLContext shadow/passes.py glStencilOp(GL_KEEP,GL_KEEP,GL_INCR);
  OpenGLContext shadow/volume.py glStencilOp(GL_KEEP, GL_KEEP, GL_INCR);
  OpenGLContext shadow/volume.py glStencilOp(GL_KEEP, GL_KEEP, GL_INCR);
  OpenGLContext shadow/volume.py glStencilOp(GL_KEEP,GL_KEEP,GL_DECR);
  OpenGLContext shadow/volume.py glStencilOp(GL_KEEP,GL_KEEP,GL_DECR);
GL_LESS
  OpenGLContext rendervisitor.py glDepthFunc(GL_LESS)
  OpenGLContext shadow/passes.py glDepthFunc(GL_LESS);
  OpenGLContext shadow/passes.py glDepthFunc( GL_LESS );
  OpenGL/Demo NeHe/lesson1.py glDepthFunc(GL_LESS)				# The Type Of Depth Test To Do
  OpenGL/Demo NeHe/lesson18.py glDepthFunc(GL_LESS)				# The Type Of Depth Test To Do
  OpenGL/Demo NeHe/lesson2.py glDepthFunc(GL_LESS)				# The Type Of Depth Test To Do
  OpenGL/Demo NeHe/lesson3.py glDepthFunc(GL_LESS)				# The Type Of Depth Test To Do
  OpenGL/Demo NeHe/lesson4.py glDepthFunc(GL_LESS)				# The Type Of Depth Test To Do
  OpenGL/Demo NeHe/lesson5.py glDepthFunc(GL_LESS)				# The Type Of Depth Test To Do
  OpenGL/Demo NeHe/lesson6-multi.py glDepthFunc(GL_LESS)				# The Type Of Depth Test To Do
  OpenGL/Demo NeHe/lesson6.py glDepthFunc(GL_LESS)				# The Type Of Depth Test To Do
  OpenGL/Demo tom/cone.py glDepthFunc(GL_LESS)
  OpenGL/Demo tom/conechecker.py glDepthFunc(GL_LESS)
  OpenGL/Demo tom/fog.py glDepthFunc(GL_LESS)
  OpenGL/Demo twburton/knot.py glDepthFunc(GL_LESS)
GL_LIGHT0
  OpenGLContext context.py glEnable(GL_LIGHT0);
  OpenGLContext context.py glDisable(GL_LIGHT0);
  OpenGLContext rendervisitor.py GL_LIGHT0, GL_LIGHT1, GL_LIGHT2, GL_LIGHT3,
  OpenGLContext rendervisitor.py self.SceneGraphDefaultlight( GL_LIGHT0 )
  OpenGLContext shadow/passes.py lightID = GL_LIGHT0
  OpenGLContext tests/dek_texturesurf.py glLight( GL_LIGHT0, GL_DIFFUSE, (0,0,1))
  OpenGLContext tests/glgetlight.py print name, glGetLightfv(GL_LIGHT0, param ) # now requires fully-specified name...
  OpenGLContext tests/lightobject.py GL_LIGHT0, GL_LIGHT1, GL_LIGHT2, GL_LIGHT3,
  OpenGLContext tests/nehe7.py glDisable(GL_LIGHT0);
  OpenGLContext tests/nehe7.py glDisable(GL_LIGHT0);
  OpenGLContext tests/nehe8.py glDisable(GL_LIGHT0);
  OpenGLContext tests/nehe8.py glDisable(GL_LIGHT0);
  OpenGLContext tests/redbook_alpha3D.py glLightfv(GL_LIGHT0, GL_POSITION, (0.5, 0.5, 1.0, 0.0), );
  OpenGLContext tests/redbook_alpha3D.py glEnable(GL_LIGHT0);
  OpenGL/Demo GLE/maintest.py glLightfv (GL_LIGHT0, GL_POSITION, lightOnePosition)
  OpenGL/Demo GLE/maintest.py glLightfv (GL_LIGHT0, GL_DIFFUSE, lightOneColor)
  OpenGL/Demo GLE/maintest.py glEnable (GL_LIGHT0)
  OpenGL/Demo GLUT/examples/molehill.py glEnable(GL_LIGHT0)
  OpenGL/Demo NeHe/lesson18.py glLightfv(GL_LIGHT0, GL_AMBIENT, (0.5, 0.5, 0.5, 1.0))		# Setup The Ambient Light
  OpenGL/Demo NeHe/lesson18.py glLightfv(GL_LIGHT0, GL_DIFFUSE, (1.0, 1.0, 1.0, 1.0))		# Setup The Diffuse Light
  OpenGL/Demo NeHe/lesson18.py glLightfv(GL_LIGHT0, GL_POSITION, (0.0, 0.0, 2.0, 1.0))	# Position The Light
  OpenGL/Demo NeHe/lesson18.py glEnable(GL_LIGHT0)					# Enable Light One
  OpenGL/Demo redbook/fog.py glLightfv(GL_LIGHT0, GL_POSITION, position)
  OpenGL/Demo redbook/fog.py glEnable(GL_LIGHT0)
  OpenGL/Demo redbook/movelight.py glEnable(GL_LIGHT0)
  OpenGL/Demo redbook/movelight.py glLightfv (GL_LIGHT0, GL_POSITION, position)
  OpenGL/Demo redbook/scene.py glLightfv(GL_LIGHT0, GL_AMBIENT, light_ambient)
  OpenGL/Demo redbook/scene.py glLightfv(GL_LIGHT0, GL_DIFFUSE, light_diffuse)
  OpenGL/Demo redbook/scene.py glLightfv(GL_LIGHT0, GL_SPECULAR, light_specular)
  OpenGL/Demo redbook/scene.py glLightfv(GL_LIGHT0, GL_POSITION, light_position)
  OpenGL/Demo redbook/scene.py glEnable(GL_LIGHT0)
  OpenGL/Demo redbook/teapots.py glLightfv(GL_LIGHT0, GL_AMBIENT, ambient)
  OpenGL/Demo redbook/teapots.py glLightfv(GL_LIGHT0, GL_DIFFUSE, diffuse)
  OpenGL/Demo redbook/teapots.py glLightfv(GL_LIGHT0, GL_POSITION, position)
  OpenGL/Demo redbook/teapots.py glEnable(GL_LIGHT0)
  OpenGL/Demo simple/GLE.py glLightfv(GL_LIGHT0, GL_POSITION,  (40.0, 40, 100.0, 0.0))
  OpenGL/Demo simple/GLE.py glLightfv(GL_LIGHT0, GL_DIFFUSE, (0.99, 0.99, 0.99, 1.0))
  OpenGL/Demo simple/GLE.py glEnable(GL_LIGHT0)
  OpenGL/Demo suite/items/GLE/cone.py glEnable(GL_LIGHT0)
  OpenGL/Demo suite/items/GLE/cone.py glLightfv(GL_LIGHT0, GL_POSITION, (40.0, 40, 100.0, 0.0))
  OpenGL/Demo suite/items/GLE/cone.py glLightfv(GL_LIGHT0, GL_DIFFUSE, (0.99, 0.99, 0.99, 1.0))
  OpenGL/Demo suite/items/GLE/cone.py glDisable(GL_LIGHT0)
  OpenGL/Demo suite/items/GLE/cone.py glLightfv(GL_LIGHT0, GL_POSITION, (0, 0, 1, 0))
  OpenGL/Demo suite/items/GLE/cone.py glLightfv(GL_LIGHT0, GL_DIFFUSE, (1, 1, 1, 1))
  OpenGL/Demo suite/items/GLE/helix.py glEnable(GL_LIGHT0)
  OpenGL/Demo suite/items/GLE/helix.py glLightfv(GL_LIGHT0, GL_POSITION, (40.0, 40, 100.0, 0.0))
  OpenGL/Demo suite/items/GLE/helix.py glLightfv(GL_LIGHT0, GL_DIFFUSE, (0.99, 0.99, 0.99, 1.0))
  OpenGL/Demo suite/items/GLE/helix.py glDisable(GL_LIGHT0)
  OpenGL/Demo suite/items/GLE/helix.py glLightfv (GL_LIGHT0, GL_POSITION, (0, 0, 1, 0))
  OpenGL/Demo suite/items/GLE/helix.py glLightfv (GL_LIGHT0, GL_DIFFUSE, (1, 1, 1, 1))
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glEnable(GL_LIGHT0)
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glLightfv(GL_LIGHT0, GL_POSITION, (40.0, 40, 100.0, 0.0))
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glLightfv(GL_LIGHT0, GL_DIFFUSE, (0.99, 0.99, 0.99, 1.0))
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glDisable(GL_LIGHT0)
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glLightfv (GL_LIGHT0, GL_POSITION, (0, 0, 1, 0))
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glLightfv (GL_LIGHT0, GL_DIFFUSE, (1, 1, 1, 1))
  OpenGL/Demo tom/cone.py glLightfv(GL_LIGHT0, GL_AMBIENT, [0.0, 1.0, 0.0, 1.0])
  OpenGL/Demo tom/cone.py glLightfv(GL_LIGHT0, GL_DIFFUSE, [1.0, 1.0, 1.0, 1.0])
  OpenGL/Demo tom/cone.py glLightfv(GL_LIGHT0, GL_SPECULAR, [1.0, 1.0, 1.0, 1.0])
  OpenGL/Demo tom/cone.py glLightfv(GL_LIGHT0, GL_POSITION, [1.0, 1.0, 1.0, 0.0]);
  OpenGL/Demo tom/cone.py glEnable(GL_LIGHT0)
  OpenGL/Demo tom/conechecker.py glLightfv(GL_LIGHT0, GL_AMBIENT, [0.0, 1.0, 0.0, 1.0])
  OpenGL/Demo tom/conechecker.py glLightfv(GL_LIGHT0, GL_DIFFUSE, [1.0, 1.0, 1.0, 1.0])
  OpenGL/Demo tom/conechecker.py glLightfv(GL_LIGHT0, GL_SPECULAR, [1.0, 1.0, 1.0, 1.0])
  OpenGL/Demo tom/conechecker.py glLightfv(GL_LIGHT0, GL_POSITION, [1.0, 1.0, 1.0, 0.0]);
  OpenGL/Demo tom/conechecker.py glEnable(GL_LIGHT0)
  OpenGL/Demo tom/conesave.py glLightfv(GL_LIGHT0, GL_AMBIENT, [0.0, 1.0, 0.0, 1.0])
  OpenGL/Demo tom/conesave.py glLightfv(GL_LIGHT0, GL_DIFFUSE, [1.0, 1.0, 1.0, 1.0])
  OpenGL/Demo tom/conesave.py glLightfv(GL_LIGHT0, GL_SPECULAR, [1.0, 1.0, 1.0, 1.0])
  OpenGL/Demo tom/conesave.py glLightfv(GL_LIGHT0, GL_POSITION, [1.0, 1.0, 1.0, 0.0]);
  OpenGL/Demo tom/conesave.py glEnable(GL_LIGHT0)
  OpenGL/Demo tom/fog.py glLightfv(GL_LIGHT0, GL_POSITION, [0.0, 3.0, 3.0, 0.0])
  OpenGL/Demo tom/fog.py glEnable(GL_LIGHT0)
  OpenGL/Demo twburton/knot.py glEnable(GL_LIGHT0)
GL_LIGHT1
  OpenGLContext rendervisitor.py GL_LIGHT0, GL_LIGHT1, GL_LIGHT2, GL_LIGHT3,
  OpenGLContext tests/lightobject.py GL_LIGHT0, GL_LIGHT1, GL_LIGHT2, GL_LIGHT3,
  OpenGLContext tests/nehe7.py glLightfv( GL_LIGHT1, GL_AMBIENT, (0.2, .2, .2, 1.0) );
  OpenGLContext tests/nehe7.py glLightfv(GL_LIGHT1, GL_DIFFUSE, (.8,.8,.8));
  OpenGLContext tests/nehe7.py glLightfv(GL_LIGHT1, GL_POSITION, (-2,0,3,1) );
  OpenGLContext tests/nehe7.py glEnable(GL_LIGHT1);
  OpenGLContext tests/nehe7.py glDisable(GL_LIGHT1);
  OpenGLContext tests/nehe8.py glLightfv( GL_LIGHT1, GL_AMBIENT, (0.2, .2, .2, 1.0) );
  OpenGLContext tests/nehe8.py glLightfv(GL_LIGHT1, GL_DIFFUSE, (.8,.8,.8));
  OpenGLContext tests/nehe8.py glLightfv(GL_LIGHT1, GL_POSITION, (-2,0,3,1) );
  OpenGLContext tests/nehe8.py glEnable(GL_LIGHT1);
  OpenGLContext tests/nehe8.py glDisable(GL_LIGHT1);
  OpenGL/Demo GLE/maintest.py glLightfv (GL_LIGHT1, GL_POSITION, lightTwoPosition)
  OpenGL/Demo GLE/maintest.py glLightfv (GL_LIGHT1, GL_DIFFUSE, lightTwoColor)
  OpenGL/Demo GLE/maintest.py glEnable (GL_LIGHT1)
  OpenGL/Demo simple/GLE.py glLightfv(GL_LIGHT1, GL_POSITION, (-40.0, 40, 100.0, 0.0))
  OpenGL/Demo simple/GLE.py glLightfv(GL_LIGHT1, GL_DIFFUSE, (0.99, 0.99, 0.99, 1.0))
  OpenGL/Demo simple/GLE.py glEnable(GL_LIGHT1)
  OpenGL/Demo suite/items/GLE/cone.py glEnable(GL_LIGHT1)
  OpenGL/Demo suite/items/GLE/cone.py glLightfv(GL_LIGHT1, GL_POSITION, (-40.0, 40, 100.0, 0.0))
  OpenGL/Demo suite/items/GLE/cone.py glLightfv(GL_LIGHT1, GL_DIFFUSE, (0.99, 0.99, 0.99, 1.0))
  OpenGL/Demo suite/items/GLE/cone.py glDisable(GL_LIGHT1)
  OpenGL/Demo suite/items/GLE/cone.py glLightfv(GL_LIGHT1, GL_POSITION, (0, 0, 1, 0))
  OpenGL/Demo suite/items/GLE/cone.py glLightfv(GL_LIGHT1, GL_DIFFUSE, (0, 0, 0, 0))
  OpenGL/Demo suite/items/GLE/helix.py glEnable(GL_LIGHT1)
  OpenGL/Demo suite/items/GLE/helix.py glLightfv(GL_LIGHT1, GL_POSITION, (-40.0, 40, 100.0, 0.0))
  OpenGL/Demo suite/items/GLE/helix.py glLightfv(GL_LIGHT1, GL_DIFFUSE, (0.99, 0.99, 0.99, 1.0))
  OpenGL/Demo suite/items/GLE/helix.py glDisable(GL_LIGHT1)
  OpenGL/Demo suite/items/GLE/helix.py glLightfv (GL_LIGHT1, GL_POSITION, (0, 0, 1, 0))
  OpenGL/Demo suite/items/GLE/helix.py glLightfv (GL_LIGHT1, GL_DIFFUSE, (0, 0, 0, 0))
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glEnable(GL_LIGHT1)
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glLightfv(GL_LIGHT1, GL_POSITION, (-40.0, 40, 100.0, 0.0))
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glLightfv(GL_LIGHT1, GL_DIFFUSE, (0.99, 0.99, 0.99, 1.0))
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glDisable(GL_LIGHT1)
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glLightfv (GL_LIGHT1, GL_POSITION, (0, 0, 1, 0))
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glLightfv (GL_LIGHT1, GL_DIFFUSE, (0, 0, 0, 0))
GL_LIGHT2
  OpenGLContext rendervisitor.py GL_LIGHT0, GL_LIGHT1, GL_LIGHT2, GL_LIGHT3,
  OpenGLContext tests/lightobject.py GL_LIGHT0, GL_LIGHT1, GL_LIGHT2, GL_LIGHT3,
GL_LIGHT3
  OpenGLContext rendervisitor.py GL_LIGHT0, GL_LIGHT1, GL_LIGHT2, GL_LIGHT3,
  OpenGLContext tests/lightobject.py GL_LIGHT0, GL_LIGHT1, GL_LIGHT2, GL_LIGHT3,
GL_LIGHT4
  OpenGLContext rendervisitor.py GL_LIGHT4, GL_LIGHT5, GL_LIGHT6, GL_LIGHT7,
  OpenGLContext tests/lightobject.py GL_LIGHT4, GL_LIGHT5, GL_LIGHT6, GL_LIGHT7,
GL_LIGHT5
  OpenGLContext rendervisitor.py GL_LIGHT4, GL_LIGHT5, GL_LIGHT6, GL_LIGHT7,
  OpenGLContext tests/lightobject.py GL_LIGHT4, GL_LIGHT5, GL_LIGHT6, GL_LIGHT7,
GL_LIGHT6
  OpenGLContext rendervisitor.py GL_LIGHT4, GL_LIGHT5, GL_LIGHT6, GL_LIGHT7,
  OpenGLContext tests/lightobject.py GL_LIGHT4, GL_LIGHT5, GL_LIGHT6, GL_LIGHT7,
GL_LIGHT7
  OpenGLContext rendervisitor.py GL_LIGHT4, GL_LIGHT5, GL_LIGHT6, GL_LIGHT7,
  OpenGLContext tests/lightobject.py GL_LIGHT4, GL_LIGHT5, GL_LIGHT6, GL_LIGHT7,
GL_LIGHTING
  OpenGLContext context.py glEnable(GL_LIGHTING);
  OpenGLContext context.py glDisable(GL_LIGHTING);
  OpenGLContext renderpass.py glEnable(GL_LIGHTING)
  OpenGLContext renderpass.py glDisable(GL_LIGHTING)
  OpenGLContext renderpass.py glDisable(GL_LIGHTING)
  OpenGLContext rendervisitor.py glEnable(GL_LIGHTING);
  OpenGLContext rendervisitor.py glEnable(GL_LIGHTING);
  OpenGLContext shadow/passes.py glEnable(GL_LIGHTING);
  OpenGLContext tests/glprint.py glDisable(GL_LIGHTING)
  OpenGLContext tests/glut_fullscreen.py glDisable( GL_LIGHTING) # context lights by default
  OpenGLContext tests/nehe6_timer.py glDisable( GL_LIGHTING) # context lights by default
  OpenGLContext tests/lightobject.py glEnable(GL_LIGHTING);
  OpenGLContext tests/lightobject.py glDisable(GL_LIGHTING);
  OpenGLContext tests/nehe3.py glDisable( GL_LIGHTING)
  OpenGLContext tests/nehe4.py glDisable( GL_LIGHTING) # context lights by default
  OpenGLContext tests/nehe5.py glDisable( GL_LIGHTING) # context lights by default
  OpenGLContext tests/nehe6.py glDisable( GL_LIGHTING) # context lights by default
  OpenGLContext tests/nehe6_multi.py glDisable( GL_LIGHTING) # context lights by default
  OpenGLContext tests/nehe7.py glEnable( GL_LIGHTING )
  OpenGLContext tests/nehe7.py glDisable( GL_LIGHTING )
  OpenGLContext tests/nehe8.py glEnable( GL_LIGHTING )
  OpenGLContext tests/nehe8.py glDisable( GL_LIGHTING )
  OpenGLContext tests/redbook_alpha.py glDisable( GL_LIGHTING )
  OpenGLContext tests/redbook_alpha3D.py glEnable(GL_LIGHTING);
  OpenGLContext tests/textureobject.py glDisable( GL_LIGHTING) # context lights by default
  OpenGLContext tests/wgl_font.py glDisable(GL_LIGHTING)
  OpenGLContext scenegraph/arraygeometry.py glDisable( GL_LIGHTING )
  OpenGLContext scenegraph/shape.py glEnable(GL_LIGHTING)
  OpenGLContext scenegraph/shape.py glDisable(GL_LIGHTING)
  OpenGLContext scenegraph/shape.py glDisable(GL_LIGHTING)
  OpenGLContext scenegraph/shape.py if glGetBoolean( GL_LIGHTING ):
  OpenGLContext scenegraph/cubebackground.py glDisable( GL_LIGHTING )
  OpenGLContext scenegraph/cubebackground.py glEnable( GL_LIGHTING )
  OpenGLContext scenegraph/indexedpolygons.py glDisable( GL_LIGHTING )
  OpenGLContext scenegraph/spherebackground.py glDisable( GL_LIGHTING )
  OpenGLContext scenegraph/spherebackground.py glEnable( GL_LIGHTING )
  OpenGLContext scenegraph/light.py glEnable( GL_LIGHTING )
  OpenGLContext scenegraph/pointset.py glDisable( GL_LIGHTING )
  OpenGL/Demo dek/OglSurface/OglFrame.py glDisable(GL_LIGHTING)
  OpenGL/Demo dek/OglSurface/triangle.py glEnable(GL_LIGHTING)
  OpenGL/Demo dek/OglSurface/triangle.py glDisable(GL_LIGHTING)
  OpenGL/Demo dek/OglSurface/triangle.py glDisable(GL_LIGHTING)
  OpenGL/Demo GLE/maintest.py glEnable (GL_LIGHTING)
  OpenGL/Demo GLUT/examples/molehill.py glEnable(GL_LIGHTING)
  OpenGL/Demo NeHe/lesson18.py glEnable(GL_LIGHTING)
  OpenGL/Demo NeHe/lesson18.py glDisable(GL_LIGHTING)
  OpenGL/Demo redbook/fog.py glEnable(GL_LIGHTING)
  OpenGL/Demo redbook/movelight.py glEnable(GL_LIGHTING)
  OpenGL/Demo redbook/movelight.py glDisable (GL_LIGHTING)
  OpenGL/Demo redbook/movelight.py glEnable (GL_LIGHTING)
  OpenGL/Demo redbook/scene.py glEnable(GL_LIGHTING)
  OpenGL/Demo redbook/teapots.py glEnable(GL_LIGHTING)
  OpenGL/Demo simple/GLE.py glEnable(GL_LIGHTING)
  OpenGL/Demo suite/items/GLE/cone.py glEnable(GL_LIGHTING)
  OpenGL/Demo suite/items/GLE/cone.py glDisable(GL_LIGHTING)
  OpenGL/Demo suite/items/GLE/helix.py glEnable(GL_LIGHTING)
  OpenGL/Demo suite/items/GLE/helix.py glDisable(GL_LIGHTING)
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glEnable(GL_LIGHTING)
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glDisable(GL_LIGHTING)
  OpenGL/Demo tom/arraytest.py glDisable(GL_LIGHTING)
  OpenGL/Demo tom/arraytest.py glEnable(GL_LIGHTING)
  OpenGL/Demo tom/checker.py glDisable(GL_LIGHTING)
  OpenGL/Demo tom/checker.py glEnable(GL_LIGHTING)
  OpenGL/Demo tom/cone.py glEnable(GL_LIGHTING)
  OpenGL/Demo tom/conechecker.py glDisable(GL_LIGHTING)
  OpenGL/Demo tom/conechecker.py glEnable(GL_LIGHTING)
  OpenGL/Demo tom/conechecker.py glEnable(GL_LIGHTING)
  OpenGL/Demo tom/conesave.py glEnable(GL_LIGHTING)
  OpenGL/Demo tom/demo.py glDisable(GL_LIGHTING)
  OpenGL/Demo tom/demo.py glEnable(GL_LIGHTING)
  OpenGL/Demo tom/fog.py glEnable(GL_LIGHTING)
  OpenGL/Demo tom/Line.py glDisable(GL_LIGHTING)
  OpenGL/Demo tom/Line.py glEnable(GL_LIGHTING)
  OpenGL/Demo tom/lorentz.py glDisable(GL_LIGHTING)
  OpenGL/Demo tom/lorentz.py glEnable(GL_LIGHTING)
  OpenGL/Demo tom/poly.py glDisable(GL_LIGHTING)
  OpenGL/Demo tom/poly.py glEnable(GL_LIGHTING)
  OpenGL/Demo twburton/knot.py glEnable(GL_LIGHTING)
GL_LIGHT_MODEL_AMBIENT
  OpenGL/Demo redbook/teapots.py glLightModelfv(GL_LIGHT_MODEL_AMBIENT, lmodel_ambient)
  OpenGL/Demo tom/cone.py glLightModelfv(GL_LIGHT_MODEL_AMBIENT, [0.2, 0.2, 0.2, 1.0])
  OpenGL/Demo tom/conechecker.py glLightModelfv(GL_LIGHT_MODEL_AMBIENT, [0.2, 0.2, 0.2, 1.0])
  OpenGL/Demo tom/conesave.py glLightModelfv(GL_LIGHT_MODEL_AMBIENT, [0.2, 0.2, 0.2, 1.0])
GL_LIGHT_MODEL_LOCAL_VIEWER
  OpenGL/Demo redbook/teapots.py glLightModelfv(GL_LIGHT_MODEL_LOCAL_VIEWER, local_view)
  OpenGL/Demo tom/fog.py glLightModelf(GL_LIGHT_MODEL_LOCAL_VIEWER, 0.0)
GL_LIGHT_MODEL_TWO_SIDE
  OpenGL/Demo suite/items/GLUT/geometry/solid_cone.py glLightModeli(GL_LIGHT_MODEL_TWO_SIDE, 1)
  OpenGL/Demo suite/items/GLUT/geometry/solid_cone.py glLightModeli(GL_LIGHT_MODEL_TWO_SIDE, 0)
GL_LINE
  SciPy/kiva glcore2d.py fill_mode = GL_LINE
  SciPy/kiva glcore2d.py glPolygonMode( GL_FRONT_AND_BACK, GL_LINE )
  (LGPL) VisionEgg src/MoreStimuli.py gl.glPolygonMode(gl.GL_FRONT_AND_BACK,gl.GL_LINE)
GL_LINEAR
  OpenGLContext tests/nehe7.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR)
  OpenGLContext tests/nehe7.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR)
  OpenGLContext tests/nehe7.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR)
  OpenGLContext tests/nehe8.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR)
  OpenGLContext tests/nehe8.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR)
  OpenGLContext tests/nehe8.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR)
  OpenGL/Demo NeHe/lesson18.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR)
  OpenGL/Demo NeHe/lesson18.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR)
  OpenGL/Demo NeHe/lesson18.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR)
  OpenGL/Demo redbook/fog.py fogMode = GL_LINEAR
  OpenGL/Demo redbook/fog.py elif (fogMode == GL_LINEAR):
  OpenGL/Demo tom/fog.py value=GL_LINEAR, command=self.selectFog)
  OpenGL/Demo tom/fog.py if val == GL_LINEAR:
  (LGPL) VisionEgg demo/flames_visionegg.py texture_min_filter=gl.GL_LINEAR)
  (LGPL) VisionEgg demo/image_sequence_fast.py texture_min_filter=gl.GL_LINEAR,
  (LGPL) VisionEgg demo/multi_stim.py texture_min_filter=gl.GL_LINEAR,
  (LGPL) VisionEgg src/Gratings.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MAG_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/Gratings.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MIN_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/Lib3DS.py 'texture_mag_filter':(gl.GL_LINEAR,
  (LGPL) VisionEgg src/SphereMap.py 'min_filter':(gl.GL_LINEAR,
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MAG_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_2D,gl.GL_TEXTURE_MAG_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_2D,gl.GL_TEXTURE_MIN_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/Text.py kw['texture_min_filter'] = gl.GL_LINEAR
  (LGPL) VisionEgg src/Textures.py self.mag_filter = gl.GL_LINEAR
  (LGPL) VisionEgg src/Textures.py 'texture_mag_filter':(gl.GL_LINEAR,
  (LGPL) VisionEgg src/Textures.py self.parameters.texture_min_filter = gl.GL_LINEAR
  (LGPL) VisionEgg src/Textures.py self.texture_object.set_min_filter(gl.GL_LINEAR) # turn off mipmaps for mask
GL_LINEAR_ATTENUATION
  OpenGLContext tests/glgetlight.py (GL_LINEAR_ATTENUATION , "GL_LINEAR_ATTENUATION"),
  OpenGLContext scenegraph/light.py glLight(lightID, GL_LINEAR_ATTENUATION, self.attenuation[1])
GL_LINEAR_MIPMAP_LINEAR
  (LGPL) VisionEgg src/Lib3DS.py 'texture_min_filter':(gl.GL_LINEAR_MIPMAP_LINEAR,
  (LGPL) VisionEgg src/Textures.py _mipmap_modes = [gl.GL_LINEAR_MIPMAP_LINEAR,gl.GL_LINEAR_MIPMAP_NEAREST,
  (LGPL) VisionEgg src/Textures.py self.parameters.texture_min_filter = gl.GL_LINEAR_MIPMAP_LINEAR
GL_LINEAR_MIPMAP_NEAREST
  OpenGLContext tests/nehe7.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_NEAREST)
  OpenGLContext tests/nehe8.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_NEAREST)
  OpenGLContext scenegraph/imagetexture.py 'minFilter', 'SFInt32', 0, GL_LINEAR_MIPMAP_NEAREST,
  OpenGL/Demo NeHe/lesson18.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_NEAREST)
  (LGPL) VisionEgg src/Textures.py _mipmap_modes = [gl.GL_LINEAR_MIPMAP_LINEAR,gl.GL_LINEAR_MIPMAP_NEAREST,
GL_LINES
  OpenGLContext shadow/volume.py glBegin( GL_LINES )
  OpenGL/Demo dek/OglSurface/OglFrame.py glBegin(GL_LINES)
  OpenGL/Demo dek/OglSurface/triangle.py glBegin(GL_LINES)
  OpenGL/Demo redbook/lines.py glBegin(GL_LINES)
  OpenGL/Demo tom/demo.py glBegin(GL_LINES)
  OpenGL/Demo tom/Line.py glBegin(GL_LINES)
  (LGPL) PyUI pyui/renderers/openglBase.py glBegin(GL_LINES)
  (LGPL) PyUI tests/testcube.py glBegin(GL_LINES)
GL_LINE_LOOP
  OpenGL/Demo tom/arraytest.py glDrawArrays(GL_LINE_LOOP, 0, n)
  OpenGL/Demo tom/poly.py glDrawArrays(GL_LINE_LOOP, 0, n)
GL_LINE_SMOOTH
  OpenGL/Demo dek/OglSurface/OglFrame.py glEnable(GL_LINE_SMOOTH);
  (LGPL) VisionEgg src/MoreStimuli.py gl.glEnable(gl.GL_LINE_SMOOTH)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glDisable(gl.GL_LINE_SMOOTH)
  (LGPL) VisionEgg src/Text.py gl.glEnable(gl.GL_LINE_SMOOTH)
GL_LINE_STIPPLE
  OpenGL/Demo redbook/lines.py glEnable(GL_LINE_STIPPLE)
  OpenGL/Demo redbook/lines.py glDisable (GL_LINE_STIPPLE)
  SciPy/kiva glcore2d.py glEnable( GL_LINE_STIPPLE )
  SciPy/kiva glcore2d.py glDisable( GL_LINE_STIPPLE )
GL_LINE_STRIP
  OpenGLContext scenegraph/indexedlineset.py glBegin( GL_LINE_STRIP )
  OpenGLContext scenegraph/indexedlineset.py glBegin( GL_LINE_STRIP )
  OpenGLContext scenegraph/indexedlineset.py glBegin( GL_LINE_STRIP )
  OpenGL/Demo redbook/lines.py glBegin (GL_LINE_STRIP)
  OpenGL/Demo tom/lorentz.py glBegin(GL_LINE_STRIP)
  SciPy/kiva glcore2d.py poly_mode = GL_LINE_STRIP
  SciPy/kiva glcore2d.py poly_mode = GL_LINE_STRIP
GL_LUMINANCE
  OpenGLContext texture.py format = GL_LUMINANCE
  OpenGLContext scenegraph/imagetexture.py [0, GL_LUMINANCE, GL_LUMINANCE_ALPHA, GL_RGB, GL_RGBA ][componentCount],
  (LGPL) VisionEgg src/Gratings.py self.gl_internal_format = gl.GL_LUMINANCE
  (LGPL) VisionEgg src/Gratings.py self.format = gl.GL_LUMINANCE
  (LGPL) VisionEgg src/Gratings.py self.gl_internal_format = gl.GL_LUMINANCE
  (LGPL) VisionEgg src/Gratings.py self.format = gl.GL_LUMINANCE
  (LGPL) VisionEgg src/Gratings.py self.gl_internal_format = gl.GL_LUMINANCE
  (LGPL) VisionEgg src/Gratings.py self.format = gl.GL_LUMINANCE
  (LGPL) VisionEgg src/Textures.py data_format = gl.GL_LUMINANCE
  (LGPL) VisionEgg src/Textures.py data_format = gl.GL_LUMINANCE
  (LGPL) VisionEgg src/Textures.py data_format = gl.GL_LUMINANCE
  (LGPL) VisionEgg src/Textures.py data_format = gl.GL_LUMINANCE
GL_LUMINANCE_ALPHA
  OpenGLContext scenegraph/imagetexture.py [0, GL_LUMINANCE, GL_LUMINANCE_ALPHA, GL_RGB, GL_RGBA ][componentCount],
GL_MAP1_COLOR_4
  OpenGLContext scenegraph/nurbs.py GL_MAP1_COLOR_4
GL_MAP1_VERTEX_3
  OpenGLContext scenegraph/nurbs.py GL_MAP1_VERTEX_3
GL_MAP2_COLOR_4
  OpenGLContext scenegraph/nurbs.py GL_MAP2_COLOR_4
GL_MAP2_TEXTURE_COORD_2
  OpenGLContext tests/dek_texturesurf.py glEnable(GL_MAP2_TEXTURE_COORD_2)
  OpenGLContext tests/dek_texturesurf.py glMap2f(GL_MAP2_TEXTURE_COORD_2, 0, 1, 0, 1, texpts)
  OpenGL/Demo dek/texturesurf.py glMap2f(GL_MAP2_TEXTURE_COORD_2, 0, 1, 0, 1, texpts)
  OpenGL/Demo dek/texturesurf.py glEnable(GL_MAP2_TEXTURE_COORD_2)
  OpenGL/Demo dek/texturesurf2.py glMap2f(GL_MAP2_TEXTURE_COORD_2, 0, 1, 0, 1, texpts)
  OpenGL/Demo dek/texturesurf2.py glEnable(GL_MAP2_TEXTURE_COORD_2)
GL_MAP2_VERTEX_3
  OpenGLContext tests/dek_texturesurf.py glEnable(GL_MAP2_VERTEX_3)
  OpenGLContext tests/dek_texturesurf.py glMap2f(GL_MAP2_VERTEX_3, 0., 1., 0., 1., ctrlpoints)
  OpenGLContext tests/redbook_surface.py GL_MAP2_VERTEX_3
  OpenGLContext tests/redbook_trim.py GL_MAP2_VERTEX_3
  OpenGLContext tests/redbook_surface_cb.py GL_MAP2_VERTEX_3
  OpenGLContext scenegraph/nurbs.py GL_MAP2_VERTEX_3,
  OpenGL/Demo dek/texturesurf.py glMap2f(GL_MAP2_VERTEX_3, 0, 1, 0, 1, ctrlpoints)
  OpenGL/Demo dek/texturesurf.py glEnable(GL_MAP2_VERTEX_3)
  OpenGL/Demo dek/texturesurf2.py glMap2f(GL_MAP2_VERTEX_3, 0, 1, 0, 1, ctrlpoints)
  OpenGL/Demo dek/texturesurf2.py glEnable(GL_MAP2_VERTEX_3)
  OpenGL/Demo GLUT/examples/molehill.py gluNurbsSurface(nurb, knots, knots, pts1, GL_MAP2_VERTEX_3)
  OpenGL/Demo GLUT/examples/molehill.py gluNurbsSurface(nurb, knots, knots, pts2, GL_MAP2_VERTEX_3)
  OpenGL/Demo GLUT/examples/molehill.py gluNurbsSurface(nurb, knots, knots, pts3, GL_MAP2_VERTEX_3)
  OpenGL/Demo GLUT/examples/molehill.py gluNurbsSurface(nurb, knots, knots, pts4, GL_MAP2_VERTEX_3)
GL_MATRIX_MODE
  OpenGLContext context.py if not glGetInteger( GL_MATRIX_MODE ) == GL_MODELVIEW:
  (LGPL) VisionEgg src/Core.py matrix_mode = gl.glGetInteger(gl.GL_MATRIX_MODE)
  (LGPL) VisionEgg src/Core.py matrix_mode = gl.glGetInteger(gl.GL_MATRIX_MODE)
  (LGPL) VisionEgg src/Core.py matrix_mode = gl.glGetInteger(gl.GL_MATRIX_MODE)
GL_MAX_TEXTURE_SIZE
  OpenGLContext texture.py boundary = min( (glGetInteger( GL_MAX_TEXTURE_SIZE ), dim))
  (LGPL) VisionEgg src/Gratings.py max_dim = gl.glGetIntegerv(gl.GL_MAX_TEXTURE_SIZE)
  (LGPL) VisionEgg src/Lib3DS.py max_dim = gl.glGetIntegerv( gl.GL_MAX_TEXTURE_SIZE )
  (LGPL) VisionEgg src/Lib3DS.py max_dim = gl.glGetIntegerv( gl.GL_MAX_TEXTURE_SIZE )
  (LGPL) VisionEgg src/SphereMap.py max_dim = gl.glGetIntegerv(gl.GL_MAX_TEXTURE_SIZE)
  (LGPL) VisionEgg src/SphereMap.py max_dim = gl.glGetIntegerv(gl.GL_MAX_TEXTURE_SIZE)
  (LGPL) VisionEgg src/Textures.py max_dim = gl.glGetIntegerv( gl.GL_MAX_TEXTURE_SIZE )
  (LGPL) VisionEgg src/Textures.py max_dim = gl.glGetIntegerv( gl.GL_MAX_TEXTURE_SIZE )
  (LGPL) VisionEgg test/opengl_info.py max_dim = glGetIntegerv(GL_MAX_TEXTURE_SIZE)
GL_MODELVIEW
  OpenGLContext context.py if not glGetInteger( GL_MATRIX_MODE ) == GL_MODELVIEW:
  OpenGLContext context.py glMatrixMode(GL_MODELVIEW)
  OpenGLContext renderpass.py glMatrixMode(GL_MODELVIEW)
  OpenGLContext viewplatform.py glMatrixMode(GL_MODELVIEW)
  OpenGLContext rendervisitor.py glMatrixMode(GL_MODELVIEW)
  OpenGLContext rendervisitor.py glMatrixMode(GL_MODELVIEW)
  OpenGLContext rendervisitor.py glMatrixMode( GL_MODELVIEW )
  OpenGLContext rendervisitor.py glMatrixMode( GL_MODELVIEW )
  OpenGLContext rendervisitor.py glMatrixMode( GL_MODELVIEW )
  OpenGLContext rendervisitor.py glMatrixMode(GL_MODELVIEW)
  OpenGLContext rendervisitor.py glMatrixMode(GL_MODELVIEW)
  OpenGLContext shadow/shadowcontext.py glMatrixMode(GL_MODELVIEW)
  OpenGLContext tests/gldrawpixels.py glMatrixMode(GL_MODELVIEW);
  OpenGLContext tests/gldrawpixels.py glMatrixMode(GL_MODELVIEW);
  OpenGLContext tests/glutbitmapcharacter.py glMatrixMode(GL_MODELVIEW);
  OpenGLContext tests/glutbitmapcharacter.py glMatrixMode(GL_MODELVIEW);
  OpenGLContext tests/boundingvolume.py glMatrixMode(GL_MODELVIEW);
  OpenGLContext scenegraph/texturetransform.py glMatrixMode( GL_MODELVIEW )
  OpenGLContext scenegraph/texturetransform.py glMatrixMode( GL_MODELVIEW )
  OpenGL/Demo GLE/maintest.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo GLUT/examples/molehill.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo NeHe/lesson1.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo NeHe/lesson1.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo NeHe/lesson18.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo NeHe/lesson18.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo NeHe/lesson2.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo NeHe/lesson2.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo NeHe/lesson3.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo NeHe/lesson3.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo NeHe/lesson4.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo NeHe/lesson4.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo NeHe/lesson5.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo NeHe/lesson5.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo NeHe/lesson6-multi.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo NeHe/lesson6-multi.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo NeHe/lesson6.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo NeHe/lesson6.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo redbook/cube.py glMatrixMode (GL_MODELVIEW)
  OpenGL/Demo redbook/double.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo redbook/drawf.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo redbook/fog.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo redbook/movelight.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo redbook/scene.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo redbook/smooth.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo redbook/teapots.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo simple/GLE.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo simple/GLE.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo suite/GLUT.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo suite/GLUT.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo twburton/knot.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo twburton/knot.py glMatrixMode(GL_MODELVIEW)
  SciPy/kiva glcore2d.py glMatrixMode( GL_MODELVIEW )
  SciPy/kiva tests/test_glcore2d.py glMatrixMode( GL_MODELVIEW )
  (LGPL) PyUI pyui/renderers/openglBase.py glMatrixMode(GL_MODELVIEW)
  (LGPL) PyUI pyui/renderers/openglBase.py glMatrixMode(GL_MODELVIEW)
  (LGPL) PyUI pyui/renderers/openglBase.py glMatrixMode(GL_MODELVIEW)
  (LGPL) PyUI pyui/renderers/openglBase.py glMatrixMode(GL_MODELVIEW)
  (LGPL) PyUI pyui/renderers/openglGlut.py glMatrixMode(GL_MODELVIEW)
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/Dots.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/Gratings.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/SphereMap.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/SphereMap.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/SphereMap.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/SphereMap.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/SphereMap.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/SphereMap.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/Text.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/Text.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/Textures.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/Textures.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/Textures.py gl.glMatrixMode(gl.GL_MODELVIEW)
GL_MODELVIEW_MATRIX
  OpenGLContext renderpass.py self.modelView = glGetDoublev( GL_MODELVIEW_MATRIX )
  OpenGLContext renderpass.py matrix = glGetDoublev( GL_MODELVIEW_MATRIX )
  OpenGLContext frustum.py model = glGetDoublev( GL_MODELVIEW_MATRIX )
  OpenGLContext rendervisitor.py matrix = glGetDouble( GL_MODELVIEW_MATRIX )
  OpenGLContext rendervisitor.py matrix = glGetDouble( GL_MODELVIEW_MATRIX )
  OpenGLContext scenegraph/cubebackground.py matrix = glGetDoublev( GL_MODELVIEW_MATRIX )
  OpenGLContext scenegraph/polygonsort.py modelView = glGetDoublev( GL_MODELVIEW_MATRIX )
  SciPy/kiva glcore2d.py glm = glGetDouble( GL_MODELVIEW_MATRIX )
  SciPy/kiva glcore2d.py return glGetFloat( GL_MODELVIEW_MATRIX )
  (LGPL) PyUI pyui/renderers/openglBase.py offsets = glGetIntegerv( GL_MODELVIEW_MATRIX )
GL_MODULATE
  OpenGLContext tests/multitexture_1.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE)
  OpenGLContext tests/nehe6_multi.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE)
  (LGPL) PyUI pyui/renderers/openglGlut.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE)
  (LGPL) VisionEgg src/Gratings.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_MODULATE)
  (LGPL) VisionEgg src/Textures.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_MODULATE)
  (LGPL) VisionEgg src/Textures.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_MODULATE)
GL_N3F_V3F
  OpenGLContext tests/glinterleavedarrays.py GL_N3F_V3F, # 3 vertex floats/item, 3 normals/item
GL_NEAREST
  OpenGLContext tests/dek_texturesurf.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/dek_texturesurf.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe6_timer.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe6_timer.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext tests/multitexture_1.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/multitexture_1.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext tests/multitexture_1.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/multitexture_1.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe6.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe6.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe6_multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe6_multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe6_multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe6_multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe7.py glTexParameteri( GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe7.py glTexParameteri( GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe8.py glTexParameteri( GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe8.py glTexParameteri( GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext scenegraph/imagetexture.py ' minFilter', 'SFInt32', 0, GL_NEAREST
  OpenGLContext scenegraph/imagetexture.py ' magFilter', 'SFInt32', 0, GL_NEAREST
  OpenGL/Demo dek/texturesurf.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGL/Demo dek/texturesurf.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGL/Demo dek/texturesurf2.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGL/Demo dek/texturesurf2.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGL/Demo dek/tile.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGL/Demo dek/tile.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGL/Demo NeHe/lesson18.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGL/Demo NeHe/lesson18.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGL/Demo NeHe/lesson6-multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGL/Demo NeHe/lesson6-multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGL/Demo NeHe/lesson6.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGL/Demo NeHe/lesson6.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  (LGPL) PyUI pyui/renderers/openglGlut.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  (LGPL) PyUI pyui/renderers/openglGlut.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  (LGPL) PyUI tests/testcube.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  (LGPL) PyUI tests/testcube.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  (LGPL) VisionEgg demo/alpha_texture.py texture_min_filter=gl.GL_NEAREST,
  (LGPL) VisionEgg demo/alpha_texture.py texture_mag_filter=gl.GL_NEAREST,
  (LGPL) VisionEgg demo/alpha_texture.py texture_min_filter=gl.GL_NEAREST,
  (LGPL) VisionEgg demo/alpha_texture.py texture_mag_filter=gl.GL_NEAREST,
  (LGPL) VisionEgg demo/visual_jitter.py texture_min_filter=gl.GL_NEAREST,
  (LGPL) VisionEgg demo/visual_jitter.py texture_mag_filter=gl.GL_NEAREST,
  (LGPL) VisionEgg demo/visual_jitter.py texture_min_filter=gl.GL_NEAREST,
  (LGPL) VisionEgg demo/visual_jitter.py texture_mag_filter=gl.GL_NEAREST,
  (LGPL) VisionEgg src/Core.py texture_min_filter=gl.GL_NEAREST, # only used if scale < 1.0
  (LGPL) VisionEgg src/Core.py texture_mag_filter=gl.GL_NEAREST, # only used if scale > 1.0
  (LGPL) VisionEgg src/Textures.py texture_min_filter = gl.GL_NEAREST,
  (LGPL) VisionEgg src/Textures.py texture_mag_filter = gl.GL_NEAREST,
GL_NEAREST_MIPMAP_LINEAR
  (LGPL) VisionEgg src/Textures.py self.min_filter = gl.GL_NEAREST_MIPMAP_LINEAR
  (LGPL) VisionEgg src/Textures.py gl.GL_NEAREST_MIPMAP_LINEAR,gl.GL_NEAREST_MIPMAP_NEAREST]
GL_NEAREST_MIPMAP_NEAREST
  (LGPL) VisionEgg src/Textures.py gl.GL_NEAREST_MIPMAP_LINEAR,gl.GL_NEAREST_MIPMAP_NEAREST]
GL_NORMALIZE
  OpenGLContext tests/dek_texturesurf.py glEnable(GL_NORMALIZE)
  OpenGLContext tests/redbook_surface.py glEnable(GL_NORMALIZE);
  OpenGLContext tests/redbook_trim.py glEnable(GL_NORMALIZE);
  OpenGLContext tests/redbook_surface_cb.py glEnable(GL_NORMALIZE);
  OpenGLContext scenegraph/arraygeometry.py glEnable(GL_NORMALIZE); # should do this explicitly eventually
  OpenGLContext scenegraph/indexedpolygons.py glEnable(GL_NORMALIZE); # should do this explicitly eventually
  OpenGLContext scenegraph/nurbs.py glEnable( GL_NORMALIZE )
  OpenGLContext scenegraph/nurbs.py glDisable( GL_NORMALIZE )
  OpenGL/Demo dek/texturesurf.py glEnable(GL_NORMALIZE)
  OpenGL/Demo dek/texturesurf2.py glEnable(GL_NORMALIZE)
  OpenGL/Demo GLUT/examples/molehill.py glEnable(GL_NORMALIZE)
  OpenGL/Demo redbook/teapots.py glEnable(GL_NORMALIZE)
  OpenGL/Demo tom/fog.py glEnable(GL_NORMALIZE)
  (LGPL) PyUI tests/testcube.py glEnable(GL_NORMALIZE)
GL_NORMAL_ARRAY
  OpenGLContext tests/glarrayelement.py glEnableClientState(GL_NORMAL_ARRAY);
  OpenGLContext tests/gldrawarrays.py glEnableClientState(GL_NORMAL_ARRAY);
  OpenGLContext tests/gldrawarrays_string.py glEnableClientState(GL_NORMAL_ARRAY);
  OpenGLContext scenegraph/arraygeometry.py glEnableClientState( GL_NORMAL_ARRAY )
  OpenGLContext scenegraph/arraygeometry.py glDisableClientState( GL_NORMAL_ARRAY )
  OpenGLContext scenegraph/indexedpolygons.py glDisableClientState( GL_NORMAL_ARRAY )
  OpenGLContext scenegraph/indexedpolygons.py glEnableClientState( GL_NORMAL_ARRAY )
  OpenGLContext scenegraph/spherebackground.py glDisableClientState( GL_NORMAL_ARRAY )
GL_ONE
  OpenGLContext shadow/passes.py glBlendFunc(GL_ONE,GL_ZERO);
  OpenGLContext shadow/passes.py glBlendFunc(GL_ONE,GL_ONE);
  OpenGLContext shadow/passes.py glBlendFunc(GL_ONE,GL_ONE);
  OpenGLContext shadow/passes.py glBlendFunc(GL_ONE,GL_ONE);
  OpenGLContext shadow/passes.py glBlendFunc(GL_ONE,GL_ONE);
  OpenGLContext tests/nehe8.py (GL_SRC_ALPHA, GL_ONE), # what the demo uses originally
  OpenGLContext tests/redbook_alpha3D.py glBlendFunc (GL_SRC_ALPHA, GL_ONE); # note assumption that background is black...
GL_ONE_MINUS_SRC_ALPHA
  OpenGLContext renderpass.py glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA)
  OpenGLContext tests/nehe8.py (GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA), # this is what should be used with sorted triangles
  OpenGLContext tests/redbook_alpha.py glBlendFunc (GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
  OpenGLContext scenegraph/imagetexture.py glBlendFunc (GL_SRC_ALPHA,GL_ONE_MINUS_SRC_ALPHA)
  OpenGL/Demo dek/OglSurface/OglFrame.py glBlendFunc(GL_SRC_ALPHA,  GL_ONE_MINUS_SRC_ALPHA);
  SciPy/kiva glcore2d.py glBlendFunc( GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA )
  SciPy/kiva glcore2d.py glBlendFunc( GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA )
  (LGPL) PyUI pyui/renderers/openglBase.py glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA)
  (LGPL) VisionEgg src/Dots.py gl.glBlendFunc( gl.GL_SRC_ALPHA, gl.GL_ONE_MINUS_SRC_ALPHA )
  (LGPL) VisionEgg src/Gratings.py gl.glBlendFunc( gl.GL_SRC_ALPHA, gl.GL_ONE_MINUS_SRC_ALPHA )
  (LGPL) VisionEgg src/MoreStimuli.py gl.glBlendFunc(gl.GL_SRC_ALPHA,gl.GL_ONE_MINUS_SRC_ALPHA)
  (LGPL) VisionEgg src/SphereMap.py gl.glBlendFunc( gl.GL_SRC_ALPHA, gl.GL_ONE_MINUS_SRC_ALPHA )
  (LGPL) VisionEgg src/SphereMap.py gl.glBlendFunc( gl.GL_ONE_MINUS_SRC_ALPHA, gl.GL_SRC_ALPHA ) # alpha 1.0 = transparent
  (LGPL) VisionEgg src/Text.py gl.glBlendFunc(gl.GL_SRC_ALPHA,gl.GL_ONE_MINUS_SRC_ALPHA)
  (LGPL) VisionEgg src/Textures.py gl.glBlendFunc( gl.GL_SRC_ALPHA, gl.GL_ONE_MINUS_SRC_ALPHA )
  (LGPL) VisionEgg src/Textures.py gl.glBlendFunc( gl.GL_SRC_ALPHA, gl.GL_ONE_MINUS_SRC_ALPHA )
GL_PACK_ALIGNMENT
  OpenGLContext texture.py glPixelStorei(GL_PACK_ALIGNMENT, 1)
  OpenGLContext texture.py glPixelStorei(GL_PACK_ALIGNMENT, 1)
  OpenGLContext debug/bufferimage.py glPixelStorei(GL_PACK_ALIGNMENT, 1)
  OpenGLContext debug/bufferimage.py glPixelStorei(GL_PACK_ALIGNMENT, 1)
  OpenGLContext tests/gldrawpixels.py glPixelStorei(GL_PACK_ALIGNMENT, 1)
  OpenGLContext tests/saveimage.py glPixelStorei(GL_PACK_ALIGNMENT, 1)
  OpenGL/Demo tom/conesave.py glPixelStorei(GL_PACK_ALIGNMENT, 1)
  (LGPL) VisionEgg src/Core.py gl.glPixelStorei(gl.GL_PACK_ALIGNMENT, 1)
  (LGPL) VisionEgg src/Core.py gl.glPixelStorei(gl.GL_PACK_ALIGNMENT, 1)
GL_PIXEL_MAP_A_TO_A
  OpenGLContext tests/glgetpixelmap.py (GL_PIXEL_MAP_A_TO_A, "GL_PIXEL_MAP_A_TO_A"),
GL_PIXEL_MAP_B_TO_B
  OpenGLContext tests/glgetpixelmap.py (GL_PIXEL_MAP_B_TO_B, "GL_PIXEL_MAP_B_TO_B"),
GL_PIXEL_MAP_G_TO_G
  OpenGLContext tests/glgetpixelmap.py (GL_PIXEL_MAP_G_TO_G, "GL_PIXEL_MAP_G_TO_G"),
GL_PIXEL_MAP_I_TO_A
  OpenGLContext tests/glgetpixelmap.py (GL_PIXEL_MAP_I_TO_A, "GL_PIXEL_MAP_I_TO_A"),
GL_PIXEL_MAP_I_TO_B
  OpenGLContext tests/glgetpixelmap.py (GL_PIXEL_MAP_I_TO_B, "GL_PIXEL_MAP_I_TO_B"),
GL_PIXEL_MAP_I_TO_G
  OpenGLContext tests/glgetpixelmap.py (GL_PIXEL_MAP_I_TO_G, "GL_PIXEL_MAP_I_TO_G"),
GL_PIXEL_MAP_I_TO_I
  OpenGLContext tests/glgetpixelmap.py (GL_PIXEL_MAP_I_TO_I, "GL_PIXEL_MAP_I_TO_I"),
GL_PIXEL_MAP_I_TO_R
  OpenGLContext tests/glgetpixelmap.py (GL_PIXEL_MAP_I_TO_R, "GL_PIXEL_MAP_I_TO_R"),
GL_PIXEL_MAP_R_TO_R
  OpenGLContext tests/glgetpixelmap.py (GL_PIXEL_MAP_R_TO_R, "GL_PIXEL_MAP_R_TO_R"),
GL_PIXEL_MAP_S_TO_S
  OpenGLContext tests/glgetpixelmap.py (GL_PIXEL_MAP_S_TO_S, "GL_PIXEL_MAP_S_TO_S"),
GL_POINTS
  OpenGLContext scenegraph/pointset.py glDrawArrays( GL_POINTS, 0, len(points))
  OpenGL/Demo da/dots.py glDrawArrays(GL_POINTS, 0, len(v))
  OpenGL/Demo suite/items/da/dots.py glDrawArrays(GL_POINTS, 0, len(v))
  (LGPL) VisionEgg src/Dots.py gl.glBegin(gl.GL_POINTS)
GL_POINT_SMOOTH
  (LGPL) VisionEgg src/Dots.py gl.glEnable( gl.GL_POINT_SMOOTH )
  (LGPL) VisionEgg src/Dots.py gl.glDisable( gl.GL_POINT_SMOOTH ) # turn off
GL_POLYGON
  OpenGL/Demo NeHe/lesson2.py glBegin(GL_POLYGON)                 # Start drawing a polygon
  OpenGL/Demo NeHe/lesson3.py glBegin(GL_POLYGON)                 # Start drawing a polygon
  OpenGL/Demo NeHe/lesson4.py glBegin(GL_POLYGON)                 # Start drawing a polygon
  OpenGL/Demo redbook/hello.py glBegin(GL_POLYGON)
  SciPy/kiva glcore2d.py poly_mode = GL_POLYGON
  SciPy/kiva glcore2d.py poly_mode = GL_POLYGON
GL_POSITION
  OpenGLContext rendervisitor.py glLight(lightID, GL_POSITION, (0.0,0.0,10.0,1.0))
  OpenGLContext tests/glgetlight.py (GL_POSITION, "GL_POSITION"),
  OpenGLContext tests/nehe7.py glLightfv(GL_LIGHT1, GL_POSITION, (-2,0,3,1) );
  OpenGLContext tests/nehe8.py glLightfv(GL_LIGHT1, GL_POSITION, (-2,0,3,1) );
  OpenGLContext tests/redbook_alpha3D.py glLightfv(GL_LIGHT0, GL_POSITION, (0.5, 0.5, 1.0, 0.0), );
  OpenGLContext scenegraph/light.py glLight(lightID, GL_POSITION, (x,y,z,self.pointSource))
  OpenGL/Demo GLE/maintest.py glLightfv (GL_LIGHT0, GL_POSITION, lightOnePosition)
  OpenGL/Demo GLE/maintest.py glLightfv (GL_LIGHT1, GL_POSITION, lightTwoPosition)
  OpenGL/Demo NeHe/lesson18.py glLightfv(GL_LIGHT0, GL_POSITION, (0.0, 0.0, 2.0, 1.0))	# Position The Light
  OpenGL/Demo redbook/fog.py glLightfv(GL_LIGHT0, GL_POSITION, position)
  OpenGL/Demo redbook/movelight.py glLightfv (GL_LIGHT0, GL_POSITION, position)
  OpenGL/Demo redbook/scene.py glLightfv(GL_LIGHT0, GL_POSITION, light_position)
  OpenGL/Demo redbook/teapots.py glLightfv(GL_LIGHT0, GL_POSITION, position)
  OpenGL/Demo simple/GLE.py glLightfv(GL_LIGHT0, GL_POSITION,  (40.0, 40, 100.0, 0.0))
  OpenGL/Demo simple/GLE.py glLightfv(GL_LIGHT1, GL_POSITION, (-40.0, 40, 100.0, 0.0))
  OpenGL/Demo suite/items/GLE/cone.py glLightfv(GL_LIGHT0, GL_POSITION, (40.0, 40, 100.0, 0.0))
  OpenGL/Demo suite/items/GLE/cone.py glLightfv(GL_LIGHT1, GL_POSITION, (-40.0, 40, 100.0, 0.0))
  OpenGL/Demo suite/items/GLE/cone.py glLightfv(GL_LIGHT0, GL_POSITION, (0, 0, 1, 0))
  OpenGL/Demo suite/items/GLE/cone.py glLightfv(GL_LIGHT1, GL_POSITION, (0, 0, 1, 0))
  OpenGL/Demo suite/items/GLE/helix.py glLightfv(GL_LIGHT0, GL_POSITION, (40.0, 40, 100.0, 0.0))
  OpenGL/Demo suite/items/GLE/helix.py glLightfv(GL_LIGHT1, GL_POSITION, (-40.0, 40, 100.0, 0.0))
  OpenGL/Demo suite/items/GLE/helix.py glLightfv (GL_LIGHT0, GL_POSITION, (0, 0, 1, 0))
  OpenGL/Demo suite/items/GLE/helix.py glLightfv (GL_LIGHT1, GL_POSITION, (0, 0, 1, 0))
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glLightfv(GL_LIGHT0, GL_POSITION, (40.0, 40, 100.0, 0.0))
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glLightfv(GL_LIGHT1, GL_POSITION, (-40.0, 40, 100.0, 0.0))
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glLightfv (GL_LIGHT0, GL_POSITION, (0, 0, 1, 0))
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glLightfv (GL_LIGHT1, GL_POSITION, (0, 0, 1, 0))
  OpenGL/Demo tom/cone.py glLightfv(GL_LIGHT0, GL_POSITION, [1.0, 1.0, 1.0, 0.0]);
  OpenGL/Demo tom/conechecker.py glLightfv(GL_LIGHT0, GL_POSITION, [1.0, 1.0, 1.0, 0.0]);
  OpenGL/Demo tom/conesave.py glLightfv(GL_LIGHT0, GL_POSITION, [1.0, 1.0, 1.0, 0.0]);
  OpenGL/Demo tom/fog.py glLightfv(GL_LIGHT0, GL_POSITION, [0.0, 3.0, 3.0, 0.0])
GL_PROJECTION
  OpenGLContext context.py glMatrixMode(GL_PROJECTION);
  OpenGLContext renderpass.py glMatrixMode(GL_PROJECTION)
  OpenGLContext viewplatform.py glMatrixMode(GL_PROJECTION)
  OpenGLContext rendervisitor.py glMatrixMode(GL_PROJECTION)
  OpenGLContext shadow/shadowcontext.py glMatrixMode(GL_PROJECTION)
  OpenGLContext tests/gldrawpixels.py glMatrixMode(GL_PROJECTION);
  OpenGLContext tests/gldrawpixels.py glMatrixMode(GL_PROJECTION);
  OpenGLContext tests/glutbitmapcharacter.py glMatrixMode(GL_PROJECTION);
  OpenGLContext tests/glutbitmapcharacter.py glMatrixMode(GL_PROJECTION);
  OpenGLContext tests/boundingvolume.py glMatrixMode(GL_PROJECTION);
  OpenGL/Demo da/dots.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo GLE/maintest.py glMatrixMode (GL_PROJECTION)
  OpenGL/Demo GLUT/examples/molehill.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo NeHe/lesson1.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo NeHe/lesson1.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo NeHe/lesson18.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo NeHe/lesson18.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo NeHe/lesson2.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo NeHe/lesson2.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo NeHe/lesson3.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo NeHe/lesson3.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo NeHe/lesson4.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo NeHe/lesson4.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo NeHe/lesson5.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo NeHe/lesson5.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo NeHe/lesson6-multi.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo NeHe/lesson6-multi.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo NeHe/lesson6.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo NeHe/lesson6.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo redbook/cube.py glMatrixMode (GL_PROJECTION)
  OpenGL/Demo redbook/double.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo redbook/drawf.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo redbook/fog.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo redbook/hello.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo redbook/lines.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo redbook/movelight.py glMatrixMode (GL_PROJECTION)
  OpenGL/Demo redbook/scene.py glMatrixMode (GL_PROJECTION)
  OpenGL/Demo redbook/smooth.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo redbook/teapots.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo simple/GLE.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo suite/GLUT.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo twburton/knot.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo twburton/knot.py glMatrixMode(GL_PROJECTION)
  SciPy/kiva glcore2d.py glMatrixMode( GL_PROJECTION )
  SciPy/kiva tests/test_glcore2d.py glMatrixMode( GL_PROJECTION )
  (LGPL) PyUI pyui/renderers/openglBase.py glMatrixMode(GL_PROJECTION)
  (LGPL) PyUI pyui/renderers/openglBase.py glMatrixMode(GL_PROJECTION)
  (LGPL) PyUI pyui/renderers/openglGlut.py glMatrixMode(GL_PROJECTION)
  (LGPL) PyUI tests/testcube.py glMatrixMode(GL_PROJECTION)
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Restore projection
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
GL_PROJECTION_MATRIX
  OpenGLContext renderpass.py self.projection = glGetDoublev( GL_PROJECTION_MATRIX )
  OpenGLContext frustum.py projection = glGetDoublev( GL_PROJECTION_MATRIX)
  OpenGLContext tests/gldrawpixels.py matrix = glGetDouble( GL_PROJECTION_MATRIX )
  OpenGLContext tests/glutbitmapcharacter.py matrix = glGetDouble( GL_PROJECTION_MATRIX )
  OpenGLContext scenegraph/polygonsort.py projection = glGetDoublev( GL_PROJECTION_MATRIX )
  (LGPL) VisionEgg src/Core.py self.parameters.matrix = gl.glGetFloatv(gl.GL_PROJECTION_MATRIX)
  (LGPL) VisionEgg src/Core.py self.parameters.matrix = gl.glGetFloatv(gl.GL_PROJECTION_MATRIX)
  (LGPL) VisionEgg src/Core.py self.parameters.matrix = gl.glGetFloatv(gl.GL_PROJECTION_MATRIX)
  (LGPL) VisionEgg src/Core.py self.parameters.matrix = gl.glGetFloatv(gl.GL_PROJECTION_MATRIX)
  (LGPL) VisionEgg src/Core.py self.parameters.matrix = gl.glGetFloatv(gl.GL_PROJECTION_MATRIX)
  (LGPL) VisionEgg src/Core.py self.parameters.matrix = gl.glGetFloatv(gl.GL_PROJECTION_MATRIX)
  (LGPL) VisionEgg src/Core.py self.parameters.matrix = gl.glGetFloatv(gl.GL_PROJECTION_MATRIX)
  (LGPL) VisionEgg src/Core.py matrix = gl.glGetFloatv(gl.GL_PROJECTION_MATRIX)
GL_PROXY_CUBE_MAP
  (LGPL) VisionEgg src/Textures.py target = gl.GL_PROXY_CUBE_MAP
GL_PROXY_TEXTURE_1D
  (LGPL) VisionEgg src/Gratings.py gl.glTexImage1D(gl.GL_PROXY_TEXTURE_1D,            # target
  (LGPL) VisionEgg src/Gratings.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_1D,0,gl.GL_TEXTURE_WIDTH) == 0:
  (LGPL) VisionEgg src/SphereMap.py gl.glTexImage1D(gl.GL_PROXY_TEXTURE_1D,  # target
  (LGPL) VisionEgg src/SphereMap.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_1D,0,gl.GL_TEXTURE_WIDTH) == 0:
  (LGPL) VisionEgg src/Textures.py gl.glTexImage1Dub(gl.GL_PROXY_TEXTURE_1D,
  (LGPL) VisionEgg src/Textures.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_1D,mipmap_level,gl.GL_TEXTURE_WIDTH) == 0:
GL_PROXY_TEXTURE_2D
  (LGPL) VisionEgg src/SphereMap.py gl.glTexImage2D(gl.GL_PROXY_TEXTURE_2D,      # target
  (LGPL) VisionEgg src/SphereMap.py if (gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_2D,0,gl.GL_TEXTURE_WIDTH) == 0) or (gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_2D,0,gl.GL_TEXTURE_HEIGHT) == 0):
  (LGPL) VisionEgg src/SphereMap.py if (gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_2D,0,gl.GL_TEXTURE_WIDTH) == 0) or (gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_2D,0,gl.GL_TEXTURE_HEIGHT) == 0):
  (LGPL) VisionEgg src/Textures.py target = gl.GL_PROXY_TEXTURE_2D
  (LGPL) VisionEgg test/opengl_info.py glTexImage2D(GL_PROXY_TEXTURE_2D,0,GL_RGB,w,h,0,GL_RGB,GL_UNSIGNED_BYTE,data)
  (LGPL) VisionEgg test/opengl_info.py if glGetTexLevelParameteriv(GL_PROXY_TEXTURE_2D,0,GL_TEXTURE_WIDTH) != 0:
  (LGPL) VisionEgg test/opengl_info.py if glGetTexLevelParameteriv(GL_PROXY_TEXTURE_2D,0,GL_TEXTURE_HEIGHT) != 0:
GL_PROXY_TEXTURE_3D
  (LGPL) VisionEgg src/Textures.py gl.glTexImage3Dub(gl.GL_PROXY_TEXTURE_3D,
  (LGPL) VisionEgg src/Textures.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_3D,mipmap_level,gl.GL_TEXTURE_WIDTH) == 0:
  (LGPL) VisionEgg src/Textures.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_3D,mipmap_level,gl.GL_TEXTURE_HEIGHT) == 0:
  (LGPL) VisionEgg src/Textures.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_3D,mipmap_level,gl.GL_TEXTURE_DEPTH) == 0:
GL_QUADRATIC_ATTENUATION
  OpenGLContext tests/glgetlight.py (GL_QUADRATIC_ATTENUATION, "GL_QUADRATIC_ATTENUATION"),
  OpenGLContext scenegraph/light.py glLight(lightID, GL_QUADRATIC_ATTENUATION, self.attenuation[2])
  OpenGLContext scenegraph/light.py glLight(lightID, GL_QUADRATIC_ATTENUATION, self.attenuation[2])
GL_QUADS
  OpenGLContext drawcube.py glBegin(GL_QUADS);
  OpenGLContext shadow/volume.py self.sideType = GL_QUADS
  OpenGLContext shadow/volume.py if self.sideType == GL_QUADS:
  OpenGLContext tests/glinterleavedarrays.py glDrawElementsui(GL_QUADS,indices)
  OpenGLContext tests/glinterleavedarrays.py glDrawElementsui(GL_QUADS, indices)
  OpenGLContext tests/nehe6_timer.py glBegin(GL_QUADS);
  OpenGLContext tests/nehe2.py glBegin(GL_QUADS)
  OpenGLContext tests/nehe3.py glBegin(GL_QUADS)
  OpenGLContext tests/multitexture_1.py glBegin(GL_QUADS);
  OpenGLContext tests/nehe4.py glBegin(GL_QUADS)
  OpenGLContext tests/nehe5.py glBegin(GL_QUADS);
  OpenGLContext tests/nehe6.py glBegin(GL_QUADS);
  OpenGLContext tests/nehe6_multi.py glBegin(GL_QUADS);
  OpenGLContext tests/nehe7.py glBegin(GL_QUADS);
  OpenGLContext tests/nehe8.py glBegin(GL_QUADS);
  OpenGLContext tests/textureobject.py glBegin(GL_QUADS);
  OpenGLContext tests/gldrawelements_base.py GL_QUADS,
  OpenGLContext scenegraph/box.py glBegin(GL_QUADS);
  OpenGLContext scenegraph/cubebackground.py glBegin( GL_QUADS )
  OpenGLContext scenegraph/indexedpolygons.py constant = GL_QUADS
  OpenGL/Demo dek/tile.py glBegin(GL_QUADS)
  OpenGL/Demo NeHe/lesson18.py glBegin(GL_QUADS)				# Start Drawing The Cube
  OpenGL/Demo NeHe/lesson2.py glBegin(GL_QUADS)                   # Start drawing a 4 sided polygon
  OpenGL/Demo NeHe/lesson3.py glBegin(GL_QUADS)                   # Start drawing a 4 sided polygon
  OpenGL/Demo NeHe/lesson4.py glBegin(GL_QUADS)                   # Start drawing a 4 sided polygon
  OpenGL/Demo NeHe/lesson5.py glBegin(GL_QUADS);			# Start Drawing The Cube
  OpenGL/Demo NeHe/lesson6-multi.py glBegin(GL_QUADS)			    # Start Drawing The Cube
  OpenGL/Demo NeHe/lesson6.py glBegin(GL_QUADS)			    # Start Drawing The Cube
  (LGPL) PyUI pyui/renderers/openglBase.py glBegin(GL_QUADS)
  (LGPL) PyUI pyui/renderers/openglBase.py glBegin(GL_QUADS)
  (LGPL) PyUI pyui/renderers/openglBase.py glBegin(GL_QUADS)
  (LGPL) PyUI pyui/renderers/openglBase.py glBegin(GL_QUADS)
  (LGPL) PyUI pyui/renderers/openglPygame.py glBegin(GL_QUADS)
  (LGPL) PyUI tests/testcube.py glBegin(GL_QUADS)
  (LGPL) VisionEgg src/Core.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/Gratings.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/SphereMap.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/SphereMap.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/SphereMap.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/SphereMap.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/Textures.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/Textures.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/Textures.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/Textures.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/Textures.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/Textures.py gl.glBegin(gl.GL_QUADS)
GL_RED_BITS
  (LGPL) VisionEgg src/Gratings.py if gl.glGetIntegerv( gl.GL_RED_BITS ) < self.parameters.bit_depth:
  (LGPL) VisionEgg src/Gratings.py current_bit_depth = gl.glGetIntegerv( gl.GL_RED_BITS )
  (LGPL) VisionEgg test/opengl_info.py print " GL_RED_BITS =",glGetIntegerv( GL_RED_BITS )
GL_RED_SIZE
  (LGPL) VisionEgg src/Core.py pygame.display.gl_set_attribute(pygame.locals.GL_RED_SIZE,r)
  (LGPL) VisionEgg src/Core.py self.red_bits = pygame.display.gl_get_attribute(pygame.locals.GL_RED_SIZE)
GL_RENDER
  OpenGLContext renderpass.py glRenderMode( GL_RENDER )
  OpenGLContext renderpass.py nameStack = list(glRenderMode(GL_RENDER))
  OpenGLContext rendervisitor.py glRenderMode( GL_RENDER )
GL_RENDERER
  (LGPL) VisionEgg src/Core.py renderer = gl.glGetString(gl.GL_RENDERER)
  (LGPL) VisionEgg src/Core.py renderer = gl.glGetString(gl.GL_RENDERER)
  (LGPL) VisionEgg test/opengl_info.py print " GL_RENDERER =",glGetString(GL_RENDERER)
GL_REPEAT
  OpenGLContext tests/dek_texturesurf.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  OpenGLContext tests/dek_texturesurf.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  OpenGLContext scenegraph/imagetexture.py glTexParameter(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  OpenGLContext scenegraph/imagetexture.py glTexParameter(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  OpenGL/Demo dek/texturesurf.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  OpenGL/Demo dek/texturesurf.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  OpenGL/Demo dek/texturesurf2.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  OpenGL/Demo dek/texturesurf2.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  OpenGL/Demo dek/tile.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  OpenGL/Demo dek/tile.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  OpenGL/Demo NeHe/lesson18.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  OpenGL/Demo NeHe/lesson18.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  OpenGL/Demo NeHe/lesson6-multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  OpenGL/Demo NeHe/lesson6-multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  OpenGL/Demo NeHe/lesson6.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  OpenGL/Demo NeHe/lesson6.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  (LGPL) PyUI pyui/renderers/openglGlut.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  (LGPL) PyUI pyui/renderers/openglGlut.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  (LGPL) PyUI tests/testcube.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  (LGPL) PyUI tests/testcube.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_WRAP_S,gl.GL_REPEAT)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_WRAP_T,gl.GL_REPEAT)
  (LGPL) VisionEgg src/Textures.py self.wrap_mode_s = gl.GL_REPEAT
  (LGPL) VisionEgg src/Textures.py self.wrap_mode_t = gl.GL_REPEAT
  (LGPL) VisionEgg src/Textures.py self.wrap_mode_r = gl.GL_REPEAT
GL_REPLACE
  (LGPL) VisionEgg src/Lib3DS.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_REPLACE)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_REPLACE)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_REPLACE)
  (LGPL) VisionEgg src/Textures.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_REPLACE)
GL_RGB
  OpenGLContext texture.py format = GL_RGB
  OpenGLContext tests/saveimage.py data = glReadPixels(0, 0, width, height, GL_RGB, GL_UNSIGNED_BYTE)
  OpenGLContext scenegraph/imagetexture.py [0, GL_LUMINANCE, GL_LUMINANCE_ALPHA, GL_RGB, GL_RGBA ][componentCount],
  OpenGL/Demo tom/conesave.py data = glReadPixels(0, 0, width, height, GL_RGB, GL_UNSIGNED_BYTE)
  (LGPL) VisionEgg src/Core.py def get_framebuffer_as_image(self, buffer='back', format=gl.GL_RGB):
  (LGPL) VisionEgg src/Core.py if format == gl.GL_RGB:
  (LGPL) VisionEgg src/Core.py def get_framebuffer_as_array(self, buffer='back', format=gl.GL_RGB):
  (LGPL) VisionEgg src/Core.py if format == gl.GL_RGB:
  (LGPL) VisionEgg src/Core.py internal_format=gl.GL_RGB, # pixel data converted to this format in texture (gl.GL_RGBA also useful)
  (LGPL) VisionEgg src/Core.py fb_image = screen.get_framebuffer_as_image(buffer='front',format=gl.GL_RGB)
  (LGPL) VisionEgg src/Textures.py def load(self, texture_object, build_mipmaps = 1, rescale_original_to_fill_texture_object = 0, internal_format=gl.GL_RGB):
  (LGPL) VisionEgg src/Textures.py internal_format = gl.GL_RGB,
  (LGPL) VisionEgg src/Textures.py data_format = gl.GL_RGB
  (LGPL) VisionEgg src/Textures.py data_format = gl.GL_RGB
  (LGPL) VisionEgg src/Textures.py data_format = gl.GL_RGB
  (LGPL) VisionEgg src/Textures.py data_format = gl.GL_RGB
  (LGPL) VisionEgg src/Textures.py data_format = gl.GL_RGB
  (LGPL) VisionEgg src/Textures.py data_format = gl.GL_RGB
  (LGPL) VisionEgg src/Textures.py internal_format = gl.GL_RGB,
  (LGPL) VisionEgg src/Textures.py 'internal_format':(gl.GL_RGB,
  (LGPL) VisionEgg test/opengl_info.py glTexImage2D(GL_PROXY_TEXTURE_2D,0,GL_RGB,w,h,0,GL_RGB,GL_UNSIGNED_BYTE,data)
  (LGPL) VisionEgg test/opengl_info.py glTexImage2D(GL_PROXY_TEXTURE_2D,0,GL_RGB,w,h,0,GL_RGB,GL_UNSIGNED_BYTE,data)
GL_RGBA
  OpenGLContext texture.py format = GL_RGBA
  OpenGLContext tests/dek_texturesurf.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGLContext tests/gldrawpixels.py format = GL_RGBA
  OpenGLContext tests/nehe6.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGLContext tests/nehe7.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGLContext tests/nehe7.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGLContext tests/nehe7.py GL_RGBA, ix, iy, GL_RGBA, GL_UNSIGNED_BYTE, image
  OpenGLContext tests/nehe7.py GL_RGBA, ix, iy, GL_RGBA, GL_UNSIGNED_BYTE, image
  OpenGLContext tests/nehe8.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGLContext tests/nehe8.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGLContext tests/nehe8.py gluBuild2DMipmaps(GL_TEXTURE_2D, 3, ix, iy, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGLContext scenegraph/imagetexture.py [0, GL_LUMINANCE, GL_LUMINANCE_ALPHA, GL_RGB, GL_RGBA ][componentCount],
  OpenGL/Demo dek/texturesurf.py GL_RGBA, GL_UNSIGNED_BYTE, self.image)
  OpenGL/Demo dek/texturesurf2.py glTexImage2Dub(GL_TEXTURE_2D, 0, 3, 0, GL_RGBA, self.image)
  OpenGL/Demo dek/tile.py glTexImage2D(GL_TEXTURE_2D, 0, 3, self.imageWidth, self.imageHeight, 0, GL_RGBA, GL_UNSIGNED_BYTE,  self.image)
  OpenGL/Demo dek/OglSurface/OglFrame.py GL_RGBA, GL_UNSIGNED_BYTE)
  OpenGL/Demo NeHe/lesson18.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGL/Demo NeHe/lesson18.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGL/Demo NeHe/lesson18.py gluBuild2DMipmaps(GL_TEXTURE_2D, 3, ix, iy, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGL/Demo NeHe/lesson6-multi.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGL/Demo NeHe/lesson6.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  SciPy/kiva glcore2d.py glDrawPixels( dx, dy, GL_RGBA, GL_UNSIGNED_BYTE, img.tostring() )
  (LGPL) PyUI pyui/renderers/openglGlut.py glTexImage2D(GL_TEXTURE_2D, 0, seq, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexImage2D(GL_TEXTURE_2D, 0, 4, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, data)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, totalWidth, totalHeight, 0, GL_RGBA, GL_UNSIGNED_BYTE, data)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, totalWidth, totalHeight, 0, GL_RGBA, GL_UNSIGNED_BYTE, data)
  (LGPL) VisionEgg demo/alpha_texture.py internal_format = gl.GL_RGBA,
  (LGPL) VisionEgg demo/alpha_texture.py internal_format = gl.GL_RGBA,
  (LGPL) VisionEgg src/Core.py elif format == gl.GL_RGBA:
  (LGPL) VisionEgg src/Core.py elif format == gl.GL_RGBA:
  (LGPL) VisionEgg src/Text.py kw['internal_format'] = gl.GL_RGBA
  (LGPL) VisionEgg src/Textures.py data_format = gl.GL_RGBA
  (LGPL) VisionEgg src/Textures.py data_format = gl.GL_RGBA
  (LGPL) VisionEgg src/Textures.py data_format = gl.GL_RGBA
  (LGPL) VisionEgg src/Textures.py data_format = gl.GL_RGBA
  (LGPL) VisionEgg src/Textures.py data_format = gl.GL_RGBA
  (LGPL) VisionEgg src/Textures.py data_format = gl.GL_RGBA
  (LGPL) VisionEgg src/Textures.py internal_format = gl.GL_RGBA,
GL_RGBA_MODE
  (LGPL) VisionEgg test/opengl_info.py print " GL_RGBA_MODE =",glGetBooleanv( GL_RGBA_MODE )
GL_SCISSOR_TEST
  SciPy/kiva glcore2d.py glEnable( GL_SCISSOR_TEST )
  SciPy/kiva glcore2d.py glDisable( GL_SCISSOR_TEST )
  (LGPL) PyUI pyui/renderers/openglBase.py glEnable(GL_SCISSOR_TEST)
  (LGPL) PyUI pyui/renderers/openglBase.py glDisable(GL_SCISSOR_TEST)
  (LGPL) PyUI pyui/renderers/openglBase.py glEnable(GL_SCISSOR_TEST)
GL_SELECT
  OpenGLContext renderpass.py glRenderMode(GL_SELECT)
GL_SHININESS
  OpenGLContext tests/glgetmaterial.py (GL_SHININESS, "GL_SHININESS"),
  OpenGLContext tests/redbook_alpha3D.py glMaterialfv(GL_FRONT, GL_SHININESS, (100.0, ) );
  OpenGLContext tests/redbook_surface.py glMaterialfv(GL_FRONT, GL_SHININESS, [100.0]);
  OpenGLContext tests/redbook_trim.py glMaterialfv(GL_FRONT, GL_SHININESS, [100.0]);
  OpenGLContext tests/redbook_surface_cb.py glMaterialfv(GL_FRONT, GL_SHININESS, [100.0]);
  OpenGLContext scenegraph/material.py glMaterial( self.faces[0], GL_SHININESS, self.shininess * 128)
  OpenGL/Demo GLUT/examples/molehill.py glMaterialfv(GL_FRONT, GL_SHININESS, mat_shininess)
  OpenGL/Demo redbook/fog.py glMaterialf(GL_FRONT, GL_SHININESS, 0.6*128.0)
  OpenGL/Demo redbook/teapots.py glMaterialf(GL_FRONT, GL_SHININESS, shine * 128.0)
  OpenGL/Demo tom/cone.py glMaterialfv(GL_FRONT, GL_SHININESS, 50.0)
  OpenGL/Demo tom/conechecker.py glMaterialfv(GL_FRONT, GL_SHININESS, 50.0)
  OpenGL/Demo tom/conesave.py glMaterialfv(GL_FRONT, GL_SHININESS, 50.0)
  OpenGL/Demo tom/fog.py glMaterialfv(GL_FRONT, GL_SHININESS, 0.6 * 128.0)
  OpenGL/Demo twburton/knot.py glMaterialf(GL_FRONT_AND_BACK, GL_SHININESS, 50)
GL_SHORT
  (LGPL) VisionEgg src/Gratings.py self.gl_type = gl.GL_SHORT
  (LGPL) VisionEgg src/Gratings.py self.gl_type = gl.GL_SHORT
GL_SMOOTH
  OpenGL/Demo GLE/maintest.py glShadeModel (GL_SMOOTH)
  OpenGL/Demo NeHe/lesson1.py glShadeModel(GL_SMOOTH)				# Enables Smooth Color Shading
  OpenGL/Demo NeHe/lesson18.py glShadeModel(GL_SMOOTH)				# Enables Smooth Color Shading
  OpenGL/Demo NeHe/lesson2.py glShadeModel(GL_SMOOTH)				# Enables Smooth Color Shading
  OpenGL/Demo NeHe/lesson3.py glShadeModel(GL_SMOOTH)				# Enables Smooth Color Shading
  OpenGL/Demo NeHe/lesson4.py glShadeModel(GL_SMOOTH)				# Enables Smooth Color Shading
  OpenGL/Demo NeHe/lesson5.py glShadeModel(GL_SMOOTH)				# Enables Smooth Color Shading
  OpenGL/Demo NeHe/lesson6-multi.py glShadeModel(GL_SMOOTH)				# Enables Smooth Color Shading
  OpenGL/Demo NeHe/lesson6.py glShadeModel(GL_SMOOTH)				# Enables Smooth Color Shading
  OpenGL/Demo redbook/movelight.py glShadeModel (GL_SMOOTH)
  OpenGL/Demo redbook/smooth.py glShadeModel(GL_SMOOTH)
  OpenGL/Demo simple/GLE.py glShadeModel(GL_SMOOTH)
  OpenGL/Demo twburton/knot.py glShadeModel(GL_SMOOTH)
  OpenGL/Demo twburton/knot.py glShadeModel(GL_SMOOTH)
  (LGPL) PyUI tests/testcube.py glShadeModel(GL_SMOOTH)
GL_SPECULAR
  OpenGLContext tests/glgetlight.py (GL_SPECULAR, "GL_SPECULAR"),
  OpenGLContext tests/glgetmaterial.py (GL_SPECULAR, "GL_SPECULAR"),
  OpenGLContext tests/redbook_alpha3D.py glMaterialfv(GL_FRONT, GL_SPECULAR, (1.0, 1.0, 1.0, 0.15) );
  OpenGLContext tests/redbook_surface.py glMaterialfv(GL_FRONT, GL_SPECULAR, [1.0, 1.0, 1.0, 1.0]);
  OpenGLContext tests/redbook_trim.py glMaterialfv(GL_FRONT, GL_SPECULAR, [1.0, 1.0, 1.0, 1.0]);
  OpenGLContext tests/redbook_surface_cb.py glMaterialfv(GL_FRONT, GL_SPECULAR, [1.0, 1.0, 1.0, 1.0]);
  OpenGLContext scenegraph/material.py datamap = (GL_DIFFUSE, GL_EMISSION, GL_SPECULAR, GL_AMBIENT)
  OpenGL/Demo GLUT/examples/molehill.py glMaterialfv(GL_FRONT, GL_SPECULAR, mat_specular)
  OpenGL/Demo redbook/fog.py glMaterialfv(GL_FRONT, GL_SPECULAR, mat)
  OpenGL/Demo redbook/scene.py glLightfv(GL_LIGHT0, GL_SPECULAR, light_specular)
  OpenGL/Demo redbook/teapots.py glMaterialfv(GL_FRONT, GL_SPECULAR, mat)
  OpenGL/Demo tom/cone.py glMaterialfv(GL_FRONT, GL_SPECULAR, [1.0, 0.0, 1.0, 1.0])
  OpenGL/Demo tom/cone.py glLightfv(GL_LIGHT0, GL_SPECULAR, [1.0, 1.0, 1.0, 1.0])
  OpenGL/Demo tom/conechecker.py glMaterialfv(GL_FRONT, GL_SPECULAR, [1.0, 0.0, 1.0, 1.0])
  OpenGL/Demo tom/conechecker.py glLightfv(GL_LIGHT0, GL_SPECULAR, [1.0, 1.0, 1.0, 1.0])
  OpenGL/Demo tom/conesave.py glMaterialfv(GL_FRONT, GL_SPECULAR, [1.0, 0.0, 1.0, 1.0])
  OpenGL/Demo tom/conesave.py glLightfv(GL_LIGHT0, GL_SPECULAR, [1.0, 1.0, 1.0, 1.0])
  OpenGL/Demo tom/fog.py glMaterialfv(GL_FRONT, GL_SPECULAR, [0.727811, 0.626959, 0.626959, 1.0])
  OpenGL/Demo twburton/knot.py glMaterialfv(GL_FRONT_AND_BACK, GL_SPECULAR, ( 1.0, 1.0, 1.0, 1.0 ))
GL_SPOT_CUTOFF
  OpenGLContext tests/glgetlight.py (GL_SPOT_CUTOFF,"GL_SPOT_CUTOFF"),
  OpenGLContext scenegraph/light.py glLight(lightID, GL_SPOT_CUTOFF, self.cutOffAngle* (180/pi))
GL_SPOT_DIRECTION
  OpenGLContext tests/glgetlight.py (GL_SPOT_DIRECTION, "GL_SPOT_DIRECTION"),
  OpenGLContext scenegraph/light.py glLight(lightID, GL_SPOT_DIRECTION, self.direction)
GL_SPOT_EXPONENT
  OpenGLContext tests/glgetlight.py (GL_SPOT_EXPONENT,"GL_SPOT_EXPONENT"),
GL_SRC_ALPHA
  OpenGLContext renderpass.py glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA)
  OpenGLContext tests/nehe8.py (GL_SRC_ALPHA, GL_ONE), # what the demo uses originally
  OpenGLContext tests/nehe8.py (GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA), # this is what should be used with sorted triangles
  OpenGLContext tests/nehe8.py (GL_SRC_ALPHA, GL_DST_ALPHA), # just for kicks...
  OpenGLContext tests/redbook_alpha.py glBlendFunc (GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
  OpenGLContext tests/redbook_alpha3D.py glBlendFunc (GL_SRC_ALPHA, GL_ONE); # note assumption that background is black...
  OpenGLContext scenegraph/imagetexture.py glBlendFunc (GL_SRC_ALPHA,GL_ONE_MINUS_SRC_ALPHA)
  OpenGL/Demo dek/OglSurface/OglFrame.py glBlendFunc(GL_SRC_ALPHA,  GL_ONE_MINUS_SRC_ALPHA);
  SciPy/kiva glcore2d.py glBlendFunc( GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA )
  SciPy/kiva glcore2d.py glBlendFunc( GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA )
  (LGPL) PyUI pyui/renderers/openglBase.py glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA)
  (LGPL) VisionEgg src/Dots.py gl.glBlendFunc( gl.GL_SRC_ALPHA, gl.GL_ONE_MINUS_SRC_ALPHA )
  (LGPL) VisionEgg src/Gratings.py gl.glBlendFunc( gl.GL_SRC_ALPHA, gl.GL_ONE_MINUS_SRC_ALPHA )
  (LGPL) VisionEgg src/MoreStimuli.py gl.glBlendFunc(gl.GL_SRC_ALPHA,gl.GL_ONE_MINUS_SRC_ALPHA)
  (LGPL) VisionEgg src/SphereMap.py gl.glBlendFunc( gl.GL_SRC_ALPHA, gl.GL_ONE_MINUS_SRC_ALPHA )
  (LGPL) VisionEgg src/SphereMap.py gl.glBlendFunc( gl.GL_ONE_MINUS_SRC_ALPHA, gl.GL_SRC_ALPHA ) # alpha 1.0 = transparent
  (LGPL) VisionEgg src/Text.py gl.glBlendFunc(gl.GL_SRC_ALPHA,gl.GL_ONE_MINUS_SRC_ALPHA)
  (LGPL) VisionEgg src/Textures.py gl.glBlendFunc( gl.GL_SRC_ALPHA, gl.GL_ONE_MINUS_SRC_ALPHA )
  (LGPL) VisionEgg src/Textures.py gl.glBlendFunc( gl.GL_SRC_ALPHA, gl.GL_ONE_MINUS_SRC_ALPHA )
GL_STENCIL_BUFFER_BIT
  OpenGLContext shadow/passes.py glClear(GL_STENCIL_BUFFER_BIT);
  OpenGLContext scenegraph/cubebackground.py glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT|GL_STENCIL_BUFFER_BIT)
  OpenGLContext scenegraph/spherebackground.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT | GL_STENCIL_BUFFER_BIT);
GL_STENCIL_INDEX
  OpenGLContext debug/bufferimage.py data = glReadPixels(0, 0, width, height, GL_STENCIL_INDEX, GL_UNSIGNED_BYTE)
GL_STENCIL_TEST
  OpenGLContext shadow/passes.py glDisable(GL_STENCIL_TEST);
  OpenGLContext shadow/passes.py glDisable(GL_STENCIL_TEST);
  OpenGLContext shadow/passes.py glEnable(GL_STENCIL_TEST);
GL_STEREO
  (LGPL) VisionEgg test/opengl_info.py print " GL_STEREO = ",glGetBooleanv( GL_STEREO )
GL_TEXTURE
  OpenGLContext scenegraph/texturetransform.py glMatrixMode( GL_TEXTURE )
  OpenGLContext scenegraph/texturetransform.py glMatrixMode( GL_TEXTURE )
GL_TEXTURE0_ARB
  OpenGLContext tests/multitexture_1.py glActiveTextureARB(GL_TEXTURE0_ARB);
  OpenGLContext tests/multitexture_1.py glActiveTextureARB(GL_TEXTURE0_ARB);
  OpenGLContext tests/multitexture_1.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, a,b)
  OpenGLContext tests/nehe6_multi.py glActiveTextureARB(GL_TEXTURE0_ARB);
  OpenGLContext tests/nehe6_multi.py glActiveTextureARB(GL_TEXTURE0_ARB);
  OpenGLContext tests/nehe6_multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, a,b)
  OpenGL/Demo NeHe/lesson6-multi.py glActiveTextureARB(GL_TEXTURE0_ARB)
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 0.0); glVertex3f(-1.0, -1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 0.0); glVertex3f( 1.0, -1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 1.0); glVertex3f( 1.0,  1.0,  1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 1.0); glVertex3f(-1.0,  1.0,  1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 0.0); glVertex3f(-1.0, -1.0, -1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 1.0); glVertex3f(-1.0,  1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 1.0); glVertex3f( 1.0,  1.0, -1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 0.0); glVertex3f( 1.0, -1.0, -1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 0.0); glVertex3f(-1.0,  1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 0.0); glVertex3f( 1.0,  1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 1.0); glVertex3f(-1.0, -1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 1.0); glVertex3f( 1.0, -1.0, -1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 0.0); glVertex3f( 1.0, -1.0, -1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 1.0); glVertex3f( 1.0,  1.0,  1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 0.0); glVertex3f(-1.0, -1.0, -1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 1.0); glVertex3f(-1.0,  1.0,  1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0)	# Top Left Of The Texture and Quad
  (LGPL) VisionEgg src/Gratings.py gl.glActiveTextureARB(gl.GL_TEXTURE0_ARB)
  (LGPL) VisionEgg src/Gratings.py gl.glActiveTextureARB(gl.GL_TEXTURE0_ARB)
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(gl.GL_TEXTURE0_ARB)
  (LGPL) VisionEgg src/Textures.py gl.glMultiTexCoord2fARB(gl.GL_TEXTURE0_ARB,lt,bt)
  (LGPL) VisionEgg src/Textures.py gl.glMultiTexCoord2fARB(gl.GL_TEXTURE0_ARB,rt,bt)
  (LGPL) VisionEgg src/Textures.py gl.glMultiTexCoord2fARB(gl.GL_TEXTURE0_ARB,rt,tt)
  (LGPL) VisionEgg src/Textures.py gl.glMultiTexCoord2fARB(gl.GL_TEXTURE0_ARB,lt,tt)
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(gl.GL_TEXTURE0_ARB) # return to 1st texture unit
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(gl.GL_TEXTURE0_ARB)
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(gl.GL_TEXTURE0_ARB)
GL_TEXTURE1_ARB
  OpenGLContext tests/multitexture_1.py glActiveTextureARB(GL_TEXTURE1_ARB);
  OpenGLContext tests/multitexture_1.py glActiveTextureARB(GL_TEXTURE1_ARB);
  OpenGLContext tests/multitexture_1.py glMultiTexCoord2fARB(GL_TEXTURE1_ARB, a,b)
  OpenGLContext tests/nehe6_multi.py glActiveTextureARB(GL_TEXTURE1_ARB);
  OpenGLContext tests/nehe6_multi.py glActiveTextureARB(GL_TEXTURE1_ARB);
  OpenGLContext tests/nehe6_multi.py glMultiTexCoord2fARB(GL_TEXTURE1_ARB, a,b)
  OpenGL/Demo NeHe/lesson6-multi.py glActiveTextureARB(GL_TEXTURE1_ARB)
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 0.0); glVertex3f(-1.0, -1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 0.0); glVertex3f( 1.0, -1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 1.0); glVertex3f( 1.0,  1.0,  1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 1.0); glVertex3f(-1.0,  1.0,  1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 0.0); glVertex3f(-1.0, -1.0, -1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 1.0); glVertex3f(-1.0,  1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 1.0); glVertex3f( 1.0,  1.0, -1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 0.0); glVertex3f( 1.0, -1.0, -1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 0.0); glVertex3f(-1.0,  1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 0.0); glVertex3f( 1.0,  1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 1.0); glVertex3f(-1.0, -1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 1.0); glVertex3f( 1.0, -1.0, -1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 0.0); glVertex3f( 1.0, -1.0, -1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 1.0); glVertex3f( 1.0,  1.0,  1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 0.0); glVertex3f(-1.0, -1.0, -1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 1.0); glVertex3f(-1.0,  1.0,  1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0)	# Top Left Of The Texture and Quad
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(gl.GL_TEXTURE1_ARB) # bind 2nd texture unit to mask texture
  (LGPL) VisionEgg src/Textures.py gl.glMultiTexCoord2fARB(gl.GL_TEXTURE1_ARB,0.0,0.0)
  (LGPL) VisionEgg src/Textures.py gl.glMultiTexCoord2fARB(gl.GL_TEXTURE1_ARB,1.0,0.0)
  (LGPL) VisionEgg src/Textures.py gl.glMultiTexCoord2fARB(gl.GL_TEXTURE1_ARB,1.0,1.0)
  (LGPL) VisionEgg src/Textures.py gl.glMultiTexCoord2fARB(gl.GL_TEXTURE1_ARB,0.0,1.0)
GL_TEXTURE_1D
  (LGPL) VisionEgg src/Gratings.py gl.glBindTexture(gl.GL_TEXTURE_1D,self._texture_object_id)
  (LGPL) VisionEgg src/Gratings.py gl.glTexImage1D(gl.GL_TEXTURE_1D,                  # target
  (LGPL) VisionEgg src/Gratings.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_WRAP_S,gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/Gratings.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_WRAP_T,gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/Gratings.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MAG_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/Gratings.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MIN_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/Gratings.py gl.glBindTexture(gl.GL_TEXTURE_1D,self._texture_object_id)
  (LGPL) VisionEgg src/Gratings.py gl.glEnable(gl.GL_TEXTURE_1D)
  (LGPL) VisionEgg src/Gratings.py gl.glTexSubImage1D(gl.GL_TEXTURE_1D, # target
  (LGPL) VisionEgg src/Gratings.py gl.glDisable(gl.GL_TEXTURE_1D)
  (LGPL) VisionEgg src/SphereMap.py gl.glBindTexture(gl.GL_TEXTURE_1D,self.texture_object_id)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexImage1D(gl.GL_TEXTURE_1D,        # target
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_WRAP_S,gl.GL_REPEAT)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_WRAP_T,gl.GL_REPEAT)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MAG_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MIN_FILTER,p.min_filter)
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_TEXTURE_1D )  # Make sure textures are drawn
  (LGPL) VisionEgg src/SphereMap.py gl.glBindTexture(gl.GL_TEXTURE_1D,self.texture_object_id)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MIN_FILTER,p.min_filter)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexSubImage1D(gl.GL_TEXTURE_1D,           # target
  (LGPL) VisionEgg src/SphereMap.py gl.glDisable( gl.GL_TEXTURE_1D )
  (LGPL) VisionEgg src/Textures.py self.target = gl.GL_TEXTURE_1D
  (LGPL) VisionEgg src/Textures.py gl.glTexImage1Dub(gl.GL_TEXTURE_1D,
  (LGPL) VisionEgg src/Textures.py gl.glTexSubImage1D(gl.GL_TEXTURE_1D,
  (LGPL) VisionEgg src/Textures.py gl.glCopyTexImage1D(gl.GL_TEXTURE_1D,
GL_TEXTURE_2D
  OpenGLContext texture.py glBindTexture(GL_TEXTURE_2D, self.texture)
  OpenGLContext texture.py GL_TEXTURE_2D, 0, components, x, y, 0, format, GL_UNSIGNED_BYTE, image
  OpenGLContext texture.py glBindTexture(GL_TEXTURE_2D, self.texture)
  OpenGLContext texture.py glEnable(GL_TEXTURE_2D)
  OpenGLContext texture.py glBindTexture(GL_TEXTURE_2D, self.texture)
  OpenGLContext texture.py GL_TEXTURE_2D, components, x, y, format, GL_UNSIGNED_BYTE, image,
  OpenGLContext tests/dek_texturesurf.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  OpenGLContext tests/dek_texturesurf.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  OpenGLContext tests/dek_texturesurf.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/dek_texturesurf.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext tests/dek_texturesurf.py glEnable(GL_TEXTURE_2D)
  OpenGLContext tests/dek_texturesurf.py glBindTexture(GL_TEXTURE_2D, self.imageID)   # 2d texture (x and y size)
  OpenGLContext tests/dek_texturesurf.py glBindTexture(GL_TEXTURE_2D, ID)
  OpenGLContext tests/dek_texturesurf.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGLContext tests/nehe6_timer.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe6_timer.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext tests/multitexture_1.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/multitexture_1.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext tests/multitexture_1.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/multitexture_1.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe6.py glBindTexture(GL_TEXTURE_2D, ID)
  OpenGLContext tests/nehe6.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGLContext tests/nehe6.py glEnable(GL_TEXTURE_2D)
  OpenGLContext tests/nehe6.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe6.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe6.py glBindTexture(GL_TEXTURE_2D, self.imageID)   # 2d texture (x and y size)
  OpenGLContext tests/nehe6_multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe6_multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe6_multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe6_multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe7.py glBindTexture(GL_TEXTURE_2D, ID)
  OpenGLContext tests/nehe7.py glTexParameteri( GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe7.py glTexParameteri( GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe7.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGLContext tests/nehe7.py glBindTexture(GL_TEXTURE_2D, ID)
  OpenGLContext tests/nehe7.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR)
  OpenGLContext tests/nehe7.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR)
  OpenGLContext tests/nehe7.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGLContext tests/nehe7.py glBindTexture(GL_TEXTURE_2D, ID)
  OpenGLContext tests/nehe7.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR)
  OpenGLContext tests/nehe7.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_NEAREST)
  OpenGLContext tests/nehe7.py GL_TEXTURE_2D,
  OpenGLContext tests/nehe7.py glEnable(GL_TEXTURE_2D)
  OpenGLContext tests/nehe7.py glBindTexture(GL_TEXTURE_2D, self.imageIDs[self.currentFilter])
  OpenGLContext tests/nehe8.py glEnable(GL_TEXTURE_2D)
  OpenGLContext tests/nehe8.py glBindTexture(GL_TEXTURE_2D, self.imageIDs[self.currentFilter])   # 2d texture (x and y size)
  OpenGLContext tests/nehe8.py glDisable(GL_TEXTURE_2D)
  OpenGLContext tests/nehe8.py glBindTexture(GL_TEXTURE_2D, ID)
  OpenGLContext tests/nehe8.py glTexParameteri( GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe8.py glTexParameteri( GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe8.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGLContext tests/nehe8.py glBindTexture(GL_TEXTURE_2D, ID)
  OpenGLContext tests/nehe8.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR)
  OpenGLContext tests/nehe8.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR)
  OpenGLContext tests/nehe8.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGLContext tests/nehe8.py glBindTexture(GL_TEXTURE_2D, ID)
  OpenGLContext tests/nehe8.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR)
  OpenGLContext tests/nehe8.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_NEAREST)
  OpenGLContext tests/nehe8.py gluBuild2DMipmaps(GL_TEXTURE_2D, 3, ix, iy, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGLContext tests/transparentsorted.py glDisable(GL_TEXTURE_2D)
  OpenGLContext scenegraph/imagetexture.py glTexParameter(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  OpenGLContext scenegraph/imagetexture.py glTexParameter(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP)
  OpenGLContext scenegraph/imagetexture.py glTexParameter(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  OpenGLContext scenegraph/imagetexture.py glTexParameter(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP)
  OpenGLContext scenegraph/imagetexture.py glTexParameter( GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, self.magFilter )
  OpenGLContext scenegraph/imagetexture.py glTexParameter( GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, self.minFilter )
  OpenGLContext scenegraph/imagetexture.py glDisable( GL_TEXTURE_2D )
  OpenGLContext scenegraph/imagetexture.py if glGetBoolean( GL_TEXTURE_2D ):
  OpenGL/Demo dek/texturesurf.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  OpenGL/Demo dek/texturesurf.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  OpenGL/Demo dek/texturesurf.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGL/Demo dek/texturesurf.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGL/Demo dek/texturesurf.py glTexImage2D(GL_TEXTURE_2D, 0, 3, self.imageWidth, self.imageHeight, 0,
  OpenGL/Demo dek/texturesurf.py glEnable(GL_TEXTURE_2D)
  OpenGL/Demo dek/texturesurf2.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  OpenGL/Demo dek/texturesurf2.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  OpenGL/Demo dek/texturesurf2.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGL/Demo dek/texturesurf2.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGL/Demo dek/texturesurf2.py glTexImage2Dub(GL_TEXTURE_2D, 0, 3, 0, GL_RGBA, self.image)
  OpenGL/Demo dek/texturesurf2.py glEnable(GL_TEXTURE_2D)
  OpenGL/Demo dek/tile.py glTexImage2D(GL_TEXTURE_2D, 0, 3, self.imageWidth, self.imageHeight, 0, GL_RGBA, GL_UNSIGNED_BYTE,  self.image)
  OpenGL/Demo dek/tile.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  OpenGL/Demo dek/tile.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  OpenGL/Demo dek/tile.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGL/Demo dek/tile.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGL/Demo dek/tile.py glEnable(GL_TEXTURE_2D)
  OpenGL/Demo NeHe/lesson18.py glBindTexture(GL_TEXTURE_2D, textures[0])   # 2d texture (x and y size)
  OpenGL/Demo NeHe/lesson18.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGL/Demo NeHe/lesson18.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP)
  OpenGL/Demo NeHe/lesson18.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP)
  OpenGL/Demo NeHe/lesson18.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  OpenGL/Demo NeHe/lesson18.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  OpenGL/Demo NeHe/lesson18.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGL/Demo NeHe/lesson18.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGL/Demo NeHe/lesson18.py glBindTexture(GL_TEXTURE_2D, textures[1])
  OpenGL/Demo NeHe/lesson18.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR)
  OpenGL/Demo NeHe/lesson18.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR)
  OpenGL/Demo NeHe/lesson18.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGL/Demo NeHe/lesson18.py glBindTexture(GL_TEXTURE_2D, textures[2])
  OpenGL/Demo NeHe/lesson18.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR)
  OpenGL/Demo NeHe/lesson18.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_NEAREST)
  OpenGL/Demo NeHe/lesson18.py gluBuild2DMipmaps(GL_TEXTURE_2D, 3, ix, iy, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGL/Demo NeHe/lesson18.py glEnable(GL_TEXTURE_2D)
  OpenGL/Demo NeHe/lesson18.py glBindTexture(GL_TEXTURE_2D, textures[texture_num])
  OpenGL/Demo NeHe/lesson6-multi.py glBindTexture(GL_TEXTURE_2D, id)   # 2d texture (x and y size)
  OpenGL/Demo NeHe/lesson6-multi.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGL/Demo NeHe/lesson6-multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP)
  OpenGL/Demo NeHe/lesson6-multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP)
  OpenGL/Demo NeHe/lesson6-multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  OpenGL/Demo NeHe/lesson6-multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  OpenGL/Demo NeHe/lesson6-multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGL/Demo NeHe/lesson6-multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGL/Demo NeHe/lesson6-multi.py glEnable(GL_TEXTURE_2D)
  OpenGL/Demo NeHe/lesson6-multi.py glEnable(GL_TEXTURE_2D)
  OpenGL/Demo NeHe/lesson6.py glBindTexture(GL_TEXTURE_2D, glGenTextures(1))   # 2d texture (x and y size)
  OpenGL/Demo NeHe/lesson6.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGL/Demo NeHe/lesson6.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP)
  OpenGL/Demo NeHe/lesson6.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP)
  OpenGL/Demo NeHe/lesson6.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  OpenGL/Demo NeHe/lesson6.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  OpenGL/Demo NeHe/lesson6.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGL/Demo NeHe/lesson6.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGL/Demo NeHe/lesson6.py glEnable(GL_TEXTURE_2D)
  (LGPL) PyUI pyui/renderers/openglBase.py glDisable(GL_TEXTURE_2D)
  (LGPL) PyUI pyui/renderers/openglBase.py glEnable(GL_TEXTURE_2D)
  (LGPL) PyUI pyui/renderers/openglBase.py glBindTexture( GL_TEXTURE_2D, texture)
  (LGPL) PyUI pyui/renderers/openglBase.py glDisable(GL_TEXTURE_2D)
  (LGPL) PyUI pyui/renderers/openglBase.py glEnable(GL_TEXTURE_2D)
  (LGPL) PyUI pyui/renderers/openglBase.py glBindTexture( GL_TEXTURE_2D, texture)
  (LGPL) PyUI pyui/renderers/openglBase.py glDisable(GL_TEXTURE_2D)
  (LGPL) PyUI pyui/renderers/openglGlut.py glBindTexture(GL_TEXTURE_2D, texture)   # 2d texture (x and y size)
  (LGPL) PyUI pyui/renderers/openglGlut.py glTexImage2D(GL_TEXTURE_2D, 0, seq, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  (LGPL) PyUI pyui/renderers/openglGlut.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  (LGPL) PyUI pyui/renderers/openglGlut.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  (LGPL) PyUI pyui/renderers/openglGlut.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  (LGPL) PyUI pyui/renderers/openglGlut.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  (LGPL) PyUI pyui/renderers/openglPygame.py glBindTexture(GL_TEXTURE_2D, texture)   # 2d texture (x and y size)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexImage2D(GL_TEXTURE_2D, 0, 4, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, data)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  (LGPL) PyUI pyui/renderers/openglPygame.py glBindTexture(GL_TEXTURE_2D, self.texture)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, totalWidth, totalHeight, 0, GL_RGBA, GL_UNSIGNED_BYTE, data)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  (LGPL) PyUI pyui/renderers/openglPygame.py glEnable(GL_TEXTURE_2D)
  (LGPL) PyUI pyui/renderers/openglPygame.py glBindTexture(GL_TEXTURE_2D, self.texture)
  (LGPL) PyUI pyui/renderers/openglPygame.py glDisable(GL_TEXTURE_2D)
  (LGPL) PyUI tests/testcube.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  (LGPL) PyUI tests/testcube.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  (LGPL) PyUI tests/testcube.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  (LGPL) PyUI tests/testcube.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  (LGPL) VisionEgg src/Core.py gl.glDisable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/Dots.py gl.glDisable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/Gratings.py gl.glDisable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glDisable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glDisable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_TEXTURE_2D )  # Make sure textures are drawn
  (LGPL) VisionEgg src/SphereMap.py gl.glDisable( gl.GL_TEXTURE_2D )
  (LGPL) VisionEgg src/SphereMap.py gl.glBindTexture(gl.GL_TEXTURE_2D,self.texture_object_id)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexImage2D(gl.GL_TEXTURE_2D,      # target
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_2D,gl.GL_TEXTURE_WRAP_S,gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_2D,gl.GL_TEXTURE_WRAP_T,gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_2D,gl.GL_TEXTURE_MAG_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_2D,gl.GL_TEXTURE_MIN_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_TEXTURE_2D )
  (LGPL) VisionEgg src/SphereMap.py gl.glBindTexture(gl.GL_TEXTURE_2D,self.texture_object_id)
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_TEXTURE_2D )
  (LGPL) VisionEgg src/Text.py gl.glDisable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/Text.py gl.glDisable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/Text.py gl.glDisable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/Textures.py self.target = gl.GL_TEXTURE_2D
  (LGPL) VisionEgg src/Textures.py target = gl.GL_TEXTURE_2D
  (LGPL) VisionEgg src/Textures.py target = gl.GL_TEXTURE_2D
  (LGPL) VisionEgg src/Textures.py target = gl.GL_TEXTURE_2D
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture(gl.GL_TEXTURE_2D, self.texture_object.gl_id)
  (LGPL) VisionEgg src/Textures.py gl.glEnable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/Textures.py gl.glDisable(gl.GL_TEXTURE_2D) # turn off texturing in this texture unit
  (LGPL) VisionEgg src/Textures.py gl.glEnable( gl.GL_TEXTURE_2D )
  (LGPL) VisionEgg src/Textures.py gl.glEnable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture(gl.GL_TEXTURE_2D,self.texture_object)
  (LGPL) VisionEgg src/Textures.py gl.glEnable( gl.GL_TEXTURE_2D )  # Make sure textures are drawn
GL_TEXTURE_3D
  (LGPL) VisionEgg src/Textures.py self.target = gl.GL_TEXTURE_3D
  (LGPL) VisionEgg src/Textures.py gl.glTexImage3Dub(gl.GL_TEXTURE_3D,
GL_TEXTURE_BORDER_COLOR
  (LGPL) VisionEgg src/Textures.py gl.glTexParameteriv( self.target, gl.GL_TEXTURE_BORDER_COLOR, border_color)
GL_TEXTURE_COORD_ARRAY
  OpenGLContext scenegraph/arraygeometry.py glEnableClientState( GL_TEXTURE_COORD_ARRAY )
  OpenGLContext scenegraph/arraygeometry.py glDisableClientState( GL_TEXTURE_COORD_ARRAY )
  OpenGLContext scenegraph/indexedpolygons.py glDisableClientState( GL_TEXTURE_COORD_ARRAY )
  OpenGLContext scenegraph/indexedpolygons.py glEnableClientState( GL_TEXTURE_COORD_ARRAY )
GL_TEXTURE_CUBE
  (LGPL) VisionEgg src/Textures.py self.target = gl.GL_TEXTURE_CUBE
GL_TEXTURE_DEPTH
  (LGPL) VisionEgg src/Textures.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_3D,mipmap_level,gl.GL_TEXTURE_DEPTH) == 0:
GL_TEXTURE_ENV
  OpenGLContext tests/dek_texturesurf.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGLContext tests/nehe6_timer.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGLContext tests/multitexture_1.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE)
  OpenGLContext tests/multitexture_1.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGLContext tests/nehe6.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGLContext tests/nehe6_multi.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGLContext tests/nehe6_multi.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE)
  OpenGL/Demo dek/texturesurf.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGL/Demo dek/texturesurf2.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGL/Demo dek/tile.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGL/Demo NeHe/lesson18.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGL/Demo NeHe/lesson6-multi.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGL/Demo NeHe/lesson6-multi.py glTexEnvi(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_BLEND)
  OpenGL/Demo NeHe/lesson6-multi.py glTexEnvfv(GL_TEXTURE_ENV, GL_TEXTURE_ENV_COLOR, (p, p, p, 1))
  OpenGL/Demo NeHe/lesson6.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  (LGPL) PyUI pyui/renderers/openglGlut.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE)
  (LGPL) PyUI tests/testcube.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  (LGPL) VisionEgg src/Gratings.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_BLEND)
  (LGPL) VisionEgg src/Gratings.py gl.glTexEnvfv(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_COLOR, p.color2)
  (LGPL) VisionEgg src/Gratings.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_MODULATE)
  (LGPL) VisionEgg src/Lib3DS.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_REPLACE)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_DECAL)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_REPLACE)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_REPLACE)
  (LGPL) VisionEgg src/Textures.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_MODULATE)
  (LGPL) VisionEgg src/Textures.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_MODULATE)
  (LGPL) VisionEgg src/Textures.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_REPLACE)
  (LGPL) VisionEgg src/Textures.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_DECAL)
GL_TEXTURE_ENV_COLOR
  OpenGL/Demo NeHe/lesson6-multi.py glTexEnvfv(GL_TEXTURE_ENV, GL_TEXTURE_ENV_COLOR, (p, p, p, 1))
  (LGPL) VisionEgg src/Gratings.py gl.glTexEnvfv(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_COLOR, p.color2)
GL_TEXTURE_ENV_MODE
  OpenGLContext tests/dek_texturesurf.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGLContext tests/nehe6_timer.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGLContext tests/multitexture_1.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE)
  OpenGLContext tests/multitexture_1.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGLContext tests/nehe6.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGLContext tests/nehe6_multi.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGLContext tests/nehe6_multi.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE)
  OpenGL/Demo dek/texturesurf.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGL/Demo dek/texturesurf2.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGL/Demo dek/tile.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGL/Demo NeHe/lesson18.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGL/Demo NeHe/lesson6-multi.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGL/Demo NeHe/lesson6-multi.py glTexEnvi(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_BLEND)
  OpenGL/Demo NeHe/lesson6.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  (LGPL) PyUI pyui/renderers/openglGlut.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE)
  (LGPL) PyUI tests/testcube.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  (LGPL) VisionEgg src/Gratings.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_BLEND)
  (LGPL) VisionEgg src/Gratings.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_MODULATE)
  (LGPL) VisionEgg src/Lib3DS.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_REPLACE)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_DECAL)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_REPLACE)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_REPLACE)
  (LGPL) VisionEgg src/Textures.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_MODULATE)
  (LGPL) VisionEgg src/Textures.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_MODULATE)
  (LGPL) VisionEgg src/Textures.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_REPLACE)
  (LGPL) VisionEgg src/Textures.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_DECAL)
GL_TEXTURE_HEIGHT
  (LGPL) VisionEgg src/SphereMap.py if (gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_2D,0,gl.GL_TEXTURE_WIDTH) == 0) or (gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_2D,0,gl.GL_TEXTURE_HEIGHT) == 0):
  (LGPL) VisionEgg src/Textures.py if gl.glGetTexLevelParameteriv(target,mipmap_level,gl.GL_TEXTURE_HEIGHT) == 0:
  (LGPL) VisionEgg src/Textures.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_3D,mipmap_level,gl.GL_TEXTURE_HEIGHT) == 0:
  (LGPL) VisionEgg test/opengl_info.py if glGetTexLevelParameteriv(GL_PROXY_TEXTURE_2D,0,GL_TEXTURE_HEIGHT) != 0:
GL_TEXTURE_MAG_FILTER
  OpenGLContext tests/dek_texturesurf.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe6_timer.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/multitexture_1.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/multitexture_1.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe6.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe6_multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe6_multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe7.py glTexParameteri( GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe7.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR)
  OpenGLContext tests/nehe7.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR)
  OpenGLContext tests/nehe8.py glTexParameteri( GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe8.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR)
  OpenGLContext tests/nehe8.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR)
  OpenGLContext scenegraph/imagetexture.py glTexParameter( GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, self.magFilter )
  OpenGL/Demo dek/texturesurf.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGL/Demo dek/texturesurf2.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGL/Demo dek/tile.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGL/Demo NeHe/lesson18.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGL/Demo NeHe/lesson18.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR)
  OpenGL/Demo NeHe/lesson18.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR)
  OpenGL/Demo NeHe/lesson6-multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGL/Demo NeHe/lesson6.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  (LGPL) PyUI pyui/renderers/openglGlut.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  (LGPL) PyUI tests/testcube.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  (LGPL) VisionEgg src/Gratings.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MAG_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MAG_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_2D,gl.GL_TEXTURE_MAG_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/Textures.py gl.glTexParameteri( self.target, gl.GL_TEXTURE_MAG_FILTER, filter)
GL_TEXTURE_MATRIX
  OpenGLContext scenegraph/texturetransform.py matrix = glGetDouble( GL_TEXTURE_MATRIX )
GL_TEXTURE_MIN_FILTER
  OpenGLContext tests/dek_texturesurf.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe6_timer.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext tests/multitexture_1.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext tests/multitexture_1.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe6.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe6_multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe6_multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe7.py glTexParameteri( GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe7.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR)
  OpenGLContext tests/nehe7.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_NEAREST)
  OpenGLContext tests/nehe8.py glTexParameteri( GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe8.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR)
  OpenGLContext tests/nehe8.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_NEAREST)
  OpenGLContext scenegraph/imagetexture.py glTexParameter( GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, self.minFilter )
  OpenGL/Demo dek/texturesurf.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGL/Demo dek/texturesurf2.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGL/Demo dek/tile.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGL/Demo NeHe/lesson18.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGL/Demo NeHe/lesson18.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR)
  OpenGL/Demo NeHe/lesson18.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_NEAREST)
  OpenGL/Demo NeHe/lesson6-multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGL/Demo NeHe/lesson6.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  (LGPL) PyUI pyui/renderers/openglGlut.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  (LGPL) PyUI tests/testcube.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  (LGPL) VisionEgg src/Gratings.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MIN_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MIN_FILTER,p.min_filter)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MIN_FILTER,p.min_filter)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_2D,gl.GL_TEXTURE_MIN_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/Textures.py gl.glTexParameteri( self.target, gl.GL_TEXTURE_MIN_FILTER,filter)
GL_TEXTURE_WIDTH
  (LGPL) VisionEgg src/Gratings.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_1D,0,gl.GL_TEXTURE_WIDTH) == 0:
  (LGPL) VisionEgg src/SphereMap.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_1D,0,gl.GL_TEXTURE_WIDTH) == 0:
  (LGPL) VisionEgg src/SphereMap.py if (gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_2D,0,gl.GL_TEXTURE_WIDTH) == 0) or (gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_2D,0,gl.GL_TEXTURE_HEIGHT) == 0):
  (LGPL) VisionEgg src/Textures.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_1D,mipmap_level,gl.GL_TEXTURE_WIDTH) == 0:
  (LGPL) VisionEgg src/Textures.py if gl.glGetTexLevelParameteriv(target,mipmap_level,gl.GL_TEXTURE_WIDTH) == 0:
  (LGPL) VisionEgg src/Textures.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_3D,mipmap_level,gl.GL_TEXTURE_WIDTH) == 0:
  (LGPL) VisionEgg test/opengl_info.py if glGetTexLevelParameteriv(GL_PROXY_TEXTURE_2D,0,GL_TEXTURE_WIDTH) != 0:
GL_TEXTURE_WRAP_R
  (LGPL) VisionEgg src/Textures.py gl.glTexParameteri( self.target, gl.GL_TEXTURE_WRAP_R, wrap_mode)
GL_TEXTURE_WRAP_S
  OpenGLContext tests/dek_texturesurf.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  OpenGLContext scenegraph/imagetexture.py glTexParameter(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  OpenGLContext scenegraph/imagetexture.py glTexParameter(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP)
  OpenGL/Demo dek/texturesurf.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  OpenGL/Demo dek/texturesurf2.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  OpenGL/Demo dek/tile.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  OpenGL/Demo NeHe/lesson18.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP)
  OpenGL/Demo NeHe/lesson18.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  OpenGL/Demo NeHe/lesson6-multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP)
  OpenGL/Demo NeHe/lesson6-multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  OpenGL/Demo NeHe/lesson6.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP)
  OpenGL/Demo NeHe/lesson6.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  (LGPL) PyUI pyui/renderers/openglGlut.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  (LGPL) PyUI tests/testcube.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  (LGPL) VisionEgg src/Gratings.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_WRAP_S,gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_WRAP_S,gl.GL_REPEAT)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_2D,gl.GL_TEXTURE_WRAP_S,gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/Textures.py gl.glTexParameteri( self.target, gl.GL_TEXTURE_WRAP_S, wrap_mode)
GL_TEXTURE_WRAP_T
  OpenGLContext tests/dek_texturesurf.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  OpenGLContext scenegraph/imagetexture.py glTexParameter(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  OpenGLContext scenegraph/imagetexture.py glTexParameter(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP)
  OpenGL/Demo dek/texturesurf.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  OpenGL/Demo dek/texturesurf2.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  OpenGL/Demo dek/tile.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  OpenGL/Demo NeHe/lesson18.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP)
  OpenGL/Demo NeHe/lesson18.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  OpenGL/Demo NeHe/lesson6-multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP)
  OpenGL/Demo NeHe/lesson6-multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  OpenGL/Demo NeHe/lesson6.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP)
  OpenGL/Demo NeHe/lesson6.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  (LGPL) PyUI pyui/renderers/openglGlut.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  (LGPL) PyUI tests/testcube.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  (LGPL) VisionEgg src/Gratings.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_WRAP_T,gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_WRAP_T,gl.GL_REPEAT)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_2D,gl.GL_TEXTURE_WRAP_T,gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/Textures.py gl.glTexParameteri( self.target, gl.GL_TEXTURE_WRAP_T, wrap_mode)
GL_TRIANGLES
  OpenGLContext shadow/volume.py self.sideType = GL_TRIANGLES
  OpenGLContext shadow/volume.py GL_TRIANGLES,
  OpenGLContext shadow/volume.py if self.sideType != GL_TRIANGLES and self.backwardPoints:
  OpenGLContext shadow/volume.py glDrawArrays(GL_TRIANGLES, 0, len(self.backwardPoints))
  OpenGLContext shadow/volume.py if self.sideType == GL_TRIANGLES:
  OpenGLContext tests/backgroundobject.py glBegin(GL_TRIANGLES)
  OpenGLContext tests/glarrayelement.py glBegin( GL_TRIANGLES )
  OpenGLContext tests/gldrawarrays.py glDrawArrays(GL_TRIANGLES, 0, len(flower_geometry.points_expanded))
  OpenGLContext tests/gldrawarrays_string.py glDrawArrays(GL_TRIANGLES, 0, len(flower_geometry.points_expanded))
  OpenGLContext tests/gldrawelements.py GL_TRIANGLES,
  OpenGLContext tests/glvertex.py glBegin( GL_TRIANGLES )
  OpenGLContext tests/nehe2.py glBegin(GL_TRIANGLES)
  OpenGLContext tests/nehe3.py glBegin(GL_TRIANGLES)
  OpenGLContext tests/nehe4.py glBegin(GL_TRIANGLES)
  OpenGLContext tests/nehe5.py glBegin(GL_TRIANGLES);
  OpenGLContext tests/redbook_alpha.py glBegin (GL_TRIANGLES);
  OpenGLContext tests/redbook_alpha.py glBegin (GL_TRIANGLES);
  OpenGLContext tests/test.py glBegin(GL_TRIANGLES)
  OpenGLContext scenegraph/arraygeometry.py objectType= GL_TRIANGLES, # type of primitive, see glDrawArrays, allowed are:
  OpenGLContext scenegraph/arraygeometry.py assert objectType == GL_TRIANGLES, """Only triangles are sortable, a non-triangle mesh was told to be transparent!"""
  OpenGLContext scenegraph/indexedfaceset.py objectType= GL_TRIANGLES,
  OpenGLContext scenegraph/polygontessellator.py self.type = GL_TRIANGLES
  OpenGLContext scenegraph/polygontessellator.py self.type = GL_TRIANGLES
  OpenGLContext scenegraph/indexedpolygons.py constant = GL_TRIANGLES
  OpenGL/Demo dek/OglSurface/triangle.py glBegin(GL_TRIANGLES)
  OpenGL/Demo NeHe/lesson5.py glBegin(GL_TRIANGLES);					# Start Drawing The Pyramid
  OpenGL/Demo redbook/smooth.py glBegin(GL_TRIANGLES)
  OpenGL/Demo tom/logo.py glBegin(GL_TRIANGLES)
GL_TRIANGLE_FAN
  OpenGLContext scenegraph/polygontessellator.py if self.type == GL_TRIANGLE_FAN:
GL_TRIANGLE_STRIP
  OpenGLContext scenegraph/polygontessellator.py elif self.type == GL_TRIANGLE_STRIP:
  OpenGLContext scenegraph/spherebackground.py glDrawArrays( GL_TRIANGLE_STRIP, 0, len(vertices))
GL_TRUE
  OpenGLContext shadow/passes.py glColorMask(GL_TRUE,GL_TRUE,GL_TRUE,GL_TRUE);
  OpenGLContext shadow/passes.py glColorMask(GL_TRUE,GL_TRUE,GL_TRUE,GL_TRUE);
  OpenGLContext shadow/passes.py glColorMask(GL_TRUE,GL_TRUE,GL_TRUE,GL_TRUE);
  OpenGLContext shadow/passes.py glColorMask(GL_TRUE,GL_TRUE,GL_TRUE,GL_TRUE);
  OpenGLContext tests/redbook_alpha3D.py glDepthMask (GL_TRUE);
  OpenGLContext scenegraph/quadrics.py gluQuadricTexture(quadratic, GL_TRUE)
  OpenGL/Demo dek/OglSurface/triangle.py glDepthMask(GL_TRUE)
  OpenGL/Demo NeHe/lesson18.py gluQuadricTexture(quadratic, GL_TRUE)			# Create Texture Coords (NEW)
GL_UNPACK_ALIGNMENT
  OpenGLContext texture.py glPixelStorei(GL_UNPACK_ALIGNMENT,1)
  OpenGLContext texture.py glPixelStorei(GL_UNPACK_ALIGNMENT,1)
  OpenGLContext tests/dek_texturesurf.py glPixelStorei(GL_UNPACK_ALIGNMENT,1)
  OpenGLContext tests/gldrawpixels.py glPixelStorei(GL_UNPACK_ALIGNMENT, 1)
  OpenGLContext tests/nehe6.py glPixelStorei(GL_UNPACK_ALIGNMENT,1)
  OpenGLContext tests/nehe7.py glPixelStorei(GL_UNPACK_ALIGNMENT,1)
  OpenGLContext tests/nehe7.py glPixelStorei(GL_UNPACK_ALIGNMENT,1)
  OpenGLContext tests/nehe7.py glPixelStorei(GL_UNPACK_ALIGNMENT,1)
  OpenGLContext tests/nehe8.py glPixelStorei(GL_UNPACK_ALIGNMENT,1)
  OpenGLContext tests/nehe8.py glPixelStorei(GL_UNPACK_ALIGNMENT,1)
  OpenGLContext tests/nehe8.py glPixelStorei(GL_UNPACK_ALIGNMENT,1)
  OpenGL/Demo dek/tile.py glPixelStorei(GL_UNPACK_ALIGNMENT, 1)
  OpenGL/Demo dek/OglSurface/OglFrame.py glPixelStorei(GL_UNPACK_ALIGNMENT, 1)
  OpenGL/Demo NeHe/lesson18.py glPixelStorei(GL_UNPACK_ALIGNMENT,1)
  OpenGL/Demo NeHe/lesson6-multi.py glPixelStorei(GL_UNPACK_ALIGNMENT,1)
  OpenGL/Demo NeHe/lesson6.py glPixelStorei(GL_UNPACK_ALIGNMENT,1)
  OpenGL/Demo redbook/drawf.py glPixelStorei(GL_UNPACK_ALIGNMENT, 1)
  (LGPL) PyUI pyui/renderers/openglGlut.py glPixelStorei(GL_UNPACK_ALIGNMENT,1)
  (LGPL) PyUI pyui/renderers/openglPygame.py glPixelStorei(GL_UNPACK_ALIGNMENT,1)
  (LGPL) PyUI pyui/renderers/openglPygame.py glPixelStorei(GL_UNPACK_ALIGNMENT,1)
GL_UNSIGNED_BYTE
  OpenGLContext texture.py GL_TEXTURE_2D, 0, components, x, y, 0, format, GL_UNSIGNED_BYTE, image
  OpenGLContext texture.py GL_TEXTURE_2D, components, x, y, format, GL_UNSIGNED_BYTE, image,
  OpenGLContext debug/bufferimage.py data = glReadPixels(0, 0, width, height, GL_STENCIL_INDEX, GL_UNSIGNED_BYTE)
  OpenGLContext tests/dek_texturesurf.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGLContext tests/gldrawpixels.py type = GL_UNSIGNED_BYTE
  OpenGLContext tests/nehe6.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGLContext tests/nehe7.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGLContext tests/nehe7.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGLContext tests/nehe7.py GL_RGBA, ix, iy, GL_RGBA, GL_UNSIGNED_BYTE, image
  OpenGLContext tests/nehe8.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGLContext tests/nehe8.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGLContext tests/nehe8.py gluBuild2DMipmaps(GL_TEXTURE_2D, 3, ix, iy, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGLContext tests/saveimage.py data = glReadPixels(0, 0, width, height, GL_RGB, GL_UNSIGNED_BYTE)
  OpenGL/Demo dek/texturesurf.py GL_RGBA, GL_UNSIGNED_BYTE, self.image)
  OpenGL/Demo dek/tile.py glTexImage2D(GL_TEXTURE_2D, 0, 3, self.imageWidth, self.imageHeight, 0, GL_RGBA, GL_UNSIGNED_BYTE,  self.image)
  OpenGL/Demo dek/OglSurface/OglFrame.py GL_RGBA, GL_UNSIGNED_BYTE)
  OpenGL/Demo NeHe/lesson18.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGL/Demo NeHe/lesson18.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGL/Demo NeHe/lesson18.py gluBuild2DMipmaps(GL_TEXTURE_2D, 3, ix, iy, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGL/Demo NeHe/lesson6-multi.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGL/Demo NeHe/lesson6.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGL/Demo tom/conesave.py data = glReadPixels(0, 0, width, height, GL_RGB, GL_UNSIGNED_BYTE)
  SciPy/kiva glcore2d.py glDrawPixels( dx, dy, GL_RGBA, GL_UNSIGNED_BYTE, img.tostring() )
  (LGPL) PyUI pyui/renderers/openglGlut.py glTexImage2D(GL_TEXTURE_2D, 0, seq, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexImage2D(GL_TEXTURE_2D, 0, 4, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, data)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, totalWidth, totalHeight, 0, GL_RGBA, GL_UNSIGNED_BYTE, data)
  (LGPL) VisionEgg src/Core.py framebuffer_pixels = gl.glReadPixels(0,0,self.size[0],self.size[1],format,gl.GL_UNSIGNED_BYTE)
  (LGPL) VisionEgg src/Core.py framebuffer_pixels = gl.glReadPixels(0,0,self.size[0],self.size[1],format,gl.GL_UNSIGNED_BYTE)
  (LGPL) VisionEgg src/Gratings.py self.gl_type = gl.GL_UNSIGNED_BYTE
  (LGPL) VisionEgg src/Gratings.py self.gl_type = gl.GL_UNSIGNED_BYTE
  (LGPL) VisionEgg src/Textures.py data_type = gl.GL_UNSIGNED_BYTE
  (LGPL) VisionEgg src/Textures.py if data_type == gl.GL_UNSIGNED_BYTE:
  (LGPL) VisionEgg src/Textures.py data_type = gl.GL_UNSIGNED_BYTE
  (LGPL) VisionEgg src/Textures.py if data_type == gl.GL_UNSIGNED_BYTE:
  (LGPL) VisionEgg test/opengl_info.py glTexImage2D(GL_PROXY_TEXTURE_2D,0,GL_RGB,w,h,0,GL_RGB,GL_UNSIGNED_BYTE,data)
GL_V3F
  OpenGLContext tests/glinterleavedarrays.py GL_V3F, # 3 vertex floats/item
GL_VENDOR
  (LGPL) VisionEgg src/Core.py vendor = gl.glGetString(gl.GL_VENDOR)
  (LGPL) VisionEgg src/Core.py vendor = gl.glGetString(gl.GL_VENDOR)
  (LGPL) VisionEgg test/opengl_info.py print " GL_VENDOR =",glGetString(GL_VENDOR)
GL_VERSION
  (LGPL) VisionEgg src/Core.py version = gl.glGetString(gl.GL_VERSION)
  (LGPL) VisionEgg src/Core.py value_str = string.split(gl.glGetString(gl.GL_VERSION))[0]
  (LGPL) VisionEgg test/opengl_info.py print " GL_VERSION = ",glGetString(GL_VERSION)
GL_VERTEX_ARRAY
  OpenGLContext shadow/volume.py glEnableClientState(GL_VERTEX_ARRAY);
  OpenGLContext shadow/volume.py glDisableClientState(GL_VERTEX_ARRAY);
  OpenGLContext shadow/volume.py glEnableClientState(GL_VERTEX_ARRAY);
  OpenGLContext shadow/volume.py glDisableClientState(GL_VERTEX_ARRAY);
  OpenGLContext shadow/volume.py glEnableClientState(GL_VERTEX_ARRAY);
  OpenGLContext shadow/volume.py glDisableClientState(GL_VERTEX_ARRAY);
  OpenGLContext tests/glarrayelement.py glEnableClientState(GL_VERTEX_ARRAY);
  OpenGLContext tests/gldrawarrays.py glEnableClientState(GL_VERTEX_ARRAY);
  OpenGLContext tests/gldrawarrays_string.py glEnableClientState(GL_VERTEX_ARRAY);
  OpenGLContext tests/gldrawelements.py glEnableClientState(GL_VERTEX_ARRAY);
  OpenGLContext tests/gldrawelements_base.py glEnableClientState(GL_VERTEX_ARRAY);
  OpenGLContext scenegraph/arraygeometry.py glEnableClientState( GL_VERTEX_ARRAY )
  OpenGLContext scenegraph/arraygeometry.py glDisableClientState( GL_VERTEX_ARRAY )
  OpenGLContext scenegraph/indexedpolygons.py glDisableClientState(GL_VERTEX_ARRAY);
  OpenGLContext scenegraph/indexedpolygons.py glEnableClientState(GL_VERTEX_ARRAY);
  OpenGLContext scenegraph/spherebackground.py glEnableClientState( GL_VERTEX_ARRAY )
  OpenGLContext scenegraph/spherebackground.py glDisableClientState( GL_VERTEX_ARRAY )
  OpenGLContext scenegraph/pointset.py glEnable( GL_VERTEX_ARRAY )
  OpenGLContext scenegraph/pointset.py glDisable( GL_VERTEX_ARRAY )
  OpenGL/Demo da/dots.py glEnableClientState(GL_VERTEX_ARRAY)
  OpenGL/Demo da/dots.py glDisableClientState(GL_VERTEX_ARRAY)
  OpenGL/Demo suite/items/da/dots.py glEnableClientState(GL_VERTEX_ARRAY)
  OpenGL/Demo suite/items/da/dots.py glDisableClientState(GL_VERTEX_ARRAY)
  OpenGL/Demo tom/arraytest.py glEnableClientState(GL_VERTEX_ARRAY)
  OpenGL/Demo tom/poly.py glEnableClientState(GL_VERTEX_ARRAY)
  SciPy/kiva glcore2d.py glEnableClientState( GL_VERTEX_ARRAY )
  SciPy/kiva glcore2d.py glDisableClientState( GL_VERTEX_ARRAY )
  SciPy/kiva glcore2d.py glEnableClientState( GL_VERTEX_ARRAY )
  SciPy/kiva glcore2d.py glDisableClientState( GL_VERTEX_ARRAY )
GL_VIEWPORT
  OpenGLContext renderpass.py self.viewport = glGetIntegerv( GL_VIEWPORT )
  OpenGLContext scenegraph/polygonsort.py viewport = glGetIntegerv( GL_VIEWPORT )
GL_ZERO
  OpenGLContext shadow/passes.py glBlendFunc(GL_ONE,GL_ZERO);
WGL_FONT_POLYGONS
  OpenGLContext scenegraph/text/wglfont.py WGL_FONT_POLYGONS,
gl
  OpenGL/Demo tom/conesave.py self.gl = Opengl(width = 400, height = 400, double = 1, depth = 1)
  OpenGL/Demo tom/conesave.py self.gl.redraw = self.redraw
  OpenGL/Demo tom/conesave.py self.gl.autospin_allowed = 1
  OpenGL/Demo tom/conesave.py self.gl.pack(side = TOP, expand = YES, fill = BOTH)
  OpenGL/Demo tom/conesave.py self.gl.set_background(255,255,255)
  OpenGL/Demo tom/conesave.py self.gl.mainloop()
  (LGPL) VisionEgg demo/alpha_texture.py import OpenGL.GL as gl # PyOpenGL
  (LGPL) VisionEgg demo/alpha_texture.py internal_format = gl.GL_RGBA,
  (LGPL) VisionEgg demo/alpha_texture.py texture_min_filter=gl.GL_NEAREST,
  (LGPL) VisionEgg demo/alpha_texture.py texture_mag_filter=gl.GL_NEAREST,
  (LGPL) VisionEgg demo/alpha_texture.py internal_format = gl.GL_RGBA,
  (LGPL) VisionEgg demo/alpha_texture.py texture_min_filter=gl.GL_NEAREST,
  (LGPL) VisionEgg demo/alpha_texture.py texture_mag_filter=gl.GL_NEAREST,
  (LGPL) VisionEgg demo/flames_visionegg.py import OpenGL.GL as gl
  (LGPL) VisionEgg demo/flames_visionegg.py texture_min_filter=gl.GL_LINEAR)
  (LGPL) VisionEgg demo/image_sequence_fast.py import OpenGL.GL as gl
  (LGPL) VisionEgg demo/image_sequence_fast.py texture_min_filter=gl.GL_LINEAR,
  (LGPL) VisionEgg demo/image_sequence_slow.py import OpenGL.GL as gl
  (LGPL) VisionEgg demo/multi_stim.py texture_min_filter=gl.GL_LINEAR,
  (LGPL) VisionEgg demo/sphereGratingWindowed.py import OpenGL.GL as gl
  (LGPL) VisionEgg demo/visual_jitter.py import OpenGL.GL as gl # PyOpenGL
  (LGPL) VisionEgg demo/visual_jitter.py texture_min_filter=gl.GL_NEAREST,
  (LGPL) VisionEgg demo/visual_jitter.py texture_mag_filter=gl.GL_NEAREST,
  (LGPL) VisionEgg demo/visual_jitter.py texture_min_filter=gl.GL_NEAREST,
  (LGPL) VisionEgg demo/visual_jitter.py texture_mag_filter=gl.GL_NEAREST,
  (LGPL) VisionEgg src/Core.py import OpenGL.GL as gl                          # PyOpenGL (and shortcut name)
  (LGPL) VisionEgg src/Core.py vendor = gl.glGetString(gl.GL_VENDOR)
  (LGPL) VisionEgg src/Core.py vendor = gl.glGetString(gl.GL_VENDOR)
  (LGPL) VisionEgg src/Core.py renderer = gl.glGetString(gl.GL_RENDERER)
  (LGPL) VisionEgg src/Core.py renderer = gl.glGetString(gl.GL_RENDERER)
  (LGPL) VisionEgg src/Core.py version = gl.glGetString(gl.GL_VERSION)
  (LGPL) VisionEgg src/Core.py version = gl.glGetString(gl.GL_VERSION)
  (LGPL) VisionEgg src/Core.py def get_framebuffer_as_image(self, buffer='back', format=gl.GL_RGB):
  (LGPL) VisionEgg src/Core.py gl.glReadBuffer( gl.GL_FRONT )
  (LGPL) VisionEgg src/Core.py gl.glReadBuffer( gl.GL_FRONT )
  (LGPL) VisionEgg src/Core.py gl.glReadBuffer( gl.GL_BACK )
  (LGPL) VisionEgg src/Core.py gl.glReadBuffer( gl.GL_BACK )
  (LGPL) VisionEgg src/Core.py if format == gl.GL_RGB:
  (LGPL) VisionEgg src/Core.py elif format == gl.GL_RGBA:
  (LGPL) VisionEgg src/Core.py gl.glPixelStorei(gl.GL_PACK_ALIGNMENT, 1)
  (LGPL) VisionEgg src/Core.py gl.glPixelStorei(gl.GL_PACK_ALIGNMENT, 1)
  (LGPL) VisionEgg src/Core.py framebuffer_pixels = gl.glReadPixels(0,0,self.size[0],self.size[1],format,gl.GL_UNSIGNED_BYTE)
  (LGPL) VisionEgg src/Core.py framebuffer_pixels = gl.glReadPixels(0,0,self.size[0],self.size[1],format,gl.GL_UNSIGNED_BYTE)
  (LGPL) VisionEgg src/Core.py def get_framebuffer_as_array(self, buffer='back', format=gl.GL_RGB):
  (LGPL) VisionEgg src/Core.py gl.glReadBuffer( gl.GL_FRONT )
  (LGPL) VisionEgg src/Core.py gl.glReadBuffer( gl.GL_FRONT )
  (LGPL) VisionEgg src/Core.py gl.glReadBuffer( gl.GL_BACK )
  (LGPL) VisionEgg src/Core.py gl.glReadBuffer( gl.GL_BACK )
  (LGPL) VisionEgg src/Core.py if format == gl.GL_RGB:
  (LGPL) VisionEgg src/Core.py elif format == gl.GL_RGBA:
  (LGPL) VisionEgg src/Core.py gl.glPixelStorei(gl.GL_PACK_ALIGNMENT, 1)
  (LGPL) VisionEgg src/Core.py gl.glPixelStorei(gl.GL_PACK_ALIGNMENT, 1)
  (LGPL) VisionEgg src/Core.py framebuffer_pixels = gl.glReadPixels(0,0,self.size[0],self.size[1],format,gl.GL_UNSIGNED_BYTE)
  (LGPL) VisionEgg src/Core.py framebuffer_pixels = gl.glReadPixels(0,0,self.size[0],self.size[1],format,gl.GL_UNSIGNED_BYTE)
  (LGPL) VisionEgg src/Core.py texture_min_filter=gl.GL_NEAREST, # only used if scale < 1.0
  (LGPL) VisionEgg src/Core.py texture_mag_filter=gl.GL_NEAREST, # only used if scale > 1.0
  (LGPL) VisionEgg src/Core.py internal_format=gl.GL_RGB, # pixel data converted to this format in texture (gl.GL_RGBA also useful)
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Restore projection
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Restore projection
  (LGPL) VisionEgg src/Core.py gl.glPopMatrix()
  (LGPL) VisionEgg src/Core.py gl.glClearColor(c[0],c[1],c[2],c[3])
  (LGPL) VisionEgg src/Core.py gl.glClear(gl.GL_COLOR_BUFFER_BIT | gl.GL_DEPTH_BUFFER_BIT)
  (LGPL) VisionEgg src/Core.py gl.glClear(gl.GL_COLOR_BUFFER_BIT | gl.GL_DEPTH_BUFFER_BIT)
  (LGPL) VisionEgg src/Core.py gl.glClear(gl.GL_COLOR_BUFFER_BIT | gl.GL_DEPTH_BUFFER_BIT)
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glLoadMatrixf(self.parameters.matrix)
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glPushMatrix()
  (LGPL) VisionEgg src/Core.py gl.glLoadMatrixf(self.parameters.matrix)
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glLoadMatrixf(self.parameters.matrix)
  (LGPL) VisionEgg src/Core.py gl.glTranslatef(x,y,z)
  (LGPL) VisionEgg src/Core.py self.parameters.matrix = gl.glGetFloatv(gl.GL_PROJECTION_MATRIX)
  (LGPL) VisionEgg src/Core.py self.parameters.matrix = gl.glGetFloatv(gl.GL_PROJECTION_MATRIX)
  (LGPL) VisionEgg src/Core.py matrix_mode = gl.glGetInteger(gl.GL_MATRIX_MODE)
  (LGPL) VisionEgg src/Core.py matrix_mode = gl.glGetInteger(gl.GL_MATRIX_MODE)
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glPushMatrix()
  (LGPL) VisionEgg src/Core.py gl.glLoadMatrixf(self.parameters.matrix)
  (LGPL) VisionEgg src/Core.py gl.glTranslatef(x,y,z)
  (LGPL) VisionEgg src/Core.py self.parameters.matrix = gl.glGetFloatv(gl.GL_PROJECTION_MATRIX)
  (LGPL) VisionEgg src/Core.py self.parameters.matrix = gl.glGetFloatv(gl.GL_PROJECTION_MATRIX)
  (LGPL) VisionEgg src/Core.py gl.glPopMatrix()
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(matrix_mode)
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glLoadMatrixf(self.parameters.matrix)
  (LGPL) VisionEgg src/Core.py gl.glRotatef(angle_degrees,x,y,z)
  (LGPL) VisionEgg src/Core.py self.parameters.matrix = gl.glGetFloatv(gl.GL_PROJECTION_MATRIX)
  (LGPL) VisionEgg src/Core.py self.parameters.matrix = gl.glGetFloatv(gl.GL_PROJECTION_MATRIX)
  (LGPL) VisionEgg src/Core.py matrix_mode = gl.glGetInteger(gl.GL_MATRIX_MODE)
  (LGPL) VisionEgg src/Core.py matrix_mode = gl.glGetInteger(gl.GL_MATRIX_MODE)
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glPushMatrix()
  (LGPL) VisionEgg src/Core.py gl.glLoadMatrixf(self.parameters.matrix)
  (LGPL) VisionEgg src/Core.py gl.glRotatef(angle_degrees,x,y,z)
  (LGPL) VisionEgg src/Core.py self.parameters.matrix = gl.glGetFloatv(gl.GL_PROJECTION_MATRIX)
  (LGPL) VisionEgg src/Core.py self.parameters.matrix = gl.glGetFloatv(gl.GL_PROJECTION_MATRIX)
  (LGPL) VisionEgg src/Core.py gl.glPopMatrix()
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(matrix_mode)
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glLoadMatrixf(self.parameters.matrix)
  (LGPL) VisionEgg src/Core.py gl.glScalef(x,y,z)
  (LGPL) VisionEgg src/Core.py self.parameters.matrix = gl.glGetFloatv(gl.GL_PROJECTION_MATRIX)
  (LGPL) VisionEgg src/Core.py self.parameters.matrix = gl.glGetFloatv(gl.GL_PROJECTION_MATRIX)
  (LGPL) VisionEgg src/Core.py matrix_mode = gl.glGetInteger(gl.GL_MATRIX_MODE)
  (LGPL) VisionEgg src/Core.py matrix_mode = gl.glGetInteger(gl.GL_MATRIX_MODE)
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glPushMatrix()
  (LGPL) VisionEgg src/Core.py gl.glLoadMatrixf(self.parameters.matrix)
  (LGPL) VisionEgg src/Core.py gl.glScalef(x,y,z)
  (LGPL) VisionEgg src/Core.py self.parameters.matrix = gl.glGetFloatv(gl.GL_PROJECTION_MATRIX)
  (LGPL) VisionEgg src/Core.py self.parameters.matrix = gl.glGetFloatv(gl.GL_PROJECTION_MATRIX)
  (LGPL) VisionEgg src/Core.py gl.glPopMatrix()
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(matrix_mode)
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glLoadMatrixf(self.parameters.matrix)
  (LGPL) VisionEgg src/Core.py gl.glMultMatrixf(m)
  (LGPL) VisionEgg src/Core.py gl.glTranslatef(-eye[0],-eye[1],-eye[2])
  (LGPL) VisionEgg src/Core.py self.parameters.matrix = gl.glGetFloatv(gl.GL_PROJECTION_MATRIX)
  (LGPL) VisionEgg src/Core.py self.parameters.matrix = gl.glGetFloatv(gl.GL_PROJECTION_MATRIX)
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glLoadIdentity() # Clear the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glFrustum(left,right,bottom,top,near,far) # Let GL create a matrix and compose it
  (LGPL) VisionEgg src/Core.py matrix = gl.glGetFloatv(gl.GL_PROJECTION_MATRIX)
  (LGPL) VisionEgg src/Core.py matrix = gl.glGetFloatv(gl.GL_PROJECTION_MATRIX)
  (LGPL) VisionEgg src/Core.py gl.glViewport(self.parameters.lowerleft[0],
  (LGPL) VisionEgg src/Core.py gl.glDisable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Core.py gl.glDisable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Core.py gl.glDisable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/Core.py gl.glDisable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/Core.py gl.glDisable(gl.GL_BLEND)
  (LGPL) VisionEgg src/Core.py gl.glDisable(gl.GL_BLEND)
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/Core.py gl.glLoadIdentity()
  (LGPL) VisionEgg src/Core.py gl.glColor(c[0],c[1],c[2],c[3])
  (LGPL) VisionEgg src/Core.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/Core.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/Core.py gl.glVertex2f(x1,y1)
  (LGPL) VisionEgg src/Core.py gl.glVertex2f(x2,y1)
  (LGPL) VisionEgg src/Core.py gl.glVertex2f(x2,y2)
  (LGPL) VisionEgg src/Core.py gl.glVertex2f(x1,y2)
  (LGPL) VisionEgg src/Core.py gl.glEnd() # GL_QUADS
  (LGPL) VisionEgg src/Core.py fb_image = screen.get_framebuffer_as_image(buffer='front',format=gl.GL_RGB)
  (LGPL) VisionEgg src/Core.py vendor = gl.glGetString(gl.GL_VENDOR)
  (LGPL) VisionEgg src/Core.py vendor = gl.glGetString(gl.GL_VENDOR)
  (LGPL) VisionEgg src/Core.py renderer = gl.glGetString(gl.GL_RENDERER)
  (LGPL) VisionEgg src/Core.py renderer = gl.glGetString(gl.GL_RENDERER)
  (LGPL) VisionEgg src/Core.py value_str = string.split(gl.glGetString(gl.GL_VERSION))[0]
  (LGPL) VisionEgg src/Core.py value_str = string.split(gl.glGetString(gl.GL_VERSION))[0]
  (LGPL) VisionEgg src/Dots.py import OpenGL.GL as gl
  (LGPL) VisionEgg src/Dots.py gl.glBegin(gl.GL_POINTS)
  (LGPL) VisionEgg src/Dots.py gl.glBegin(gl.GL_POINTS)
  (LGPL) VisionEgg src/Dots.py gl.glVertex3f(xs[i],ys[i],zs[i])
  (LGPL) VisionEgg src/Dots.py gl.glEnd()
  (LGPL) VisionEgg src/Dots.py gl.glEnable( gl.GL_POINT_SMOOTH )
  (LGPL) VisionEgg src/Dots.py gl.glEnable( gl.GL_POINT_SMOOTH )
  (LGPL) VisionEgg src/Dots.py gl.glEnable( gl.GL_BLEND )
  (LGPL) VisionEgg src/Dots.py gl.glEnable( gl.GL_BLEND )
  (LGPL) VisionEgg src/Dots.py gl.glBlendFunc( gl.GL_SRC_ALPHA, gl.GL_ONE_MINUS_SRC_ALPHA )
  (LGPL) VisionEgg src/Dots.py gl.glBlendFunc( gl.GL_SRC_ALPHA, gl.GL_ONE_MINUS_SRC_ALPHA )
  (LGPL) VisionEgg src/Dots.py gl.glBlendFunc( gl.GL_SRC_ALPHA, gl.GL_ONE_MINUS_SRC_ALPHA )
  (LGPL) VisionEgg src/Dots.py gl.glDisable( gl.GL_BLEND )
  (LGPL) VisionEgg src/Dots.py gl.glDisable( gl.GL_BLEND )
  (LGPL) VisionEgg src/Dots.py gl.glColor( p.color[0], p.color[1], p.color[2], p.color[3] )
  (LGPL) VisionEgg src/Dots.py gl.glPointSize(p.dot_size)
  (LGPL) VisionEgg src/Dots.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/Dots.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/Dots.py gl.glLoadIdentity()
  (LGPL) VisionEgg src/Dots.py gl.glDisable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/Dots.py gl.glDisable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/Dots.py gl.glEnable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Dots.py gl.glEnable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Dots.py gl.glDisable( gl.GL_POINT_SMOOTH ) # turn off
  (LGPL) VisionEgg src/Dots.py gl.glDisable( gl.GL_POINT_SMOOTH ) # turn off
  (LGPL) VisionEgg src/GLTrace.py import OpenGL.GL as gl
  (LGPL) VisionEgg src/GLTrace.py setattr(gl,attr,getattr(OpenGL.GL.ARB.multitexture,attr))
  (LGPL) VisionEgg src/GLTrace.py self.orig_func = getattr(gl,self.attr_name)
  (LGPL) VisionEgg src/GLTrace.py for attr in dir(gl):
  (LGPL) VisionEgg src/GLTrace.py if callable( getattr(gl,attr) ):
  (LGPL) VisionEgg src/GLTrace.py if type(getattr(gl,attr)) == int:
  (LGPL) VisionEgg src/GLTrace.py if getattr(gl,attr) > 256: # assume first n aren't constants (n is arbitrary choice)
  (LGPL) VisionEgg src/GLTrace.py gl_constants[getattr(gl,attr)] = attr
  (LGPL) VisionEgg src/Gratings.py import OpenGL.GL as gl
  (LGPL) VisionEgg src/Gratings.py setattr(gl,attr,getattr(OpenGL.GL.ARB.multitexture,attr))
  (LGPL) VisionEgg src/Gratings.py if gl.glGetIntegerv( gl.GL_RED_BITS ) < self.parameters.bit_depth:
  (LGPL) VisionEgg src/Gratings.py if gl.glGetIntegerv( gl.GL_RED_BITS ) < self.parameters.bit_depth:
  (LGPL) VisionEgg src/Gratings.py current_bit_depth = gl.glGetIntegerv( gl.GL_RED_BITS )
  (LGPL) VisionEgg src/Gratings.py current_bit_depth = gl.glGetIntegerv( gl.GL_RED_BITS )
  (LGPL) VisionEgg src/Gratings.py elif gl.glGetIntegerv( gl.GL_GREEN_BITS ) < self.parameters.bit_depth:
  (LGPL) VisionEgg src/Gratings.py elif gl.glGetIntegerv( gl.GL_GREEN_BITS ) < self.parameters.bit_depth:
  (LGPL) VisionEgg src/Gratings.py current_bit_depth = gl.glGetIntegerv( gl.GL_GREEN_BITS )
  (LGPL) VisionEgg src/Gratings.py current_bit_depth = gl.glGetIntegerv( gl.GL_GREEN_BITS )
  (LGPL) VisionEgg src/Gratings.py elif gl.glGetIntegerv( gl.GL_BLUE_BITS ) < self.parameters.bit_depth:
  (LGPL) VisionEgg src/Gratings.py elif gl.glGetIntegerv( gl.GL_BLUE_BITS ) < self.parameters.bit_depth:
  (LGPL) VisionEgg src/Gratings.py current_bit_depth = gl.glGetIntegerv( gl.GL_BLUE_BITS )
  (LGPL) VisionEgg src/Gratings.py current_bit_depth = gl.glGetIntegerv( gl.GL_BLUE_BITS )
  (LGPL) VisionEgg src/Gratings.py self.gl_internal_format = gl.GL_LUMINANCE
  (LGPL) VisionEgg src/Gratings.py self.format = gl.GL_LUMINANCE
  (LGPL) VisionEgg src/Gratings.py self.gl_type = gl.GL_UNSIGNED_BYTE
  (LGPL) VisionEgg src/Gratings.py self.gl_internal_format = gl.GL_LUMINANCE
  (LGPL) VisionEgg src/Gratings.py self.format = gl.GL_LUMINANCE
  (LGPL) VisionEgg src/Gratings.py self.gl_type = gl.GL_SHORT
  (LGPL) VisionEgg src/Gratings.py self.gl_internal_format = gl.GL_LUMINANCE
  (LGPL) VisionEgg src/Gratings.py self.format = gl.GL_LUMINANCE
  (LGPL) VisionEgg src/Gratings.py self.gl_type = gl.GL_INT
  (LGPL) VisionEgg src/Gratings.py alpha_bit_depth = gl.glGetIntegerv( gl.GL_ALPHA_BITS )
  (LGPL) VisionEgg src/Gratings.py alpha_bit_depth = gl.glGetIntegerv( gl.GL_ALPHA_BITS )
  (LGPL) VisionEgg src/Gratings.py self.gl_internal_format = gl.GL_ALPHA
  (LGPL) VisionEgg src/Gratings.py self.format = gl.GL_ALPHA
  (LGPL) VisionEgg src/Gratings.py self.gl_type = gl.GL_UNSIGNED_BYTE
  (LGPL) VisionEgg src/Gratings.py self.gl_internal_format = gl.GL_ALPHA
  (LGPL) VisionEgg src/Gratings.py self.format = gl.GL_ALPHA
  (LGPL) VisionEgg src/Gratings.py self.gl_type = gl.GL_SHORT
  (LGPL) VisionEgg src/Gratings.py self.gl_internal_format = gl.GL_ALPHA
  (LGPL) VisionEgg src/Gratings.py self.format = gl.GL_ALPHA
  (LGPL) VisionEgg src/Gratings.py self.gl_type = gl.GL_INT
  (LGPL) VisionEgg src/Gratings.py self._texture_object_id = gl.glGenTextures(1)
  (LGPL) VisionEgg src/Gratings.py gl.glActiveTextureARB(gl.GL_TEXTURE0_ARB)
  (LGPL) VisionEgg src/Gratings.py gl.glActiveTextureARB(gl.GL_TEXTURE0_ARB)
  (LGPL) VisionEgg src/Gratings.py gl.glBindTexture(gl.GL_TEXTURE_1D,self._texture_object_id)
  (LGPL) VisionEgg src/Gratings.py gl.glBindTexture(gl.GL_TEXTURE_1D,self._texture_object_id)
  (LGPL) VisionEgg src/Gratings.py max_dim = gl.glGetIntegerv(gl.GL_MAX_TEXTURE_SIZE)
  (LGPL) VisionEgg src/Gratings.py max_dim = gl.glGetIntegerv(gl.GL_MAX_TEXTURE_SIZE)
  (LGPL) VisionEgg src/Gratings.py gl.glTexImage1D(gl.GL_PROXY_TEXTURE_1D,            # target
  (LGPL) VisionEgg src/Gratings.py gl.glTexImage1D(gl.GL_PROXY_TEXTURE_1D,            # target
  (LGPL) VisionEgg src/Gratings.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_1D,0,gl.GL_TEXTURE_WIDTH) == 0:
  (LGPL) VisionEgg src/Gratings.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_1D,0,gl.GL_TEXTURE_WIDTH) == 0:
  (LGPL) VisionEgg src/Gratings.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_1D,0,gl.GL_TEXTURE_WIDTH) == 0:
  (LGPL) VisionEgg src/Gratings.py gl.glTexImage1D(gl.GL_TEXTURE_1D,                  # target
  (LGPL) VisionEgg src/Gratings.py gl.glTexImage1D(gl.GL_TEXTURE_1D,                  # target
  (LGPL) VisionEgg src/Gratings.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_WRAP_S,gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/Gratings.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_WRAP_S,gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/Gratings.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_WRAP_S,gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/Gratings.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_WRAP_S,gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/Gratings.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_WRAP_T,gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/Gratings.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_WRAP_T,gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/Gratings.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_WRAP_T,gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/Gratings.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_WRAP_T,gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/Gratings.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MAG_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/Gratings.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MAG_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/Gratings.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MAG_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/Gratings.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MAG_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/Gratings.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MIN_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/Gratings.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MIN_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/Gratings.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MIN_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/Gratings.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MIN_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/Gratings.py gl.glDeleteTextures( [self._texture_object_id] )
  (LGPL) VisionEgg src/Gratings.py gl.glActiveTextureARB(gl.GL_TEXTURE0_ARB)
  (LGPL) VisionEgg src/Gratings.py gl.glActiveTextureARB(gl.GL_TEXTURE0_ARB)
  (LGPL) VisionEgg src/Gratings.py gl.glBindTexture(gl.GL_TEXTURE_1D,self._texture_object_id)
  (LGPL) VisionEgg src/Gratings.py gl.glBindTexture(gl.GL_TEXTURE_1D,self._texture_object_id)
  (LGPL) VisionEgg src/Gratings.py gl.glEnable(gl.GL_TEXTURE_1D)
  (LGPL) VisionEgg src/Gratings.py gl.glEnable(gl.GL_TEXTURE_1D)
  (LGPL) VisionEgg src/Gratings.py gl.glDisable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/Gratings.py gl.glDisable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/Gratings.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/Gratings.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/Gratings.py gl.glLoadIdentity()
  (LGPL) VisionEgg src/Gratings.py gl.glTranslate(p.center[0],
  (LGPL) VisionEgg src/Gratings.py gl.glRotate(p.orientation,0.0,0.0,1.0)
  (LGPL) VisionEgg src/Gratings.py gl.glDisable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Gratings.py gl.glDisable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Gratings.py gl.glEnable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Gratings.py gl.glEnable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Gratings.py gl.glEnable( gl.GL_BLEND )
  (LGPL) VisionEgg src/Gratings.py gl.glEnable( gl.GL_BLEND )
  (LGPL) VisionEgg src/Gratings.py gl.glBlendFunc( gl.GL_SRC_ALPHA, gl.GL_ONE_MINUS_SRC_ALPHA )
  (LGPL) VisionEgg src/Gratings.py gl.glBlendFunc( gl.GL_SRC_ALPHA, gl.GL_ONE_MINUS_SRC_ALPHA )
  (LGPL) VisionEgg src/Gratings.py gl.glBlendFunc( gl.GL_SRC_ALPHA, gl.GL_ONE_MINUS_SRC_ALPHA )
  (LGPL) VisionEgg src/Gratings.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_BLEND)
  (LGPL) VisionEgg src/Gratings.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_BLEND)
  (LGPL) VisionEgg src/Gratings.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_BLEND)
  (LGPL) VisionEgg src/Gratings.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_BLEND)
  (LGPL) VisionEgg src/Gratings.py gl.glTexEnvfv(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_COLOR, p.color2)
  (LGPL) VisionEgg src/Gratings.py gl.glTexEnvfv(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_COLOR, p.color2)
  (LGPL) VisionEgg src/Gratings.py gl.glTexEnvfv(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_COLOR, p.color2)
  (LGPL) VisionEgg src/Gratings.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_MODULATE)
  (LGPL) VisionEgg src/Gratings.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_MODULATE)
  (LGPL) VisionEgg src/Gratings.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_MODULATE)
  (LGPL) VisionEgg src/Gratings.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_MODULATE)
  (LGPL) VisionEgg src/Gratings.py gl.glTexSubImage1D(gl.GL_TEXTURE_1D, # target
  (LGPL) VisionEgg src/Gratings.py gl.glTexSubImage1D(gl.GL_TEXTURE_1D, # target
  (LGPL) VisionEgg src/Gratings.py gl.glColor(p.color1[0],p.color1[1],p.color1[2],p.max_alpha)
  (LGPL) VisionEgg src/Gratings.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/Gratings.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/Gratings.py gl.glTexCoord2f(0.0,0.0)
  (LGPL) VisionEgg src/Gratings.py gl.glVertex3f(l,b,depth)
  (LGPL) VisionEgg src/Gratings.py gl.glTexCoord2f(1.0,0.0)
  (LGPL) VisionEgg src/Gratings.py gl.glVertex3f(r,b,depth)
  (LGPL) VisionEgg src/Gratings.py gl.glTexCoord2f(1.0,1.0)
  (LGPL) VisionEgg src/Gratings.py gl.glVertex3f(r,t,depth)
  (LGPL) VisionEgg src/Gratings.py gl.glTexCoord2f(0.0,1.0)
  (LGPL) VisionEgg src/Gratings.py gl.glVertex3f(l,t,depth)
  (LGPL) VisionEgg src/Gratings.py gl.glEnd() # GL_QUADS
  (LGPL) VisionEgg src/Gratings.py gl.glDisable(gl.GL_TEXTURE_1D)
  (LGPL) VisionEgg src/Gratings.py gl.glDisable(gl.GL_TEXTURE_1D)
  (LGPL) VisionEgg src/Lib3DS.py gl = OpenGL.GL
  (LGPL) VisionEgg src/Lib3DS.py 'texture_mag_filter':(gl.GL_LINEAR,
  (LGPL) VisionEgg src/Lib3DS.py 'texture_min_filter':(gl.GL_LINEAR_MIPMAP_LINEAR,
  (LGPL) VisionEgg src/Lib3DS.py 'texture_wrap_s':(gl.GL_CLAMP_TO_EDGE,
  (LGPL) VisionEgg src/Lib3DS.py 'texture_wrap_t':(gl.GL_CLAMP_TO_EDGE,
  (LGPL) VisionEgg src/Lib3DS.py max_dim = gl.glGetIntegerv( gl.GL_MAX_TEXTURE_SIZE )
  (LGPL) VisionEgg src/Lib3DS.py max_dim = gl.glGetIntegerv( gl.GL_MAX_TEXTURE_SIZE )
  (LGPL) VisionEgg src/Lib3DS.py max_dim = gl.glGetIntegerv( gl.GL_MAX_TEXTURE_SIZE )
  (LGPL) VisionEgg src/Lib3DS.py max_dim = gl.glGetIntegerv( gl.GL_MAX_TEXTURE_SIZE )
  (LGPL) VisionEgg src/Lib3DS.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_REPLACE)
  (LGPL) VisionEgg src/Lib3DS.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_REPLACE)
  (LGPL) VisionEgg src/Lib3DS.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_REPLACE)
  (LGPL) VisionEgg src/Lib3DS.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_REPLACE)
  (LGPL) VisionEgg src/MoreStimuli.py gl = OpenGL.GL
  (LGPL) VisionEgg src/MoreStimuli.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glLoadIdentity()
  (LGPL) VisionEgg src/MoreStimuli.py gl.glTranslate(self.parameters.center[0],self.parameters.center[1],0.0)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glRotate(self.parameters.orientation,0.0,0.0,1.0)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glColor(c[0],c[1],c[2],c[3])
  (LGPL) VisionEgg src/MoreStimuli.py gl.glDisable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glDisable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glDisable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glDisable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glDisable(gl.GL_BLEND)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glDisable(gl.GL_BLEND)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glVertex3f(-w,-h, 0.0);
  (LGPL) VisionEgg src/MoreStimuli.py gl.glVertex3f( w,-h, 0.0);
  (LGPL) VisionEgg src/MoreStimuli.py gl.glVertex3f( w, h, 0.0);
  (LGPL) VisionEgg src/MoreStimuli.py gl.glVertex3f(-w, h, 0.0);
  (LGPL) VisionEgg src/MoreStimuli.py gl.glEnd() # GL_QUADS
  (LGPL) VisionEgg src/MoreStimuli.py gl.glEnable(gl.GL_LINE_SMOOTH)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glEnable(gl.GL_LINE_SMOOTH)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glBlendFunc(gl.GL_SRC_ALPHA,gl.GL_ONE_MINUS_SRC_ALPHA)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glBlendFunc(gl.GL_SRC_ALPHA,gl.GL_ONE_MINUS_SRC_ALPHA)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glBlendFunc(gl.GL_SRC_ALPHA,gl.GL_ONE_MINUS_SRC_ALPHA)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glEnable(gl.GL_BLEND)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glEnable(gl.GL_BLEND)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glPolygonMode(gl.GL_FRONT_AND_BACK,gl.GL_LINE)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glPolygonMode(gl.GL_FRONT_AND_BACK,gl.GL_LINE)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glPolygonMode(gl.GL_FRONT_AND_BACK,gl.GL_LINE)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glVertex3f(-w,-h, 0.0);
  (LGPL) VisionEgg src/MoreStimuli.py gl.glVertex3f( w,-h, 0.0);
  (LGPL) VisionEgg src/MoreStimuli.py gl.glVertex3f( w, h, 0.0);
  (LGPL) VisionEgg src/MoreStimuli.py gl.glVertex3f(-w, h, 0.0);
  (LGPL) VisionEgg src/MoreStimuli.py gl.glEnd() # GL_QUADS
  (LGPL) VisionEgg src/MoreStimuli.py gl.glPolygonMode(gl.GL_FRONT_AND_BACK,gl.GL_FILL)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glPolygonMode(gl.GL_FRONT_AND_BACK,gl.GL_FILL)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glPolygonMode(gl.GL_FRONT_AND_BACK,gl.GL_FILL)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glDisable(gl.GL_LINE_SMOOTH)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glDisable(gl.GL_LINE_SMOOTH)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glLoadIdentity()
  (LGPL) VisionEgg src/MoreStimuli.py gl.glColor(c[0],c[1],c[2],c[3])
  (LGPL) VisionEgg src/MoreStimuli.py gl.glDisable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glDisable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glDisable(gl.GL_BLEND)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glDisable(gl.GL_BLEND)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glVertex3fv(p.vertex1);
  (LGPL) VisionEgg src/MoreStimuli.py gl.glVertex3fv(p.vertex2);
  (LGPL) VisionEgg src/MoreStimuli.py gl.glVertex3fv(p.vertex3);
  (LGPL) VisionEgg src/MoreStimuli.py gl.glVertex3fv(p.vertex4);
  (LGPL) VisionEgg src/MoreStimuli.py gl.glEnd() # GL_QUADS
  (LGPL) VisionEgg src/SphereMap.py import OpenGL.GL as gl
  (LGPL) VisionEgg src/SphereMap.py self.cached_display_list = gl.glGenLists(1) # Allocate a new display list
  (LGPL) VisionEgg src/SphereMap.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/SphereMap.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/SphereMap.py gl.glLoadIdentity()
  (LGPL) VisionEgg src/SphereMap.py gl.glNewList(self.cached_display_list,gl.GL_COMPILE)
  (LGPL) VisionEgg src/SphereMap.py gl.glNewList(self.cached_display_list,gl.GL_COMPILE)
  (LGPL) VisionEgg src/SphereMap.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/SphereMap.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexCoord2f(tex_l,tex_t)
  (LGPL) VisionEgg src/SphereMap.py gl.glVertex3f(x_start_upper, y_upper, z_start_upper)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexCoord2f(tex_r,tex_t)
  (LGPL) VisionEgg src/SphereMap.py gl.glVertex3f(x_stop_upper, y_upper, z_stop_upper)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexCoord2f(tex_r,tex_b)
  (LGPL) VisionEgg src/SphereMap.py gl.glVertex3f(x_stop_lower, y_lower, z_stop_lower)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexCoord2f(tex_l,tex_b)
  (LGPL) VisionEgg src/SphereMap.py gl.glVertex3f(x_start_lower, y_lower, z_start_lower)
  (LGPL) VisionEgg src/SphereMap.py gl.glEnd()
  (LGPL) VisionEgg src/SphereMap.py gl.glEndList()
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_DEPTH_TEST )
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_DEPTH_TEST )
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_TEXTURE_2D )  # Make sure textures are drawn
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_TEXTURE_2D )  # Make sure textures are drawn
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_BLEND ) # Contrast control implemented through blending
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_BLEND ) # Contrast control implemented through blending
  (LGPL) VisionEgg src/SphereMap.py gl.glBlendFunc( gl.GL_SRC_ALPHA, gl.GL_ONE_MINUS_SRC_ALPHA )
  (LGPL) VisionEgg src/SphereMap.py gl.glBlendFunc( gl.GL_SRC_ALPHA, gl.GL_ONE_MINUS_SRC_ALPHA )
  (LGPL) VisionEgg src/SphereMap.py gl.glBlendFunc( gl.GL_SRC_ALPHA, gl.GL_ONE_MINUS_SRC_ALPHA )
  (LGPL) VisionEgg src/SphereMap.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_DECAL)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_DECAL)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_DECAL)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_DECAL)
  (LGPL) VisionEgg src/SphereMap.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/SphereMap.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/SphereMap.py gl.glLoadIdentity()
  (LGPL) VisionEgg src/SphereMap.py gl.glColor(0.5,0.5,0.5,p.contrast) # Set the polygons' fragment color (implements contrast)
  (LGPL) VisionEgg src/SphereMap.py gl.glRotatef(p.center_azimuth,0.0,-1.0,0.0)
  (LGPL) VisionEgg src/SphereMap.py gl.glRotatef(p.center_elevation,1.0,0.0,0.0)
  (LGPL) VisionEgg src/SphereMap.py gl.glCallList(self.cached_display_list)
  (LGPL) VisionEgg src/SphereMap.py 'min_filter':(gl.GL_LINEAR,
  (LGPL) VisionEgg src/SphereMap.py self.texture_object_id = gl.glGenTextures(1) # Allocate a new texture object
  (LGPL) VisionEgg src/SphereMap.py self.cached_display_list_id = gl.glGenLists(1) # Allocate a new display list
  (LGPL) VisionEgg src/SphereMap.py gl.glBindTexture(gl.GL_TEXTURE_1D,self.texture_object_id)
  (LGPL) VisionEgg src/SphereMap.py gl.glBindTexture(gl.GL_TEXTURE_1D,self.texture_object_id)
  (LGPL) VisionEgg src/SphereMap.py max_dim = gl.glGetIntegerv(gl.GL_MAX_TEXTURE_SIZE)
  (LGPL) VisionEgg src/SphereMap.py max_dim = gl.glGetIntegerv(gl.GL_MAX_TEXTURE_SIZE)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexImage1D(gl.GL_PROXY_TEXTURE_1D,  # target
  (LGPL) VisionEgg src/SphereMap.py gl.glTexImage1D(gl.GL_PROXY_TEXTURE_1D,  # target
  (LGPL) VisionEgg src/SphereMap.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_1D,0,gl.GL_TEXTURE_WIDTH) == 0:
  (LGPL) VisionEgg src/SphereMap.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_1D,0,gl.GL_TEXTURE_WIDTH) == 0:
  (LGPL) VisionEgg src/SphereMap.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_1D,0,gl.GL_TEXTURE_WIDTH) == 0:
  (LGPL) VisionEgg src/SphereMap.py gl.glTexImage1D(gl.GL_TEXTURE_1D,        # target
  (LGPL) VisionEgg src/SphereMap.py gl.glTexImage1D(gl.GL_TEXTURE_1D,        # target
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_WRAP_S,gl.GL_REPEAT)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_WRAP_S,gl.GL_REPEAT)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_WRAP_S,gl.GL_REPEAT)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_WRAP_S,gl.GL_REPEAT)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_WRAP_T,gl.GL_REPEAT)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_WRAP_T,gl.GL_REPEAT)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_WRAP_T,gl.GL_REPEAT)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_WRAP_T,gl.GL_REPEAT)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MAG_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MAG_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MAG_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MAG_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MIN_FILTER,p.min_filter)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MIN_FILTER,p.min_filter)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MIN_FILTER,p.min_filter)
  (LGPL) VisionEgg src/SphereMap.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/SphereMap.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/SphereMap.py gl.glLoadIdentity()
  (LGPL) VisionEgg src/SphereMap.py gl.glNewList(self.cached_display_list_id,gl.GL_COMPILE)
  (LGPL) VisionEgg src/SphereMap.py gl.glNewList(self.cached_display_list_id,gl.GL_COMPILE)
  (LGPL) VisionEgg src/SphereMap.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/SphereMap.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexCoord2f(tex_l,tex_t)
  (LGPL) VisionEgg src/SphereMap.py gl.glVertex3f(x_start_upper, y_upper, z_start_upper)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexCoord2f(tex_r,tex_t)
  (LGPL) VisionEgg src/SphereMap.py gl.glVertex3f(x_stop_upper, y_upper, z_stop_upper)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexCoord2f(tex_r,tex_b)
  (LGPL) VisionEgg src/SphereMap.py gl.glVertex3f(x_stop_lower, y_lower, z_stop_lower)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexCoord2f(tex_l,tex_b)
  (LGPL) VisionEgg src/SphereMap.py gl.glVertex3f(x_start_lower, y_lower, z_start_lower)
  (LGPL) VisionEgg src/SphereMap.py gl.glEnd()
  (LGPL) VisionEgg src/SphereMap.py gl.glEndList()
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_DEPTH_TEST )
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_DEPTH_TEST )
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_TEXTURE_1D )  # Make sure textures are drawn
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_TEXTURE_1D )  # Make sure textures are drawn
  (LGPL) VisionEgg src/SphereMap.py gl.glDisable( gl.GL_TEXTURE_2D )
  (LGPL) VisionEgg src/SphereMap.py gl.glDisable( gl.GL_TEXTURE_2D )
  (LGPL) VisionEgg src/SphereMap.py gl.glDisable( gl.GL_BLEND )
  (LGPL) VisionEgg src/SphereMap.py gl.glDisable( gl.GL_BLEND )
  (LGPL) VisionEgg src/SphereMap.py gl.glBindTexture(gl.GL_TEXTURE_1D,self.texture_object_id)
  (LGPL) VisionEgg src/SphereMap.py gl.glBindTexture(gl.GL_TEXTURE_1D,self.texture_object_id)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MIN_FILTER,p.min_filter)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MIN_FILTER,p.min_filter)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MIN_FILTER,p.min_filter)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexSubImage1D(gl.GL_TEXTURE_1D,           # target
  (LGPL) VisionEgg src/SphereMap.py gl.glTexSubImage1D(gl.GL_TEXTURE_1D,           # target
  (LGPL) VisionEgg src/SphereMap.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_REPLACE)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_REPLACE)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_REPLACE)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_REPLACE)
  (LGPL) VisionEgg src/SphereMap.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/SphereMap.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/SphereMap.py gl.glLoadIdentity()
  (LGPL) VisionEgg src/SphereMap.py gl.glRotatef(p.grating_center_azimuth,0.0,-1.0,0.0)
  (LGPL) VisionEgg src/SphereMap.py gl.glRotatef(p.grating_center_elevation,1.0,0.0,0.0)
  (LGPL) VisionEgg src/SphereMap.py gl.glRotatef(p.orientation,0.0,0.0,1.0)
  (LGPL) VisionEgg src/SphereMap.py gl.glCallList(self.cached_display_list_id)
  (LGPL) VisionEgg src/SphereMap.py gl.glDisable( gl.GL_TEXTURE_1D )
  (LGPL) VisionEgg src/SphereMap.py gl.glDisable( gl.GL_TEXTURE_1D )
  (LGPL) VisionEgg src/SphereMap.py self.texture_object_id = gl.glGenTextures(1)
  (LGPL) VisionEgg src/SphereMap.py self.windowed_display_list_id = gl.glGenLists(1) # Allocate a new display list
  (LGPL) VisionEgg src/SphereMap.py self.opaque_display_list_id = gl.glGenLists(1) # Allocate a new display list
  (LGPL) VisionEgg src/SphereMap.py gl.glBindTexture(gl.GL_TEXTURE_2D,self.texture_object_id)
  (LGPL) VisionEgg src/SphereMap.py gl.glBindTexture(gl.GL_TEXTURE_2D,self.texture_object_id)
  (LGPL) VisionEgg src/SphereMap.py max_dim = gl.glGetIntegerv(gl.GL_MAX_TEXTURE_SIZE)
  (LGPL) VisionEgg src/SphereMap.py max_dim = gl.glGetIntegerv(gl.GL_MAX_TEXTURE_SIZE)
  (LGPL) VisionEgg src/SphereMap.py self.gl_internal_format = gl.GL_ALPHA # change from luminance to alpha
  (LGPL) VisionEgg src/SphereMap.py self.format = gl.GL_ALPHA
  (LGPL) VisionEgg src/SphereMap.py gl.glTexImage2D(gl.GL_PROXY_TEXTURE_2D,      # target
  (LGPL) VisionEgg src/SphereMap.py gl.glTexImage2D(gl.GL_PROXY_TEXTURE_2D,      # target
  (LGPL) VisionEgg src/SphereMap.py if (gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_2D,0,gl.GL_TEXTURE_WIDTH) == 0) or (gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_2D,0,gl.GL_TEXTURE_HEIGHT) == 0):
  (LGPL) VisionEgg src/SphereMap.py if (gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_2D,0,gl.GL_TEXTURE_WIDTH) == 0) or (gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_2D,0,gl.GL_TEXTURE_HEIGHT) == 0):
  (LGPL) VisionEgg src/SphereMap.py if (gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_2D,0,gl.GL_TEXTURE_WIDTH) == 0) or (gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_2D,0,gl.GL_TEXTURE_HEIGHT) == 0):
  (LGPL) VisionEgg src/SphereMap.py if (gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_2D,0,gl.GL_TEXTURE_WIDTH) == 0) or (gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_2D,0,gl.GL_TEXTURE_HEIGHT) == 0):
  (LGPL) VisionEgg src/SphereMap.py if (gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_2D,0,gl.GL_TEXTURE_WIDTH) == 0) or (gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_2D,0,gl.GL_TEXTURE_HEIGHT) == 0):
  (LGPL) VisionEgg src/SphereMap.py if (gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_2D,0,gl.GL_TEXTURE_WIDTH) == 0) or (gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_2D,0,gl.GL_TEXTURE_HEIGHT) == 0):
  (LGPL) VisionEgg src/SphereMap.py gl.glTexImage2D(gl.GL_TEXTURE_2D,      # target
  (LGPL) VisionEgg src/SphereMap.py gl.glTexImage2D(gl.GL_TEXTURE_2D,      # target
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_2D,gl.GL_TEXTURE_WRAP_S,gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_2D,gl.GL_TEXTURE_WRAP_S,gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_2D,gl.GL_TEXTURE_WRAP_S,gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_2D,gl.GL_TEXTURE_WRAP_S,gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_2D,gl.GL_TEXTURE_WRAP_T,gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_2D,gl.GL_TEXTURE_WRAP_T,gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_2D,gl.GL_TEXTURE_WRAP_T,gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_2D,gl.GL_TEXTURE_WRAP_T,gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_2D,gl.GL_TEXTURE_MAG_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_2D,gl.GL_TEXTURE_MAG_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_2D,gl.GL_TEXTURE_MAG_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_2D,gl.GL_TEXTURE_MAG_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_2D,gl.GL_TEXTURE_MIN_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_2D,gl.GL_TEXTURE_MIN_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_2D,gl.GL_TEXTURE_MIN_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_2D,gl.GL_TEXTURE_MIN_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/SphereMap.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/SphereMap.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/SphereMap.py gl.glLoadIdentity()
  (LGPL) VisionEgg src/SphereMap.py gl.glNewList(self.windowed_display_list_id,gl.GL_COMPILE)
  (LGPL) VisionEgg src/SphereMap.py gl.glNewList(self.windowed_display_list_id,gl.GL_COMPILE)
  (LGPL) VisionEgg src/SphereMap.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/SphereMap.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexCoord2f(x_start_upper*g+o,y_upper*g+o)
  (LGPL) VisionEgg src/SphereMap.py gl.glVertex3f(x_start_upper, y_upper, z_start_upper)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexCoord2f(x_stop_upper*g+o,y_upper*g+o)
  (LGPL) VisionEgg src/SphereMap.py gl.glVertex3f(x_stop_upper, y_upper, z_stop_upper)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexCoord2f(x_stop_lower*g+o,y_lower*g+o)
  (LGPL) VisionEgg src/SphereMap.py gl.glVertex3f(x_stop_lower, y_lower, z_stop_lower)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexCoord2f(x_start_lower*g+o,y_lower*g+o)
  (LGPL) VisionEgg src/SphereMap.py gl.glVertex3f(x_start_lower, y_lower, z_start_lower)
  (LGPL) VisionEgg src/SphereMap.py gl.glEnd()
  (LGPL) VisionEgg src/SphereMap.py gl.glEndList()
  (LGPL) VisionEgg src/SphereMap.py gl.glNewList(self.opaque_display_list_id,gl.GL_COMPILE)
  (LGPL) VisionEgg src/SphereMap.py gl.glNewList(self.opaque_display_list_id,gl.GL_COMPILE)
  (LGPL) VisionEgg src/SphereMap.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/SphereMap.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/SphereMap.py gl.glVertex3f(x_start_upper, y_upper, z_start_upper)
  (LGPL) VisionEgg src/SphereMap.py gl.glVertex3f(x_stop_upper, y_upper, z_stop_upper)
  (LGPL) VisionEgg src/SphereMap.py gl.glVertex3f(x_stop_lower, y_lower, z_stop_lower)
  (LGPL) VisionEgg src/SphereMap.py gl.glVertex3f(x_start_lower, y_lower, z_start_lower)
  (LGPL) VisionEgg src/SphereMap.py gl.glEnd()
  (LGPL) VisionEgg src/SphereMap.py gl.glEndList()
  (LGPL) VisionEgg src/SphereMap.py self.gl_internal_format = gl.GL_ALPHA # change from luminance to alpha
  (LGPL) VisionEgg src/SphereMap.py self.format = gl.GL_ALPHA
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_DEPTH_TEST )
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_DEPTH_TEST )
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_TEXTURE_2D )
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_TEXTURE_2D )
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_BLEND )
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_BLEND )
  (LGPL) VisionEgg src/SphereMap.py gl.glBlendFunc( gl.GL_ONE_MINUS_SRC_ALPHA, gl.GL_SRC_ALPHA ) # alpha 1.0 = transparent
  (LGPL) VisionEgg src/SphereMap.py gl.glBlendFunc( gl.GL_ONE_MINUS_SRC_ALPHA, gl.GL_SRC_ALPHA ) # alpha 1.0 = transparent
  (LGPL) VisionEgg src/SphereMap.py gl.glBlendFunc( gl.GL_ONE_MINUS_SRC_ALPHA, gl.GL_SRC_ALPHA ) # alpha 1.0 = transparent
  (LGPL) VisionEgg src/SphereMap.py gl.glBindTexture(gl.GL_TEXTURE_2D,self.texture_object_id)
  (LGPL) VisionEgg src/SphereMap.py gl.glBindTexture(gl.GL_TEXTURE_2D,self.texture_object_id)
  (LGPL) VisionEgg src/SphereMap.py gl.glColor( *p.opaque_color )
  (LGPL) VisionEgg src/SphereMap.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_REPLACE)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_REPLACE)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_REPLACE)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_REPLACE)
  (LGPL) VisionEgg src/SphereMap.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/SphereMap.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/SphereMap.py gl.glLoadIdentity()
  (LGPL) VisionEgg src/SphereMap.py gl.glRotatef(p.window_center_azimuth,0.0,-1.0,0.0)
  (LGPL) VisionEgg src/SphereMap.py gl.glRotatef(p.window_center_elevation,1.0,0.0,0.0)
  (LGPL) VisionEgg src/SphereMap.py gl.glCallList(self.windowed_display_list_id)
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_TEXTURE_2D )
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_TEXTURE_2D )
  (LGPL) VisionEgg src/SphereMap.py gl.glCallList(self.opaque_display_list_id)
  (LGPL) VisionEgg src/Text.py gl = OpenGL.GL
  (LGPL) VisionEgg src/Text.py kw['internal_format'] = gl.GL_RGBA
  (LGPL) VisionEgg src/Text.py kw['texture_min_filter'] = gl.GL_LINEAR
  (LGPL) VisionEgg src/Text.py gl.glDisable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/Text.py gl.glDisable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/Text.py gl.glDisable(gl.GL_BLEND)
  (LGPL) VisionEgg src/Text.py gl.glDisable(gl.GL_BLEND)
  (LGPL) VisionEgg src/Text.py gl.glDisable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Text.py gl.glDisable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Text.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/Text.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/Text.py gl.glLoadIdentity()
  (LGPL) VisionEgg src/Text.py gl.glTranslate(self.parameters.lowerleft[0],self.parameters.lowerleft[1],0.0)
  (LGPL) VisionEgg src/Text.py gl.glColor(c[0],c[1],c[2],c[3])
  (LGPL) VisionEgg src/Text.py gl.glDisable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/Text.py gl.glDisable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/Text.py gl.glRasterPos3f(0.0,0.0,0.0)
  (LGPL) VisionEgg src/Text.py gl.glDisable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/Text.py gl.glDisable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/Text.py gl.glDisable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Text.py gl.glDisable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Text.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/Text.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/Text.py gl.glLoadIdentity()
  (LGPL) VisionEgg src/Text.py gl.glTranslate(self.parameters.lowerleft[0],self.parameters.lowerleft[1],0.0)
  (LGPL) VisionEgg src/Text.py gl.glRotate(self.parameters.orientation,0.0,0.0,1.0)
  (LGPL) VisionEgg src/Text.py gl.glColor(c[0],c[1],c[2],c[3])
  (LGPL) VisionEgg src/Text.py gl.glLineWidth(self.parameters.linewidth)
  (LGPL) VisionEgg src/Text.py gl.glEnable(gl.GL_BLEND)
  (LGPL) VisionEgg src/Text.py gl.glEnable(gl.GL_BLEND)
  (LGPL) VisionEgg src/Text.py gl.glBlendFunc(gl.GL_SRC_ALPHA,gl.GL_ONE_MINUS_SRC_ALPHA)
  (LGPL) VisionEgg src/Text.py gl.glBlendFunc(gl.GL_SRC_ALPHA,gl.GL_ONE_MINUS_SRC_ALPHA)
  (LGPL) VisionEgg src/Text.py gl.glBlendFunc(gl.GL_SRC_ALPHA,gl.GL_ONE_MINUS_SRC_ALPHA)
  (LGPL) VisionEgg src/Text.py gl.glEnable(gl.GL_LINE_SMOOTH)
  (LGPL) VisionEgg src/Text.py gl.glEnable(gl.GL_LINE_SMOOTH)
  (LGPL) VisionEgg src/Text.py gl.glDisable(gl.GL_BLEND)
  (LGPL) VisionEgg src/Text.py gl.glDisable(gl.GL_BLEND)
  (LGPL) VisionEgg src/Textures.py import OpenGL.GL as gl
  (LGPL) VisionEgg src/Textures.py setattr(gl,attr,getattr(OpenGL.GL.ARB.multitexture,attr))
  (LGPL) VisionEgg src/Textures.py gl.GL_CLAMP_TO_EDGE = OpenGL.GL.SGIS.texture_edge_clamp.GL_CLAMP_TO_EDGE_SGIS
  (LGPL) VisionEgg src/Textures.py del gl.GL_CLAMP_TO_EDGE
  (LGPL) VisionEgg src/Textures.py gl.GL_CLAMP_TO_EDGE = gl.GL_CLAMP
  (LGPL) VisionEgg src/Textures.py gl.GL_CLAMP_TO_EDGE = gl.GL_CLAMP
  (LGPL) VisionEgg src/Textures.py if "GL_CLAMP_TO_EDGE" not in dir(gl):
  (LGPL) VisionEgg src/Textures.py gl.GL_CLAMP_TO_EDGE = 0x812F # This value is in Mesa gl.h and nVidia gl.h, so hopefully it's OK for others
  (LGPL) VisionEgg src/Textures.py def load(self, texture_object, build_mipmaps = 1, rescale_original_to_fill_texture_object = 0, internal_format=gl.GL_RGB):
  (LGPL) VisionEgg src/Textures.py if not gl.glInitMultitextureARB():
  (LGPL) VisionEgg src/Textures.py self.multitexture_unit = getattr(gl,attr_name)
  (LGPL) VisionEgg src/Textures.py self.min_filter = gl.GL_NEAREST_MIPMAP_LINEAR
  (LGPL) VisionEgg src/Textures.py self.mag_filter = gl.GL_LINEAR
  (LGPL) VisionEgg src/Textures.py self.wrap_mode_s = gl.GL_REPEAT
  (LGPL) VisionEgg src/Textures.py self.wrap_mode_t = gl.GL_REPEAT
  (LGPL) VisionEgg src/Textures.py self.wrap_mode_r = gl.GL_REPEAT
  (LGPL) VisionEgg src/Textures.py self.target = gl.GL_TEXTURE_1D
  (LGPL) VisionEgg src/Textures.py self.target = gl.GL_TEXTURE_2D
  (LGPL) VisionEgg src/Textures.py self.target = gl.GL_TEXTURE_3D
  (LGPL) VisionEgg src/Textures.py self.target = gl.GL_TEXTURE_CUBE
  (LGPL) VisionEgg src/Textures.py self.gl_id = gl.glGenTextures(1)
  (LGPL) VisionEgg src/Textures.py self.gl_module = gl # keep so we there's no error in __del__
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(self.multitexture_unit)
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture(self.target, self.gl_id)
  (LGPL) VisionEgg src/Textures.py gl.glTexParameteri( self.target, gl.GL_TEXTURE_MIN_FILTER,filter)
  (LGPL) VisionEgg src/Textures.py gl.glTexParameteri( self.target, gl.GL_TEXTURE_MIN_FILTER,filter)
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(self.multitexture_unit)
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture( self.target, self.gl_id)
  (LGPL) VisionEgg src/Textures.py gl.glTexParameteri( self.target, gl.GL_TEXTURE_MAG_FILTER, filter)
  (LGPL) VisionEgg src/Textures.py gl.glTexParameteri( self.target, gl.GL_TEXTURE_MAG_FILTER, filter)
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(self.multitexture_unit)
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture( self.target, self.gl_id)
  (LGPL) VisionEgg src/Textures.py gl.glTexParameteri( self.target, gl.GL_TEXTURE_WRAP_S, wrap_mode)
  (LGPL) VisionEgg src/Textures.py gl.glTexParameteri( self.target, gl.GL_TEXTURE_WRAP_S, wrap_mode)
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(self.multitexture_unit)
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture( self.target, self.gl_id)
  (LGPL) VisionEgg src/Textures.py gl.glTexParameteri( self.target, gl.GL_TEXTURE_WRAP_T, wrap_mode)
  (LGPL) VisionEgg src/Textures.py gl.glTexParameteri( self.target, gl.GL_TEXTURE_WRAP_T, wrap_mode)
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(self.multitexture_unit)
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture( self.target, self.gl_id)
  (LGPL) VisionEgg src/Textures.py gl.glTexParameteri( self.target, gl.GL_TEXTURE_WRAP_R, wrap_mode)
  (LGPL) VisionEgg src/Textures.py gl.glTexParameteri( self.target, gl.GL_TEXTURE_WRAP_R, wrap_mode)
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(self.multitexture_unit)
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture( self.target, self.gl_id)
  (LGPL) VisionEgg src/Textures.py gl.glTexParameteriv( self.target, gl.GL_TEXTURE_BORDER_COLOR, border_color)
  (LGPL) VisionEgg src/Textures.py gl.glTexParameteriv( self.target, gl.GL_TEXTURE_BORDER_COLOR, border_color)
  (LGPL) VisionEgg src/Textures.py internal_format = gl.GL_RGB,
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(self.multitexture_unit)
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture(self.target, self.gl_id)
  (LGPL) VisionEgg src/Textures.py data_format = gl.GL_LUMINANCE
  (LGPL) VisionEgg src/Textures.py data_format = gl.GL_RGB
  (LGPL) VisionEgg src/Textures.py data_format = gl.GL_RGBA
  (LGPL) VisionEgg src/Textures.py data_format = gl.GL_LUMINANCE
  (LGPL) VisionEgg src/Textures.py data_format = gl.GL_RGB
  (LGPL) VisionEgg src/Textures.py data_format = gl.GL_RGBA
  (LGPL) VisionEgg src/Textures.py data_format = gl.GL_RGBA
  (LGPL) VisionEgg src/Textures.py data_format = gl.GL_RGB
  (LGPL) VisionEgg src/Textures.py data_type = gl.GL_UNSIGNED_BYTE
  (LGPL) VisionEgg src/Textures.py if data_type == gl.GL_UNSIGNED_BYTE:
  (LGPL) VisionEgg src/Textures.py max_dim = gl.glGetIntegerv( gl.GL_MAX_TEXTURE_SIZE )
  (LGPL) VisionEgg src/Textures.py max_dim = gl.glGetIntegerv( gl.GL_MAX_TEXTURE_SIZE )
  (LGPL) VisionEgg src/Textures.py gl.glTexImage1Dub(gl.GL_PROXY_TEXTURE_1D,
  (LGPL) VisionEgg src/Textures.py gl.glTexImage1Dub(gl.GL_PROXY_TEXTURE_1D,
  (LGPL) VisionEgg src/Textures.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_1D,mipmap_level,gl.GL_TEXTURE_WIDTH) == 0:
  (LGPL) VisionEgg src/Textures.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_1D,mipmap_level,gl.GL_TEXTURE_WIDTH) == 0:
  (LGPL) VisionEgg src/Textures.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_1D,mipmap_level,gl.GL_TEXTURE_WIDTH) == 0:
  (LGPL) VisionEgg src/Textures.py target = gl.GL_PROXY_TEXTURE_2D
  (LGPL) VisionEgg src/Textures.py target = gl.GL_PROXY_CUBE_MAP
  (LGPL) VisionEgg src/Textures.py gl.glTexImage2D(target,
  (LGPL) VisionEgg src/Textures.py if gl.glGetTexLevelParameteriv(target,mipmap_level,gl.GL_TEXTURE_WIDTH) == 0:
  (LGPL) VisionEgg src/Textures.py if gl.glGetTexLevelParameteriv(target,mipmap_level,gl.GL_TEXTURE_WIDTH) == 0:
  (LGPL) VisionEgg src/Textures.py if gl.glGetTexLevelParameteriv(target,mipmap_level,gl.GL_TEXTURE_HEIGHT) == 0:
  (LGPL) VisionEgg src/Textures.py if gl.glGetTexLevelParameteriv(target,mipmap_level,gl.GL_TEXTURE_HEIGHT) == 0:
  (LGPL) VisionEgg src/Textures.py gl.glTexImage3Dub(gl.GL_PROXY_TEXTURE_3D,
  (LGPL) VisionEgg src/Textures.py gl.glTexImage3Dub(gl.GL_PROXY_TEXTURE_3D,
  (LGPL) VisionEgg src/Textures.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_3D,mipmap_level,gl.GL_TEXTURE_WIDTH) == 0:
  (LGPL) VisionEgg src/Textures.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_3D,mipmap_level,gl.GL_TEXTURE_WIDTH) == 0:
  (LGPL) VisionEgg src/Textures.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_3D,mipmap_level,gl.GL_TEXTURE_WIDTH) == 0:
  (LGPL) VisionEgg src/Textures.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_3D,mipmap_level,gl.GL_TEXTURE_HEIGHT) == 0:
  (LGPL) VisionEgg src/Textures.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_3D,mipmap_level,gl.GL_TEXTURE_HEIGHT) == 0:
  (LGPL) VisionEgg src/Textures.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_3D,mipmap_level,gl.GL_TEXTURE_HEIGHT) == 0:
  (LGPL) VisionEgg src/Textures.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_3D,mipmap_level,gl.GL_TEXTURE_DEPTH) == 0:
  (LGPL) VisionEgg src/Textures.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_3D,mipmap_level,gl.GL_TEXTURE_DEPTH) == 0:
  (LGPL) VisionEgg src/Textures.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_3D,mipmap_level,gl.GL_TEXTURE_DEPTH) == 0:
  (LGPL) VisionEgg src/Textures.py gl.glTexImage1Dub(gl.GL_TEXTURE_1D,
  (LGPL) VisionEgg src/Textures.py gl.glTexImage1Dub(gl.GL_TEXTURE_1D,
  (LGPL) VisionEgg src/Textures.py target = gl.GL_TEXTURE_2D
  (LGPL) VisionEgg src/Textures.py target = getattr(gl,target_name)
  (LGPL) VisionEgg src/Textures.py gl.glTexImage2D(target,
  (LGPL) VisionEgg src/Textures.py gl.glTexImage3Dub(gl.GL_TEXTURE_3D,
  (LGPL) VisionEgg src/Textures.py gl.glTexImage3Dub(gl.GL_TEXTURE_3D,
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(self.multitexture_unit)
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture(self.target, self.gl_id)
  (LGPL) VisionEgg src/Textures.py data_format = gl.GL_LUMINANCE
  (LGPL) VisionEgg src/Textures.py data_format = gl.GL_RGB
  (LGPL) VisionEgg src/Textures.py data_format = gl.GL_RGBA
  (LGPL) VisionEgg src/Textures.py data_format = gl.GL_LUMINANCE
  (LGPL) VisionEgg src/Textures.py data_format = gl.GL_RGB
  (LGPL) VisionEgg src/Textures.py data_format = gl.GL_RGBA
  (LGPL) VisionEgg src/Textures.py data_format = gl.GL_RGBA
  (LGPL) VisionEgg src/Textures.py data_format = gl.GL_RGB
  (LGPL) VisionEgg src/Textures.py data_type = gl.GL_UNSIGNED_BYTE
  (LGPL) VisionEgg src/Textures.py if data_type == gl.GL_UNSIGNED_BYTE:
  (LGPL) VisionEgg src/Textures.py gl.glTexSubImage1D(gl.GL_TEXTURE_1D,
  (LGPL) VisionEgg src/Textures.py gl.glTexSubImage1D(gl.GL_TEXTURE_1D,
  (LGPL) VisionEgg src/Textures.py target = gl.GL_TEXTURE_2D
  (LGPL) VisionEgg src/Textures.py target = getattr(gl,target_name)
  (LGPL) VisionEgg src/Textures.py gl.glTexSubImage2D(target,
  (LGPL) VisionEgg src/Textures.py internal_format = gl.GL_RGB,
  (LGPL) VisionEgg src/Textures.py gl.glReadBuffer( gl.GL_FRONT )
  (LGPL) VisionEgg src/Textures.py gl.glReadBuffer( gl.GL_FRONT )
  (LGPL) VisionEgg src/Textures.py gl.glReadBuffer( gl.GL_BACK )
  (LGPL) VisionEgg src/Textures.py gl.glReadBuffer( gl.GL_BACK )
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(self.multitexture_unit)
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture(self.target, self.gl_id)
  (LGPL) VisionEgg src/Textures.py gl.glCopyTexImage1D(gl.GL_TEXTURE_1D,
  (LGPL) VisionEgg src/Textures.py gl.glCopyTexImage1D(gl.GL_TEXTURE_1D,
  (LGPL) VisionEgg src/Textures.py target = gl.GL_TEXTURE_2D
  (LGPL) VisionEgg src/Textures.py target = getattr(gl,target_name)
  (LGPL) VisionEgg src/Textures.py gl.glCopyTexImage2D(target,
  (LGPL) VisionEgg src/Textures.py 'texture_mag_filter':(gl.GL_LINEAR,
  (LGPL) VisionEgg src/Textures.py 'internal_format':(gl.GL_RGB,
  (LGPL) VisionEgg src/Textures.py _mipmap_modes = [gl.GL_LINEAR_MIPMAP_LINEAR,gl.GL_LINEAR_MIPMAP_NEAREST,
  (LGPL) VisionEgg src/Textures.py _mipmap_modes = [gl.GL_LINEAR_MIPMAP_LINEAR,gl.GL_LINEAR_MIPMAP_NEAREST,
  (LGPL) VisionEgg src/Textures.py gl.GL_NEAREST_MIPMAP_LINEAR,gl.GL_NEAREST_MIPMAP_NEAREST]
  (LGPL) VisionEgg src/Textures.py gl.GL_NEAREST_MIPMAP_LINEAR,gl.GL_NEAREST_MIPMAP_NEAREST]
  (LGPL) VisionEgg src/Textures.py self.parameters.texture_min_filter = gl.GL_LINEAR_MIPMAP_LINEAR
  (LGPL) VisionEgg src/Textures.py self.parameters.texture_min_filter = gl.GL_LINEAR
  (LGPL) VisionEgg src/Textures.py self.parameters.texture_wrap_s = gl.GL_CLAMP_TO_EDGE
  (LGPL) VisionEgg src/Textures.py self.parameters.texture_wrap_t = gl.GL_CLAMP_TO_EDGE
  (LGPL) VisionEgg src/Textures.py max_dim = gl.glGetIntegerv( gl.GL_MAX_TEXTURE_SIZE )
  (LGPL) VisionEgg src/Textures.py max_dim = gl.glGetIntegerv( gl.GL_MAX_TEXTURE_SIZE )
  (LGPL) VisionEgg src/Textures.py if not gl.glInitMultitextureARB():
  (LGPL) VisionEgg src/Textures.py data_format=gl.GL_ALPHA,
  (LGPL) VisionEgg src/Textures.py internal_format=gl.GL_ALPHA)
  (LGPL) VisionEgg src/Textures.py self.texture_object.set_min_filter(gl.GL_LINEAR) # turn off mipmaps for mask
  (LGPL) VisionEgg src/Textures.py self.texture_object.set_wrap_mode_s(gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/Textures.py self.texture_object.set_wrap_mode_t(gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/Textures.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_MODULATE)
  (LGPL) VisionEgg src/Textures.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_MODULATE)
  (LGPL) VisionEgg src/Textures.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_MODULATE)
  (LGPL) VisionEgg src/Textures.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_MODULATE)
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(gl.GL_TEXTURE0_ARB)
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(gl.GL_TEXTURE0_ARB)
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(gl.GL_TEXTURE1_ARB) # bind 2nd texture unit to mask texture
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(gl.GL_TEXTURE1_ARB) # bind 2nd texture unit to mask texture
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture(gl.GL_TEXTURE_2D, self.texture_object.gl_id)
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture(gl.GL_TEXTURE_2D, self.texture_object.gl_id)
  (LGPL) VisionEgg src/Textures.py gl.glEnable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/Textures.py gl.glEnable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/Textures.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/Textures.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/Textures.py gl.glMultiTexCoord2fARB(gl.GL_TEXTURE0_ARB,lt,bt)
  (LGPL) VisionEgg src/Textures.py gl.glMultiTexCoord2fARB(gl.GL_TEXTURE0_ARB,lt,bt)
  (LGPL) VisionEgg src/Textures.py gl.glMultiTexCoord2fARB(gl.GL_TEXTURE1_ARB,0.0,0.0)
  (LGPL) VisionEgg src/Textures.py gl.glMultiTexCoord2fARB(gl.GL_TEXTURE1_ARB,0.0,0.0)
  (LGPL) VisionEgg src/Textures.py gl.glVertex3f(le,be,depth)
  (LGPL) VisionEgg src/Textures.py gl.glMultiTexCoord2fARB(gl.GL_TEXTURE0_ARB,rt,bt)
  (LGPL) VisionEgg src/Textures.py gl.glMultiTexCoord2fARB(gl.GL_TEXTURE0_ARB,rt,bt)
  (LGPL) VisionEgg src/Textures.py gl.glMultiTexCoord2fARB(gl.GL_TEXTURE1_ARB,1.0,0.0)
  (LGPL) VisionEgg src/Textures.py gl.glMultiTexCoord2fARB(gl.GL_TEXTURE1_ARB,1.0,0.0)
  (LGPL) VisionEgg src/Textures.py gl.glVertex3f(re,be,depth)
  (LGPL) VisionEgg src/Textures.py gl.glMultiTexCoord2fARB(gl.GL_TEXTURE0_ARB,rt,tt)
  (LGPL) VisionEgg src/Textures.py gl.glMultiTexCoord2fARB(gl.GL_TEXTURE0_ARB,rt,tt)
  (LGPL) VisionEgg src/Textures.py gl.glMultiTexCoord2fARB(gl.GL_TEXTURE1_ARB,1.0,1.0)
  (LGPL) VisionEgg src/Textures.py gl.glMultiTexCoord2fARB(gl.GL_TEXTURE1_ARB,1.0,1.0)
  (LGPL) VisionEgg src/Textures.py gl.glVertex3f(re,te,depth)
  (LGPL) VisionEgg src/Textures.py gl.glMultiTexCoord2fARB(gl.GL_TEXTURE0_ARB,lt,tt)
  (LGPL) VisionEgg src/Textures.py gl.glMultiTexCoord2fARB(gl.GL_TEXTURE0_ARB,lt,tt)
  (LGPL) VisionEgg src/Textures.py gl.glMultiTexCoord2fARB(gl.GL_TEXTURE1_ARB,0.0,1.0)
  (LGPL) VisionEgg src/Textures.py gl.glMultiTexCoord2fARB(gl.GL_TEXTURE1_ARB,0.0,1.0)
  (LGPL) VisionEgg src/Textures.py gl.glVertex3f(le,te,depth)
  (LGPL) VisionEgg src/Textures.py gl.glEnd() # GL_QUADS
  (LGPL) VisionEgg src/Textures.py gl.glDisable(gl.GL_TEXTURE_2D) # turn off texturing in this texture unit
  (LGPL) VisionEgg src/Textures.py gl.glDisable(gl.GL_TEXTURE_2D) # turn off texturing in this texture unit
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(gl.GL_TEXTURE0_ARB) # return to 1st texture unit
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(gl.GL_TEXTURE0_ARB) # return to 1st texture unit
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(gl.GL_TEXTURE0_ARB)
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(gl.GL_TEXTURE0_ARB)
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(gl.GL_TEXTURE0_ARB)
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(gl.GL_TEXTURE0_ARB)
  (LGPL) VisionEgg src/Textures.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/Textures.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/Textures.py gl.glLoadIdentity()
  (LGPL) VisionEgg src/Textures.py gl.glDisable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Textures.py gl.glDisable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Textures.py gl.glEnable( gl.GL_TEXTURE_2D )
  (LGPL) VisionEgg src/Textures.py gl.glEnable( gl.GL_TEXTURE_2D )
  (LGPL) VisionEgg src/Textures.py gl.glEnable( gl.GL_BLEND )
  (LGPL) VisionEgg src/Textures.py gl.glEnable( gl.GL_BLEND )
  (LGPL) VisionEgg src/Textures.py gl.glBlendFunc( gl.GL_SRC_ALPHA, gl.GL_ONE_MINUS_SRC_ALPHA )
  (LGPL) VisionEgg src/Textures.py gl.glBlendFunc( gl.GL_SRC_ALPHA, gl.GL_ONE_MINUS_SRC_ALPHA )
  (LGPL) VisionEgg src/Textures.py gl.glBlendFunc( gl.GL_SRC_ALPHA, gl.GL_ONE_MINUS_SRC_ALPHA )
  (LGPL) VisionEgg src/Textures.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_MODULATE)
  (LGPL) VisionEgg src/Textures.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_MODULATE)
  (LGPL) VisionEgg src/Textures.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_MODULATE)
  (LGPL) VisionEgg src/Textures.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_MODULATE)
  (LGPL) VisionEgg src/Textures.py gl.glColor(p.color[0],p.color[1],p.color[2],p.max_alpha)
  (LGPL) VisionEgg src/Textures.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/Textures.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(tex.buf_lf,tex.buf_bf)
  (LGPL) VisionEgg src/Textures.py gl.glVertex2f(l,b)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(tex.buf_rf,tex.buf_bf)
  (LGPL) VisionEgg src/Textures.py gl.glVertex2f(r,b)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(tex.buf_rf,tex.buf_tf)
  (LGPL) VisionEgg src/Textures.py gl.glVertex2f(r,t)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(tex.buf_lf,tex.buf_tf)
  (LGPL) VisionEgg src/Textures.py gl.glVertex2f(l,t)
  (LGPL) VisionEgg src/Textures.py gl.glEnd() # GL_QUADS
  (LGPL) VisionEgg src/Textures.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/Textures.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/Textures.py gl.glLoadIdentity()
  (LGPL) VisionEgg src/Textures.py gl.glEnable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Textures.py gl.glEnable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Textures.py gl.glDisable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Textures.py gl.glDisable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Textures.py gl.glDisable(gl.GL_BLEND)
  (LGPL) VisionEgg src/Textures.py gl.glDisable(gl.GL_BLEND)
  (LGPL) VisionEgg src/Textures.py gl.glEnable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/Textures.py gl.glEnable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture(gl.GL_TEXTURE_2D,self.texture_object)
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture(gl.GL_TEXTURE_2D,self.texture_object)
  (LGPL) VisionEgg src/Textures.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_REPLACE)
  (LGPL) VisionEgg src/Textures.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_REPLACE)
  (LGPL) VisionEgg src/Textures.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_REPLACE)
  (LGPL) VisionEgg src/Textures.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_REPLACE)
  (LGPL) VisionEgg src/Textures.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/Textures.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(tex.buf_lf,tex.buf_bf)
  (LGPL) VisionEgg src/Textures.py gl.glVertex3fv(p.lowerleft)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(tex.buf_rf,tex.buf_bf)
  (LGPL) VisionEgg src/Textures.py gl.glVertex3fv(p.lowerright)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(tex.buf_rf,tex.buf_tf)
  (LGPL) VisionEgg src/Textures.py gl.glVertex3fv(p.upperright)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(tex.buf_lf,tex.buf_tf)
  (LGPL) VisionEgg src/Textures.py gl.glVertex3fv(p.upperleft)
  (LGPL) VisionEgg src/Textures.py gl.glEnd() # GL_QUADS
  (LGPL) VisionEgg src/Textures.py self.cached_display_list_normal = gl.glGenLists(1) # Allocate a new display list
  (LGPL) VisionEgg src/Textures.py self.cached_display_list_mirror = gl.glGenLists(1) # Allocate a new display list
  (LGPL) VisionEgg src/Textures.py gl.glEnable( gl.GL_DEPTH_TEST )
  (LGPL) VisionEgg src/Textures.py gl.glEnable( gl.GL_DEPTH_TEST )
  (LGPL) VisionEgg src/Textures.py gl.glEnable( gl.GL_TEXTURE_2D )  # Make sure textures are drawn
  (LGPL) VisionEgg src/Textures.py gl.glEnable( gl.GL_TEXTURE_2D )  # Make sure textures are drawn
  (LGPL) VisionEgg src/Textures.py gl.glEnable( gl.GL_BLEND ) # Contrast control implemented through blending
  (LGPL) VisionEgg src/Textures.py gl.glEnable( gl.GL_BLEND ) # Contrast control implemented through blending
  (LGPL) VisionEgg src/Textures.py gl.glBlendFunc( gl.GL_SRC_ALPHA, gl.GL_ONE_MINUS_SRC_ALPHA )
  (LGPL) VisionEgg src/Textures.py gl.glBlendFunc( gl.GL_SRC_ALPHA, gl.GL_ONE_MINUS_SRC_ALPHA )
  (LGPL) VisionEgg src/Textures.py gl.glBlendFunc( gl.GL_SRC_ALPHA, gl.GL_ONE_MINUS_SRC_ALPHA )
  (LGPL) VisionEgg src/Textures.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_DECAL)
  (LGPL) VisionEgg src/Textures.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_DECAL)
  (LGPL) VisionEgg src/Textures.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_DECAL)
  (LGPL) VisionEgg src/Textures.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_DECAL)
  (LGPL) VisionEgg src/Textures.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/Textures.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/Textures.py gl.glLoadIdentity()
  (LGPL) VisionEgg src/Textures.py gl.glColor(0.5,0.5,0.5,p.contrast) # Set the polygons' fragment color (implements contrast)
  (LGPL) VisionEgg src/Textures.py gl.glRotatef(p.orientation,0.0,0.0,1.0)
  (LGPL) VisionEgg src/Textures.py gl.glTranslate(lowerleft[0],lowerleft[1],lowerleft[2])
  (LGPL) VisionEgg src/Textures.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/Textures.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(tex.buf_lf,tex.buf_bf)
  (LGPL) VisionEgg src/Textures.py gl.glVertex2f(0.0,0.0)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(tex.buf_rf,tex.buf_bf)
  (LGPL) VisionEgg src/Textures.py gl.glVertex2f(w,0.0)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(tex.buf_rf,tex.buf_tf)
  (LGPL) VisionEgg src/Textures.py gl.glVertex2f(w,h)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(tex.buf_lf,tex.buf_tf)
  (LGPL) VisionEgg src/Textures.py gl.glVertex2f(0.0,h)
  (LGPL) VisionEgg src/Textures.py gl.glEnd() # GL_QUADS
  (LGPL) VisionEgg src/Textures.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/Textures.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(buf_break_f,tex.buf_bf)
  (LGPL) VisionEgg src/Textures.py gl.glVertex2f(0.0,0.0)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(tex.buf_rf,tex.buf_bf)
  (LGPL) VisionEgg src/Textures.py gl.glVertex2f(quad_x_break,0.0)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(tex.buf_rf,tex.buf_tf)
  (LGPL) VisionEgg src/Textures.py gl.glVertex2f(quad_x_break,h)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(buf_break_f,tex.buf_tf)
  (LGPL) VisionEgg src/Textures.py gl.glVertex2f(0.0,h)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(tex.buf_lf,tex.buf_bf)
  (LGPL) VisionEgg src/Textures.py gl.glVertex2f(quad_x_break,0.0)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(buf_break_f,tex.buf_bf)
  (LGPL) VisionEgg src/Textures.py gl.glVertex2f(w,0.0)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(buf_break_f,tex.buf_tf)
  (LGPL) VisionEgg src/Textures.py gl.glVertex2f(w,h)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(tex.buf_lf,tex.buf_tf)
  (LGPL) VisionEgg src/Textures.py gl.glVertex2f(quad_x_break,h)
  (LGPL) VisionEgg src/Textures.py gl.glEnd() # GL_QUADS
  (LGPL) VisionEgg src/Textures.py gl.glTranslatef(p.position[0],p.position[1],p.position[2])
  (LGPL) VisionEgg src/Textures.py gl.glRotatef(p.drum_center_azimuth,0.0,-1.0,0.0)
  (LGPL) VisionEgg src/Textures.py gl.glRotatef(p.drum_center_elevation,1.0,0.0,0.0)
  (LGPL) VisionEgg src/Textures.py gl.glRotatef(p.orientation,0.0,0.0,1.0)
  (LGPL) VisionEgg src/Textures.py gl.glRotatef(p.angular_position,0.0,-1.0,0.0)
  (LGPL) VisionEgg src/Textures.py gl.glCallList(self.cached_display_list_normal)
  (LGPL) VisionEgg src/Textures.py gl.glCallList(self.cached_display_list_mirror)
  (LGPL) VisionEgg src/Textures.py gl.glNewList(self.cached_display_list_normal,gl.GL_COMPILE)
  (LGPL) VisionEgg src/Textures.py gl.glNewList(self.cached_display_list_normal,gl.GL_COMPILE)
  (LGPL) VisionEgg src/Textures.py gl.glNewList(self.cached_display_list_mirror,gl.GL_COMPILE)
  (LGPL) VisionEgg src/Textures.py gl.glNewList(self.cached_display_list_mirror,gl.GL_COMPILE)
  (LGPL) VisionEgg src/Textures.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/Textures.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(frac1, tex.buf_bf)
  (LGPL) VisionEgg src/Textures.py gl.glVertex4f( x1, -h, z1, 1.0 )
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(frac2, tex.buf_bf)
  (LGPL) VisionEgg src/Textures.py gl.glVertex4f( x2, -h, z2, 1.0 )
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(frac2, tex.buf_tf);
  (LGPL) VisionEgg src/Textures.py gl.glVertex4f( x2,  h, z2, 1.0 )
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(frac1, tex.buf_tf)
  (LGPL) VisionEgg src/Textures.py gl.glVertex4f( x1,  h, z1, 1.0 )
  (LGPL) VisionEgg src/Textures.py gl.glEnd()
  (LGPL) VisionEgg src/Textures.py gl.glEndList()
  (LGPL) VisionEgg src/Textures.py internal_format = gl.GL_RGBA,
  (LGPL) VisionEgg src/Textures.py texture_min_filter = gl.GL_NEAREST,
  (LGPL) VisionEgg src/Textures.py texture_mag_filter = gl.GL_NEAREST,
glActiveTextureARB
  OpenGLContext tests/multitexture_1.py glActiveTextureARB(GL_TEXTURE0_ARB);
  OpenGLContext tests/multitexture_1.py glActiveTextureARB(GL_TEXTURE1_ARB);
  OpenGLContext tests/multitexture_1.py glActiveTextureARB(GL_TEXTURE0_ARB);
  OpenGLContext tests/multitexture_1.py glActiveTextureARB(GL_TEXTURE1_ARB);
  OpenGLContext tests/nehe6_multi.py glActiveTextureARB(GL_TEXTURE0_ARB);
  OpenGLContext tests/nehe6_multi.py glActiveTextureARB(GL_TEXTURE1_ARB);
  OpenGLContext tests/nehe6_multi.py glActiveTextureARB(GL_TEXTURE0_ARB);
  OpenGLContext tests/nehe6_multi.py glActiveTextureARB(GL_TEXTURE1_ARB);
  OpenGL/Demo NeHe/lesson6-multi.py glActiveTextureARB(GL_TEXTURE0_ARB)
  OpenGL/Demo NeHe/lesson6-multi.py glActiveTextureARB(GL_TEXTURE1_ARB)
  (LGPL) VisionEgg src/Gratings.py gl.glActiveTextureARB(gl.GL_TEXTURE0_ARB)
  (LGPL) VisionEgg src/Gratings.py gl.glActiveTextureARB(gl.GL_TEXTURE0_ARB)
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(self.multitexture_unit)
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(self.multitexture_unit)
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(self.multitexture_unit)
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(self.multitexture_unit)
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(self.multitexture_unit)
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(self.multitexture_unit)
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(self.multitexture_unit)
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(self.multitexture_unit)
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(self.multitexture_unit)
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(gl.GL_TEXTURE0_ARB)
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(gl.GL_TEXTURE1_ARB) # bind 2nd texture unit to mask texture
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(gl.GL_TEXTURE0_ARB) # return to 1st texture unit
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(gl.GL_TEXTURE0_ARB)
  (LGPL) VisionEgg src/Textures.py gl.glActiveTextureARB(gl.GL_TEXTURE0_ARB)
glAlphaFunc
  OpenGLContext tests/gldrawpixels.py glAlphaFunc(GL_GREATER,0);
glArrayElement
  OpenGLContext tests/glarrayelement.py glArrayElement( index )
glBegin
  OpenGLContext drawcube.py glBegin(GL_QUADS);
  OpenGLContext shadow/volume.py glBegin( GL_LINES )
  OpenGLContext tests/backgroundobject.py glBegin(GL_TRIANGLES)
  OpenGLContext tests/glarrayelement.py glBegin( GL_TRIANGLES )
  OpenGLContext tests/glvertex.py glBegin( GL_TRIANGLES )
  OpenGLContext tests/nehe6_timer.py glBegin(GL_QUADS);
  OpenGLContext tests/nehe2.py glBegin(GL_TRIANGLES)
  OpenGLContext tests/nehe2.py glBegin(GL_QUADS)
  OpenGLContext tests/nehe3.py glBegin(GL_TRIANGLES)
  OpenGLContext tests/nehe3.py glBegin(GL_QUADS)
  OpenGLContext tests/multitexture_1.py glBegin(GL_QUADS);
  OpenGLContext tests/nehe4.py glBegin(GL_TRIANGLES)
  OpenGLContext tests/nehe4.py glBegin(GL_QUADS)
  OpenGLContext tests/nehe5.py glBegin(GL_TRIANGLES);
  OpenGLContext tests/nehe5.py glBegin(GL_QUADS);
  OpenGLContext tests/nehe6.py glBegin(GL_QUADS);
  OpenGLContext tests/nehe6_multi.py glBegin(GL_QUADS);
  OpenGLContext tests/nehe7.py glBegin(GL_QUADS);
  OpenGLContext tests/nehe8.py glBegin(GL_QUADS);
  OpenGLContext tests/redbook_alpha.py glBegin (GL_TRIANGLES);
  OpenGLContext tests/redbook_alpha.py glBegin (GL_TRIANGLES);
  OpenGLContext tests/textureobject.py glBegin(GL_QUADS);
  OpenGLContext tests/test.py glBegin(GL_TRIANGLES)
  OpenGLContext tests/redbook_surface_cb.py glBegin( type )
  OpenGLContext scenegraph/box.py glBegin(GL_QUADS);
  OpenGLContext scenegraph/cubebackground.py glBegin( GL_QUADS )
  OpenGLContext scenegraph/indexedlineset.py glBegin( GL_LINE_STRIP )
  OpenGLContext scenegraph/indexedlineset.py glBegin( GL_LINE_STRIP )
  OpenGLContext scenegraph/indexedlineset.py glBegin( GL_LINE_STRIP )
  OpenGL/Demo dek/tile.py glBegin(GL_QUADS)
  OpenGL/Demo dek/OglSurface/OglFrame.py glBegin(GL_LINES)
  OpenGL/Demo dek/OglSurface/triangle.py glBegin(GL_TRIANGLES)
  OpenGL/Demo dek/OglSurface/triangle.py glBegin(GL_LINES)
  OpenGL/Demo NeHe/lesson18.py glBegin(GL_QUADS)				# Start Drawing The Cube
  OpenGL/Demo NeHe/lesson2.py glBegin(GL_POLYGON)                 # Start drawing a polygon
  OpenGL/Demo NeHe/lesson2.py glBegin(GL_QUADS)                   # Start drawing a 4 sided polygon
  OpenGL/Demo NeHe/lesson3.py glBegin(GL_POLYGON)                 # Start drawing a polygon
  OpenGL/Demo NeHe/lesson3.py glBegin(GL_QUADS)                   # Start drawing a 4 sided polygon
  OpenGL/Demo NeHe/lesson4.py glBegin(GL_POLYGON)                 # Start drawing a polygon
  OpenGL/Demo NeHe/lesson4.py glBegin(GL_QUADS)                   # Start drawing a 4 sided polygon
  OpenGL/Demo NeHe/lesson5.py glBegin(GL_TRIANGLES);					# Start Drawing The Pyramid
  OpenGL/Demo NeHe/lesson5.py glBegin(GL_QUADS);			# Start Drawing The Cube
  OpenGL/Demo NeHe/lesson6-multi.py glBegin(GL_QUADS)			    # Start Drawing The Cube
  OpenGL/Demo NeHe/lesson6.py glBegin(GL_QUADS)			    # Start Drawing The Cube
  OpenGL/Demo redbook/hello.py glBegin(GL_POLYGON)
  OpenGL/Demo redbook/lines.py glBegin(GL_LINES)
  OpenGL/Demo redbook/lines.py glBegin (GL_LINE_STRIP)
  OpenGL/Demo redbook/smooth.py glBegin(GL_TRIANGLES)
  OpenGL/Demo tom/demo.py glBegin(GL_LINES)
  OpenGL/Demo tom/Line.py glBegin(GL_LINES)
  OpenGL/Demo tom/logo.py glBegin(GL_TRIANGLES)
  OpenGL/Demo tom/lorentz.py glBegin(GL_LINE_STRIP)
  SciPy/kiva glcore2d.py gluTessCallback( self._glu_tess, GLU_TESS_BEGIN,  glBegin )
  (LGPL) PyUI pyui/renderers/openglBase.py glBegin(GL_QUADS)
  (LGPL) PyUI pyui/renderers/openglBase.py glBegin(GL_QUADS)
  (LGPL) PyUI pyui/renderers/openglBase.py glBegin(GL_LINES)
  (LGPL) PyUI pyui/renderers/openglBase.py glBegin(GL_QUADS)
  (LGPL) PyUI pyui/renderers/openglBase.py glBegin(GL_QUADS)
  (LGPL) PyUI pyui/renderers/openglPygame.py glBegin(GL_QUADS)
  (LGPL) PyUI tests/testcube.py glBegin(GL_QUADS)
  (LGPL) PyUI tests/testcube.py glBegin(GL_LINES)
  (LGPL) VisionEgg src/Core.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/Dots.py gl.glBegin(gl.GL_POINTS)
  (LGPL) VisionEgg src/Gratings.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/SphereMap.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/SphereMap.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/SphereMap.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/SphereMap.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/Textures.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/Textures.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/Textures.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/Textures.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/Textures.py gl.glBegin(gl.GL_QUADS)
  (LGPL) VisionEgg src/Textures.py gl.glBegin(gl.GL_QUADS)
glBindTexture
  OpenGLContext texture.py glBindTexture(GL_TEXTURE_2D, self.texture)
  OpenGLContext texture.py glBindTexture(GL_TEXTURE_2D, self.texture)
  OpenGLContext texture.py glBindTexture(GL_TEXTURE_2D, self.texture)
  OpenGLContext tests/dek_texturesurf.py glBindTexture(GL_TEXTURE_2D, self.imageID)   # 2d texture (x and y size)
  OpenGLContext tests/dek_texturesurf.py glBindTexture(GL_TEXTURE_2D, ID)
  OpenGLContext tests/nehe6.py glBindTexture(GL_TEXTURE_2D, ID)
  OpenGLContext tests/nehe6.py glBindTexture(GL_TEXTURE_2D, self.imageID)   # 2d texture (x and y size)
  OpenGLContext tests/nehe7.py glBindTexture(GL_TEXTURE_2D, ID)
  OpenGLContext tests/nehe7.py glBindTexture(GL_TEXTURE_2D, ID)
  OpenGLContext tests/nehe7.py glBindTexture(GL_TEXTURE_2D, ID)
  OpenGLContext tests/nehe7.py glBindTexture(GL_TEXTURE_2D, self.imageIDs[self.currentFilter])
  OpenGLContext tests/nehe8.py glBindTexture(GL_TEXTURE_2D, self.imageIDs[self.currentFilter])   # 2d texture (x and y size)
  OpenGLContext tests/nehe8.py glBindTexture(GL_TEXTURE_2D, ID)
  OpenGLContext tests/nehe8.py glBindTexture(GL_TEXTURE_2D, ID)
  OpenGLContext tests/nehe8.py glBindTexture(GL_TEXTURE_2D, ID)
  OpenGL/Demo NeHe/lesson18.py glBindTexture(GL_TEXTURE_2D, textures[0])   # 2d texture (x and y size)
  OpenGL/Demo NeHe/lesson18.py glBindTexture(GL_TEXTURE_2D, textures[1])
  OpenGL/Demo NeHe/lesson18.py glBindTexture(GL_TEXTURE_2D, textures[2])
  OpenGL/Demo NeHe/lesson18.py glBindTexture(GL_TEXTURE_2D, textures[texture_num])
  OpenGL/Demo NeHe/lesson6-multi.py glBindTexture(GL_TEXTURE_2D, id)   # 2d texture (x and y size)
  OpenGL/Demo NeHe/lesson6.py glBindTexture(GL_TEXTURE_2D, glGenTextures(1))   # 2d texture (x and y size)
  (LGPL) PyUI pyui/renderers/openglBase.py glBindTexture( GL_TEXTURE_2D, texture)
  (LGPL) PyUI pyui/renderers/openglBase.py glBindTexture( GL_TEXTURE_2D, texture)
  (LGPL) PyUI pyui/renderers/openglGlut.py glBindTexture(GL_TEXTURE_2D, texture)   # 2d texture (x and y size)
  (LGPL) PyUI pyui/renderers/openglPygame.py glBindTexture(GL_TEXTURE_2D, texture)   # 2d texture (x and y size)
  (LGPL) PyUI pyui/renderers/openglPygame.py glBindTexture(GL_TEXTURE_2D, self.texture)
  (LGPL) PyUI pyui/renderers/openglPygame.py glBindTexture(GL_TEXTURE_2D, self.texture)
  (LGPL) VisionEgg src/Gratings.py gl.glBindTexture(gl.GL_TEXTURE_1D,self._texture_object_id)
  (LGPL) VisionEgg src/Gratings.py gl.glBindTexture(gl.GL_TEXTURE_1D,self._texture_object_id)
  (LGPL) VisionEgg src/SphereMap.py gl.glBindTexture(gl.GL_TEXTURE_1D,self.texture_object_id)
  (LGPL) VisionEgg src/SphereMap.py gl.glBindTexture(gl.GL_TEXTURE_1D,self.texture_object_id)
  (LGPL) VisionEgg src/SphereMap.py gl.glBindTexture(gl.GL_TEXTURE_2D,self.texture_object_id)
  (LGPL) VisionEgg src/SphereMap.py gl.glBindTexture(gl.GL_TEXTURE_2D,self.texture_object_id)
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture(self.target, self.gl_id)
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture( self.target, self.gl_id)
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture( self.target, self.gl_id)
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture( self.target, self.gl_id)
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture( self.target, self.gl_id)
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture( self.target, self.gl_id)
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture(self.target, self.gl_id)
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture(self.target, self.gl_id)
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture(self.target, self.gl_id)
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture(gl.GL_TEXTURE_2D, self.texture_object.gl_id)
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture(gl.GL_TEXTURE_2D,self.texture_object)
glBitmap
  OpenGL/Demo redbook/drawf.py glBitmap(10, 12, 0.0, 0.0, 11.0, 0.0, rasters)
  OpenGL/Demo redbook/drawf.py glBitmap(10, 12, 0.0, 0.0, 11.0, 0.0, rasters)
  OpenGL/Demo redbook/drawf.py glBitmap(10, 12, 0.0, 0.0, 11.0, 0.0, rasters)
glBlendFunc
  OpenGLContext renderpass.py glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA)
  OpenGLContext shadow/passes.py glBlendFunc(GL_ONE,GL_ZERO);
  OpenGLContext shadow/passes.py glBlendFunc(GL_ONE,GL_ONE);
  OpenGLContext shadow/passes.py glBlendFunc(GL_ONE,GL_ONE);
  OpenGLContext tests/nehe8.py glBlendFunc( * self.BLENDSTYLES[ self.blendOn] )
  OpenGLContext tests/redbook_alpha.py glBlendFunc (GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
  OpenGLContext tests/redbook_alpha3D.py glBlendFunc (GL_SRC_ALPHA, GL_ONE); # note assumption that background is black...
  OpenGLContext scenegraph/imagetexture.py glBlendFunc (GL_SRC_ALPHA,GL_ONE_MINUS_SRC_ALPHA)
  OpenGL/Demo dek/OglSurface/OglFrame.py glBlendFunc(GL_SRC_ALPHA,  GL_ONE_MINUS_SRC_ALPHA);
  SciPy/kiva glcore2d.py glBlendFunc( GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA )
  SciPy/kiva glcore2d.py glBlendFunc( GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA )
  (LGPL) PyUI pyui/renderers/openglBase.py glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA)
  (LGPL) VisionEgg src/Dots.py gl.glBlendFunc( gl.GL_SRC_ALPHA, gl.GL_ONE_MINUS_SRC_ALPHA )
  (LGPL) VisionEgg src/Gratings.py gl.glBlendFunc( gl.GL_SRC_ALPHA, gl.GL_ONE_MINUS_SRC_ALPHA )
  (LGPL) VisionEgg src/MoreStimuli.py gl.glBlendFunc(gl.GL_SRC_ALPHA,gl.GL_ONE_MINUS_SRC_ALPHA)
  (LGPL) VisionEgg src/SphereMap.py gl.glBlendFunc( gl.GL_SRC_ALPHA, gl.GL_ONE_MINUS_SRC_ALPHA )
  (LGPL) VisionEgg src/SphereMap.py gl.glBlendFunc( gl.GL_ONE_MINUS_SRC_ALPHA, gl.GL_SRC_ALPHA ) # alpha 1.0 = transparent
  (LGPL) VisionEgg src/Text.py gl.glBlendFunc(gl.GL_SRC_ALPHA,gl.GL_ONE_MINUS_SRC_ALPHA)
  (LGPL) VisionEgg src/Textures.py gl.glBlendFunc( gl.GL_SRC_ALPHA, gl.GL_ONE_MINUS_SRC_ALPHA )
  (LGPL) VisionEgg src/Textures.py gl.glBlendFunc( gl.GL_SRC_ALPHA, gl.GL_ONE_MINUS_SRC_ALPHA )
glCallList
  OpenGLContext displaylist.py glCallList( self.list )
  OpenGLContext tests/dek_texturesurf.py glCallList( self.surfaceID )
  OpenGLContext tests/redbook_alpha3D.py glCallList (self.sphereList);
  OpenGLContext tests/redbook_alpha3D.py glCallList (self.cubeList);
  OpenGL/Demo dek/texturesurf.py glCallList(self.list)
  OpenGL/Demo dek/texturesurf2.py glCallList(self.list)
  OpenGL/Demo dek/OglSurface/triangle.py glCallList(self.surfacelist)
  OpenGL/Demo dek/OglSurface/triangle.py glCallList(self.bondlist)
  OpenGL/Demo GLUT/examples/molehill.py glCallList(1)
  OpenGL/Demo redbook/teapots.py glCallList(teapotList)
  OpenGL/Demo tom/demo.py glCallList(ogl.grob)
  OpenGL/Demo tom/lorentz.py glCallList(o.grob)
  OpenGL/Demo tom/text.py glCallList(o.grob)
  OpenGL/Demo twburton/knot.py glCallList(self.list)
  (LGPL) PyUI pyui/renderers/openglGlut.py glCallList(w.displayList)
  (LGPL) PyUI pyui/renderers/openglPygame.py glCallList(w.displayList)
  (LGPL) PyUI pyui/renderers/openglPygame.py glCallList( self.displayLists[ord(c)])
  (LGPL) VisionEgg src/SphereMap.py gl.glCallList(self.cached_display_list)
  (LGPL) VisionEgg src/SphereMap.py gl.glCallList(self.cached_display_list_id)
  (LGPL) VisionEgg src/SphereMap.py gl.glCallList(self.windowed_display_list_id)
  (LGPL) VisionEgg src/SphereMap.py gl.glCallList(self.opaque_display_list_id)
  (LGPL) VisionEgg src/Textures.py gl.glCallList(self.cached_display_list_normal)
  (LGPL) VisionEgg src/Textures.py gl.glCallList(self.cached_display_list_mirror)
glCallLists
  OpenGLContext tests/glprint.py glCallLists(map(lambda x, y: ord(x) - 32 + y, text, [self.base]*len(text)))		# Draws The Display List Text
  OpenGLContext scenegraph/text/wglfont.py glCallLists( lists )
  OpenGLContext scenegraph/text/wglfont.py glCallLists( line.lists )
  OpenGLContext scenegraph/text/wglfont.py glCallLists( line.lists )
  OpenGLContext scenegraph/text/wglfont.py glCallLists( line.lists )
  OpenGLContext scenegraph/text/wglfont.py glCallLists( line.lists )
  OpenGLContext scenegraph/text/wglfont.py glCallLists( line.lists )
  OpenGLContext scenegraph/text/wglfont.py glCallLists( line.lists )
glClear
  OpenGLContext context.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT )
  OpenGLContext rendervisitor.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT )
  OpenGLContext shadow/passes.py glClear(GL_STENCIL_BUFFER_BIT);
  OpenGLContext tests/gldrawpixels.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT )
  OpenGLContext tests/glprint.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT )
  OpenGLContext tests/glutbitmapcharacter.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT )
  OpenGLContext tests/nehe8.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT )
  OpenGLContext tests/redbook_alpha3D.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT )
  OpenGLContext tests/textobject.py glClear( GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT )
  OpenGLContext tests/wgl_font.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT )
  OpenGLContext scenegraph/cubebackground.py glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT|GL_STENCIL_BUFFER_BIT)
  OpenGLContext scenegraph/cubebackground.py glClear(GL_DEPTH_BUFFER_BIT)
  OpenGLContext scenegraph/simplebackground.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGLContext scenegraph/spherebackground.py glClear( GL_DEPTH_BUFFER_BIT )
  OpenGLContext scenegraph/spherebackground.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT | GL_STENCIL_BUFFER_BIT);
  OpenGL/Demo da/dots.py glClear(GL_COLOR_BUFFER_BIT)
  OpenGL/Demo dek/texturesurf.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo dek/texturesurf2.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo dek/tile.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo GLE/cone.py glClear (GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo GLE/helix.py glClear (GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo GLE/texas.py glClear (GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo GLUT/examples/molehill.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo NeHe/lesson1.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo NeHe/lesson18.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)	# Clear The Screen And The Depth Buffer
  OpenGL/Demo NeHe/lesson2.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo NeHe/lesson3.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo NeHe/lesson4.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo NeHe/lesson5.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);	# Clear The Screen And The Depth Buffer
  OpenGL/Demo NeHe/lesson6-multi.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)	# Clear The Screen And The Depth Buffer
  OpenGL/Demo NeHe/lesson6.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)	# Clear The Screen And The Depth Buffer
  OpenGL/Demo redbook/cube.py glClear (GL_COLOR_BUFFER_BIT)
  OpenGL/Demo redbook/double.py glClear(GL_COLOR_BUFFER_BIT)
  OpenGL/Demo redbook/drawf.py glClear(GL_COLOR_BUFFER_BIT)
  OpenGL/Demo redbook/fog.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo redbook/hello.py glClear (GL_COLOR_BUFFER_BIT)
  OpenGL/Demo redbook/lines.py glClear(GL_COLOR_BUFFER_BIT)
  OpenGL/Demo redbook/movelight.py glClear (GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo redbook/scene.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo redbook/smooth.py glClear(GL_COLOR_BUFFER_BIT)
  OpenGL/Demo redbook/teapots.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo simple/GLE.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo suite/GLUT.py glClear (GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo tom/arraytest.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo tom/checker.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo tom/cone.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo tom/conechecker.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo tom/conechecker.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo tom/conesave.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo tom/demo.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo tom/demo.py glClear(GL_COLOR_BUFFER_BIT)
  OpenGL/Demo tom/demo.py glClear(GL_COLOR_BUFFER_BIT)
  OpenGL/Demo tom/first.py glClear(GL_COLOR_BUFFER_BIT)
  OpenGL/Demo tom/fog.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo tom/Line.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo tom/lorentz.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo tom/poly.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  OpenGL/Demo twburton/knot.py glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
  SciPy/kiva glcore2d.py glClear( GL_COLOR_BUFFER_BIT )
  SciPy/kiva tests/test_glcore2d.py glClear( GL_COLOR_BUFFER_BIT )
  (LGPL) PyUI pyui/renderers/openglBase.py glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT)
  (LGPL) VisionEgg src/Core.py gl.glClear(gl.GL_COLOR_BUFFER_BIT | gl.GL_DEPTH_BUFFER_BIT)
glClearColor
  OpenGLContext context.py glClearColor(1.0,1.0,1.0,1.0)
  OpenGLContext rendervisitor.py glClearColor(0.0,0.0,0.0,1.0)
  OpenGLContext tests/gldrawpixels.py glClearColor(0.0,0.0,1.0,1.0)
  OpenGLContext tests/glprint.py glClearColor(0.0,0.0,1.0,1.0)
  OpenGLContext tests/glutbitmapcharacter.py glClearColor(0,0,0,1.0)
  OpenGLContext tests/nehe8.py glClearColor(0,0,0,0)
  OpenGLContext tests/redbook_alpha3D.py glClearColor(0,0,0,1.0)
  OpenGLContext tests/redbook_surface.py glClearColor (0.0, 0.0, 0.0, 0.0);
  OpenGLContext tests/redbook_trim.py glClearColor (0.0, 0.0, 0.0, 0.0);
  OpenGLContext tests/textobject.py glClearColor( 0,0,0, 1)
  OpenGLContext tests/wgl_font.py glClearColor(0.0,0.0,1.0,1.0)
  OpenGLContext tests/redbook_surface_cb.py glClearColor (0.0, 0.0, 0.0, 0.0);
  OpenGLContext scenegraph/simplebackground.py glClearColor( r,g,b, 1.0 )
  OpenGL/Demo da/dots.py glClearColor(0.0, 0.0, 0.0, 0.0)
  OpenGL/Demo dek/texturesurf.py glClearColor(0.0, 0.0, 0.0, 0)
  OpenGL/Demo dek/texturesurf2.py glClearColor(0.0, 0.0, 0.0, 0)
  OpenGL/Demo dek/tile.py glClearColor(0.0, 0.0, 0.0, 0)
  OpenGL/Demo GLE/maintest.py glClearColor (0.0, 0.0, 0.0, 0.0)
  OpenGL/Demo NeHe/lesson1.py glClearColor(0.0, 0.0, 0.0, 0.0)	# This Will Clear The Background Color To Black
  OpenGL/Demo NeHe/lesson18.py glClearColor(0.0, 0.0, 0.0, 0.0)	# This Will Clear The Background Color To Black
  OpenGL/Demo NeHe/lesson2.py glClearColor(0.0, 0.0, 0.0, 0.0)	# This Will Clear The Background Color To Black
  OpenGL/Demo NeHe/lesson3.py glClearColor(0.0, 0.0, 0.0, 0.0)	# This Will Clear The Background Color To Black
  OpenGL/Demo NeHe/lesson4.py glClearColor(0.0, 0.0, 0.0, 0.0)	# This Will Clear The Background Color To Black
  OpenGL/Demo NeHe/lesson5.py glClearColor(0.0, 0.0, 0.0, 0.0)	# This Will Clear The Background Color To Black
  OpenGL/Demo NeHe/lesson6-multi.py glClearColor(0.0, 0.0, 0.0, 0.0)	# This Will Clear The Background Color To Black
  OpenGL/Demo NeHe/lesson6.py glClearColor(0.0, 0.0, 0.0, 0.0)	# This Will Clear The Background Color To Black
  OpenGL/Demo redbook/cube.py glClearColor (0.0, 0.0, 0.0, 0.0)
  OpenGL/Demo redbook/double.py glClearColor(0.0, 0.0, 0.0, 0.0)
  OpenGL/Demo redbook/drawf.py glClearColor(0.0, 0.0, 0.0, 0.0)
  OpenGL/Demo redbook/fog.py glClearColor(0.5, 0.5, 0.5, 1.0)
  OpenGL/Demo redbook/hello.py glClearColor (0.0, 0.0, 0.0, 0.0)
  OpenGL/Demo redbook/lines.py glClearColor(0.0, 0.0, 0.0, 0.0)
  OpenGL/Demo redbook/movelight.py glClearColor (0.0, 0.0, 0.0, 0.0)
  OpenGL/Demo redbook/smooth.py glClearColor(0.0, 0.0, 0.0, 0.0)
  OpenGL/Demo simple/GLE.py glClearColor(0.0, 0.0, 0.0, 0.0)
  OpenGL/Demo tom/arraytest.py glClearColor(1, 1, 1, 0)
  OpenGL/Demo tom/checker.py glClearColor(1, 0, 1, 0)
  OpenGL/Demo tom/conechecker.py glClearColor(1, 0, 1, 0)
  OpenGL/Demo tom/demo.py glClearColor(0, 0, 0, 0)
  OpenGL/Demo tom/demo.py glClearColor(0, 0, 1, 0)
  OpenGL/Demo tom/demo.py glClearColor(0, 0, 0.5, 0)
  OpenGL/Demo tom/first.py glClearColor(0, 0, 1, 0)
  OpenGL/Demo tom/fog.py glClearColor(0.5, 0.5, 0.5, 1.0)
  OpenGL/Demo tom/Line.py glClearColor(0.5, 0.5, 0.5, 0)
  OpenGL/Demo tom/lorentz.py glClearColor(1., 0., 1., 0.)
  OpenGL/Demo tom/poly.py glClearColor(0.5, 0.5, 0.5, 0)
  OpenGL/Demo twburton/knot.py glClearColor(1.0, 0.0, 0.0, 0.0)
  SciPy/kiva glcore2d.py glClearColor( 1.0, 1.0, 1.0, 0.0 )
  SciPy/kiva tests/test_glcore2d.py glClearColor( 1.0, 1.0, 1.0, 0.0 )
  (LGPL) PyUI pyui/renderers/openglBase.py glClearColor( color[0], color[1], color[2], color[3] )
  (LGPL) VisionEgg src/Core.py gl.glClearColor(c[0],c[1],c[2],c[3])
glClearDepth
  OpenGL/Demo GLE/maintest.py glClearDepth (1.0)
  OpenGL/Demo NeHe/lesson1.py glClearDepth(1.0)					# Enables Clearing Of The Depth Buffer
  OpenGL/Demo NeHe/lesson18.py glClearDepth(1.0)					# Enables Clearing Of The Depth Buffer
  OpenGL/Demo NeHe/lesson2.py glClearDepth(1.0)					# Enables Clearing Of The Depth Buffer
  OpenGL/Demo NeHe/lesson3.py glClearDepth(1.0)					# Enables Clearing Of The Depth Buffer
  OpenGL/Demo NeHe/lesson4.py glClearDepth(1.0)					# Enables Clearing Of The Depth Buffer
  OpenGL/Demo NeHe/lesson5.py glClearDepth(1.0)					# Enables Clearing Of The Depth Buffer
  OpenGL/Demo NeHe/lesson6-multi.py glClearDepth(1.0)					# Enables Clearing Of The Depth Buffer
  OpenGL/Demo NeHe/lesson6.py glClearDepth(1.0)					# Enables Clearing Of The Depth Buffer
  OpenGL/Demo simple/GLE.py glClearDepth(1.0)
  OpenGL/Demo twburton/knot.py glClearDepth(1.0)
glColor
  OpenGLContext shadow/passes.py glColor( 1.0, 1.0, 1.0, 1.0 )
  OpenGLContext shadow/passes.py glColor( 1.,1.,1.)
  OpenGLContext tests/transparentsorted.py glColor( .5,.5,.5, 1)
  OpenGLContext tests/redbook_surface_cb.py glColor( color )
  OpenGLContext scenegraph/spherebackground.py glColor( 0.0,0.0,0.0)
  SciPy/kiva glcore2d.py glColor( r, g, b, a )
  SciPy/kiva glcore2d.py glColor( r, g, b, a )
  SciPy/kiva glcore2d.py glColor( r, g, b, a )
  SciPy/kiva glcore2d.py glColor( fr, fa, fb, fa )
  SciPy/kiva glcore2d.py glColor( sr, sg, sb, sa )
  (LGPL) VisionEgg src/Core.py gl.glColor(c[0],c[1],c[2],c[3])
  (LGPL) VisionEgg src/Dots.py gl.glColor( p.color[0], p.color[1], p.color[2], p.color[3] )
  (LGPL) VisionEgg src/Gratings.py gl.glColor(p.color1[0],p.color1[1],p.color1[2],p.max_alpha)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glColor(c[0],c[1],c[2],c[3])
  (LGPL) VisionEgg src/MoreStimuli.py gl.glColor(c[0],c[1],c[2],c[3])
  (LGPL) VisionEgg src/SphereMap.py gl.glColor(0.5,0.5,0.5,p.contrast) # Set the polygons' fragment color (implements contrast)
  (LGPL) VisionEgg src/SphereMap.py gl.glColor( *p.opaque_color )
  (LGPL) VisionEgg src/Text.py gl.glColor(c[0],c[1],c[2],c[3])
  (LGPL) VisionEgg src/Text.py gl.glColor(c[0],c[1],c[2],c[3])
  (LGPL) VisionEgg src/Textures.py gl.glColor(p.color[0],p.color[1],p.color[2],p.max_alpha)
  (LGPL) VisionEgg src/Textures.py gl.glColor(0.5,0.5,0.5,p.contrast) # Set the polygons' fragment color (implements contrast)
glColor3
  SciPy/kiva glcore2d.py glColor3( r, g, b )
  (LGPL) PyUI tests/testcube.py glColor3(color)
  (LGPL) PyUI tests/testcube.py glColor3((1.0, 1.0, 1.0))
glColor3d
  OpenGLContext scenegraph/indexedlineset.py glColor3d( *colors[color] )
  OpenGLContext scenegraph/indexedlineset.py glColor3d( *colors[c] )
glColor3f
  OpenGLContext shadow/volume.py glColor3f( 0,0,1.0)
  OpenGLContext shadow/volume.py glColor3f( 0,1.0,.5)
  OpenGLContext tests/glutbitmapcharacter.py glColor3f( 0,0,1 )
  OpenGLContext tests/nehe3.py glColor3f(1,0,0)
  OpenGLContext tests/nehe3.py glColor3f(0,1,0)
  OpenGLContext tests/nehe3.py glColor3f(0,0,1)
  OpenGLContext tests/nehe3.py glColor3f(0.5,0.5,1.0)
  OpenGLContext tests/nehe4.py glColor3f(1,0,0)
  OpenGLContext tests/nehe4.py glColor3f(0,1,0)
  OpenGLContext tests/nehe4.py glColor3f(0,0,1)
  OpenGLContext tests/nehe4.py glColor3f(0.5,0.5,1.0)
  OpenGLContext tests/nehe5.py glColor3f(1.0,0.0,0.0)
  OpenGLContext tests/nehe5.py glColor3f(0.0,1.0,0.0)
  OpenGLContext tests/nehe5.py glColor3f(0.0,0.0,1.0)
  OpenGLContext tests/nehe5.py glColor3f(1.0,0.0,0.0)
  OpenGLContext tests/nehe5.py glColor3f(0.0,0.0,1.0)
  OpenGLContext tests/nehe5.py glColor3f(0.0,1.0,0.0);
  OpenGLContext tests/nehe5.py glColor3f(1.0,0.0,0.0);
  OpenGLContext tests/nehe5.py glColor3f(0.0,1.0,0.0);
  OpenGLContext tests/nehe5.py glColor3f(0.0,0.0,1.0);
  OpenGLContext tests/nehe5.py glColor3f(1.0,0.0,0.0);
  OpenGLContext tests/nehe5.py glColor3f(0.0,0.0,1.0);
  OpenGLContext tests/nehe5.py glColor3f(0.0,1.0,0.0);
  OpenGLContext tests/nehe5.py glColor3f(0.0,1.0,0.0)
  OpenGLContext tests/nehe5.py glColor3f(1.0,0.5,0.0)
  OpenGLContext tests/nehe5.py glColor3f(1.0,0.0,0.0)
  OpenGLContext tests/nehe5.py glColor3f(1.0,1.0,0.0)
  OpenGLContext tests/nehe5.py glColor3f(0.0,0.0,1.0)
  OpenGLContext tests/nehe5.py glColor3f(1.0,0.0,1.0)
  OpenGLContext scenegraph/cubebackground.py glColor3f( 1.0, 1.0, 1.0, )
  OpenGL/Demo da/dots.py glColor3f(1.0,1.0,0.0)
  OpenGL/Demo dek/OglSurface/OglFrame.py glColor3f(1,0,0)
  OpenGL/Demo dek/OglSurface/OglFrame.py glColor3f(0,1,0)
  OpenGL/Demo dek/OglSurface/OglFrame.py glColor3f(0,0,1)
  OpenGL/Demo dek/OglSurface/triangle.py glColor3f(color[0], color[1], color[2])
  OpenGL/Demo dek/OglSurface/triangle.py glColor3f(color[0], color[1], color[2])
  OpenGL/Demo dek/OglSurface/triangle.py glColor3f(color[0], color[1], color[2])
  OpenGL/Demo dek/OglSurface/triangle.py apply(glColor3f, tuple(color))
  OpenGL/Demo dek/OglSurface/triangle.py apply(glColor3f, tuple(color))
  OpenGL/Demo GLE/helix.py glColor3f (0.6, 0.8, 0.3)
  OpenGL/Demo NeHe/lesson3.py glColor3f(1.0, 0.0, 0.0)            # Red
  OpenGL/Demo NeHe/lesson3.py glColor3f(0.0, 1.0, 0.0)            # Green
  OpenGL/Demo NeHe/lesson3.py glColor3f(0.0, 0.0, 1.0)            # Blue
  OpenGL/Demo NeHe/lesson3.py glColor3f(0.3, 0.5, 1.0)            # Bluish shade
  OpenGL/Demo NeHe/lesson4.py glColor3f(1.0, 0.0, 0.0)            # Red
  OpenGL/Demo NeHe/lesson4.py glColor3f(0.0, 1.0, 0.0)            # Green
  OpenGL/Demo NeHe/lesson4.py glColor3f(0.0, 0.0, 1.0)            # Blue
  OpenGL/Demo NeHe/lesson4.py glColor3f(0.3, 0.5, 1.0)            # Bluish shade
  OpenGL/Demo NeHe/lesson5.py glColor3f(1.0,0.0,0.0);			# Red
  OpenGL/Demo NeHe/lesson5.py glColor3f(0.0,1.0,0.0);			# Green
  OpenGL/Demo NeHe/lesson5.py glColor3f(0.0,0.0,1.0);			# Blue
  OpenGL/Demo NeHe/lesson5.py glColor3f(1.0,0.0,0.0);			# Red
  OpenGL/Demo NeHe/lesson5.py glColor3f(0.0,0.0,1.0);			# Blue
  OpenGL/Demo NeHe/lesson5.py glColor3f(0.0,1.0,0.0);			# Green
  OpenGL/Demo NeHe/lesson5.py glColor3f(1.0,0.0,0.0);			# Red
  OpenGL/Demo NeHe/lesson5.py glColor3f(0.0,1.0,0.0);			# Green
  OpenGL/Demo NeHe/lesson5.py glColor3f(0.0,0.0,1.0);			# Blue
  OpenGL/Demo NeHe/lesson5.py glColor3f(1.0,0.0,0.0);			# Red
  OpenGL/Demo NeHe/lesson5.py glColor3f(0.0,0.0,1.0);			# Blue
  OpenGL/Demo NeHe/lesson5.py glColor3f(0.0,1.0,0.0);			# Green
  OpenGL/Demo NeHe/lesson5.py glColor3f(0.0,1.0,0.0);			# Set The Color To Blue
  OpenGL/Demo NeHe/lesson5.py glColor3f(1.0,0.5,0.0);			# Set The Color To Orange
  OpenGL/Demo NeHe/lesson5.py glColor3f(1.0,0.0,0.0);			# Set The Color To Red
  OpenGL/Demo NeHe/lesson5.py glColor3f(1.0,1.0,0.0);			# Set The Color To Yellow
  OpenGL/Demo NeHe/lesson5.py glColor3f(0.0,0.0,1.0);			# Set The Color To Blue
  OpenGL/Demo NeHe/lesson5.py glColor3f(1.0,0.0,1.0);			# Set The Color To Violet
  OpenGL/Demo redbook/cube.py glColor3f (1.0, 1.0, 1.0)
  OpenGL/Demo redbook/double.py glColor3f(1.0, 1.0, 1.0)
  OpenGL/Demo redbook/drawf.py glColor3f(1.0, 1.0, 1.0)
  OpenGL/Demo redbook/hello.py glColor3f (1.0, 1.0, 1.0)
  OpenGL/Demo redbook/lines.py glColor3f(1.0, 1.0, 1.0)
  OpenGL/Demo redbook/movelight.py glColor3f (0.0, 1.0, 1.0)
  OpenGL/Demo redbook/smooth.py glColor3f(1.0, 0.0, 0.0)
  OpenGL/Demo redbook/smooth.py glColor3f(0.0, 1.0, 0.0)
  OpenGL/Demo redbook/smooth.py glColor3f(0.0, 0.0, 1.0)
  OpenGL/Demo simple/GLE.py glColor3f(0.6, 0.8, 0.3)
  OpenGL/Demo suite/items/da/dots.py glColor3f(1.0, 1.0, 0.0)
  OpenGL/Demo suite/items/GLE/helix.py glColor3f(0.6, 0.8, 0.3)
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glColor3f(0.6, 0.8, 0.3)
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glColor3f(0.6, 0.8, 0.3)
  OpenGL/Demo tom/checker.py glColor3f(0, 1, 0)
  OpenGL/Demo tom/checker.py glColor3f(1, 1, 1)
  OpenGL/Demo tom/checker.py glColor3f(0, 0, 0)
  OpenGL/Demo tom/conechecker.py glColor3f(0, 1, 0)
  OpenGL/Demo tom/conechecker.py glColor3f(1, 1, 0)
  OpenGL/Demo tom/conechecker.py glColor3f(0, 0, 0)
  OpenGL/Demo tom/demo.py glColor3f(1,1,0)
  OpenGL/Demo tom/demo.py glColor3f(1,0,1)
  OpenGL/Demo tom/demo.py glColor3f(1,0,0)
  OpenGL/Demo tom/demo.py glColor3f(0,0,1)
  OpenGL/Demo tom/Line.py glColor3f(1,1,0)
  OpenGL/Demo tom/Line.py glColor3f(1,0,1)
  OpenGL/Demo tom/Line.py glColor3f(1,0,0)
  OpenGL/Demo tom/Line.py glColor3f(0,0,1)
  OpenGL/Demo tom/lorentz.py glColor3f(1., 1., 1.)
glColor4f
  OpenGLContext tests/redbook_alpha.py glColor4f(1.0, 1.0, 0.0, 0.5);
  OpenGLContext tests/redbook_alpha.py glColor4f(0.0, 1.0, 1.0, 0.5);
glColor4ub
  (LGPL) PyUI pyui/renderers/openglBase.py glColor4ub( color[0], color[1], color[2], color[3] )
  (LGPL) PyUI pyui/renderers/openglBase.py glColor4ub( c1[0], c1[1], c1[2], c1[3] )
  (LGPL) PyUI pyui/renderers/openglBase.py glColor4ub( c2[0], c2[1], c2[2], c2[3] )
  (LGPL) PyUI pyui/renderers/openglBase.py glColor4ub( c4[0], c4[1], c4[2], c4[3] )
  (LGPL) PyUI pyui/renderers/openglBase.py glColor4ub( c3[0], c3[1], c3[2], c3[3] )
  (LGPL) PyUI pyui/renderers/openglBase.py glColor4ub( color[0], color[1], color[2], color[3] )
  (LGPL) PyUI pyui/renderers/openglBase.py glColor4ub( 255, 255, 255, 255 )
  (LGPL) PyUI pyui/renderers/openglBase.py glColor4ub( 255, 255, 255, 255 )
  (LGPL) PyUI pyui/renderers/openglGlut.py glColor4ub( color[0], color[1], color[2], color[3] )
glColorMask
  OpenGLContext shadow/passes.py glColorMask(GL_TRUE,GL_TRUE,GL_TRUE,GL_TRUE);
  OpenGLContext shadow/passes.py glColorMask(0,0,0,0);
  OpenGLContext shadow/passes.py glColorMask(1,1,1,1);
  OpenGLContext shadow/passes.py glColorMask(1,1,1,1);
  OpenGLContext shadow/volume.py glColorMask(0.0,1.0,0.0,0.0);
  OpenGLContext shadow/volume.py glColorMask(0.0,1.0,1.0,0.0);
  OpenGLContext shadow/volume.py glColorMask(0.0,0.0,0.0,0.0);
  OpenGLContext shadow/volume.py glColorMask(1.0,0.0,0.0,0.0);
  OpenGLContext shadow/volume.py glColorMask(0.0,0.0,0.0,0.0);
glColorMaterial
  OpenGLContext scenegraph/arraygeometry.py glColorMaterial( GL_FRONT_AND_BACK, GL_DIFFUSE)
  OpenGLContext scenegraph/indexedpolygons.py glColorMaterial( GL_FRONT_AND_BACK, GL_DIFFUSE)
  OpenGLContext scenegraph/spherebackground.py glColorMaterial(GL_FRONT_AND_BACK, GL_AMBIENT_AND_DIFFUSE)
  OpenGLContext scenegraph/pointset.py glColorMaterial( GL_FRONT_AND_BACK, GL_DIFFUSE)
  OpenGL/Demo dek/OglSurface/triangle.py glColorMaterial(GL_FRONT, GL_DIFFUSE)
  OpenGL/Demo GLE/maintest.py glColorMaterial (GL_FRONT_AND_BACK, GL_DIFFUSE)
  OpenGL/Demo simple/GLE.py glColorMaterial(GL_FRONT_AND_BACK, GL_DIFFUSE)
  OpenGL/Demo suite/items/GLE/helix.py glColorMaterial(GL_FRONT_AND_BACK, GL_DIFFUSE)
  OpenGL/Demo suite/items/GLE/helix.py glColorMaterial(GL_FRONT_AND_BACK, GL_AMBIENT_AND_DIFFUSE)
glColorPointerd
  OpenGLContext scenegraph/arraygeometry.py glColorPointerd ( self.colours )
  OpenGLContext scenegraph/indexedpolygons.py glColorPointerd ( color )
  OpenGLContext scenegraph/spherebackground.py glColorPointerd ( colors )
  OpenGLContext scenegraph/pointset.py glColorPointerd ( colors )
  OpenGL/Demo tom/arraytest.py glColorPointerd(color)
  OpenGL/Demo tom/poly.py glColorPointerd(colors)
glColorub
  (LGPL) PyUI pyui/renderers/openglPygame.py glColorub(color)
glCopyTexImage1D
  (LGPL) VisionEgg src/Textures.py gl.glCopyTexImage1D(gl.GL_TEXTURE_1D,
glCopyTexImage2D
  (LGPL) VisionEgg src/Textures.py gl.glCopyTexImage2D(target,
glCullFace
  OpenGLContext rendervisitor.py glCullFace(GL_BACK)
  OpenGLContext shadow/passes.py glCullFace(GL_BACK);
  OpenGLContext shadow/volume.py glCullFace(GL_BACK);
  OpenGLContext shadow/volume.py glCullFace(GL_FRONT);
  OpenGL/Demo dek/OglSurface/triangle.py glCullFace(GL_BACK)
glDeleteLists
  OpenGLContext displaylist.py def __del__( self, glDeleteLists = glDeleteLists ):
  OpenGLContext displaylist.py def __del__( self, glDeleteLists = glDeleteLists ):
  OpenGLContext displaylist.py glDeleteLists( self.list, 1 )
  OpenGLContext tests/glprint.py glDeleteLists(self.base, 96)	# Delete All 96 Characters
  OpenGLContext scenegraph/text/wglfont.py glDeleteLists( dl, 1 )
  (LGPL) PyUI pyui/renderers/openglGlut.py glDeleteLists(w.displayList,1)
  (LGPL) PyUI pyui/renderers/openglPygame.py glDeleteLists(w.displayList,1)
glDeleteTextures
  OpenGLContext texture.py def __del__( self, glDeleteTextures = glDeleteTextures ):
  OpenGLContext texture.py def __del__( self, glDeleteTextures = glDeleteTextures ):
  OpenGLContext texture.py glDeleteTextures( [self.texture])
  (LGPL) VisionEgg src/Gratings.py gl.glDeleteTextures( [self._texture_object_id] )
  (LGPL) VisionEgg src/Textures.py self.gl_module.glDeleteTextures(self.gl_id)
glDepthFunc
  OpenGLContext rendervisitor.py glDepthFunc(GL_LESS)
  OpenGLContext shadow/passes.py glDepthFunc(GL_LESS);
  OpenGLContext shadow/passes.py glDepthFunc( GL_LESS );
  OpenGLContext shadow/passes.py glDepthFunc(GL_EQUAL);
  OpenGLContext shadow/passes.py glDepthFunc(GL_EQUAL);
  OpenGL/Demo NeHe/lesson1.py glDepthFunc(GL_LESS)				# The Type Of Depth Test To Do
  OpenGL/Demo NeHe/lesson18.py glDepthFunc(GL_LESS)				# The Type Of Depth Test To Do
  OpenGL/Demo NeHe/lesson2.py glDepthFunc(GL_LESS)				# The Type Of Depth Test To Do
  OpenGL/Demo NeHe/lesson3.py glDepthFunc(GL_LESS)				# The Type Of Depth Test To Do
  OpenGL/Demo NeHe/lesson4.py glDepthFunc(GL_LESS)				# The Type Of Depth Test To Do
  OpenGL/Demo NeHe/lesson5.py glDepthFunc(GL_LESS)				# The Type Of Depth Test To Do
  OpenGL/Demo NeHe/lesson6-multi.py glDepthFunc(GL_LESS)				# The Type Of Depth Test To Do
  OpenGL/Demo NeHe/lesson6.py glDepthFunc(GL_LESS)				# The Type Of Depth Test To Do
  OpenGL/Demo tom/cone.py glDepthFunc(GL_LESS)
  OpenGL/Demo tom/conechecker.py glDepthFunc(GL_LESS)
  OpenGL/Demo tom/fog.py glDepthFunc(GL_LESS)
  OpenGL/Demo twburton/knot.py glDepthFunc(GL_LESS)
glDepthMask
  OpenGLContext renderpass.py glDepthMask( 0 ) # prevent updates to the depth buffer...
  OpenGLContext renderpass.py glDepthMask( 1 ) # allow updates to the depth buffer
  OpenGLContext shadow/passes.py glDepthMask(1)
  OpenGLContext shadow/passes.py glDepthMask(1);
  OpenGLContext shadow/passes.py glDepthMask(GL_FALSE);
  OpenGLContext shadow/passes.py glDepthMask(~1);
  OpenGLContext tests/nehe8.py glDepthMask( ~0 )
  OpenGLContext tests/nehe8.py glDepthMask( 0 ) # prevent updates to the depth buffer...
  OpenGLContext tests/redbook_alpha3D.py glDepthMask (GL_FALSE);
  OpenGLContext tests/redbook_alpha3D.py glDepthMask (GL_TRUE);
  OpenGL/Demo dek/OglSurface/triangle.py glDepthMask(GL_TRUE)
glDisable
  OpenGLContext context.py glDisable(GL_LIGHTING);
  OpenGLContext context.py glDisable(GL_LIGHT0);
  OpenGLContext renderpass.py glDisable(GL_BLEND);
  OpenGLContext renderpass.py glDisable(GL_LIGHTING)
  OpenGLContext renderpass.py glDisable(GL_LIGHTING)
  OpenGLContext rendervisitor.py glDisable(ID);
  OpenGLContext shadow/passes.py glDisable(GL_BLEND);
  OpenGLContext shadow/passes.py glDisable(GL_STENCIL_TEST);
  OpenGLContext shadow/passes.py glDisable(GL_BLEND);
  OpenGLContext shadow/passes.py glDisable(GL_STENCIL_TEST);
  OpenGLContext tests/dek_texturesurf.py glDisable(GL_CULL_FACE)
  OpenGLContext tests/glprint.py glDisable(GL_LIGHTING)
  OpenGLContext tests/glut_fullscreen.py glDisable( GL_LIGHTING) # context lights by default
  OpenGLContext tests/nehe6_timer.py glDisable( GL_LIGHTING) # context lights by default
  OpenGLContext tests/lightobject.py glDisable(GL_LIGHTING);
  OpenGLContext tests/nehe2.py glDisable( GL_CULL_FACE )
  OpenGLContext tests/nehe3.py glDisable( GL_CULL_FACE)
  OpenGLContext tests/nehe3.py glDisable( GL_LIGHTING)
  OpenGLContext tests/nehe4.py glDisable( GL_LIGHTING) # context lights by default
  OpenGLContext tests/nehe4.py glDisable( GL_CULL_FACE)
  OpenGLContext tests/nehe5.py glDisable( GL_LIGHTING) # context lights by default
  OpenGLContext tests/nehe6.py glDisable( GL_LIGHTING) # context lights by default
  OpenGLContext tests/nehe6_multi.py glDisable( GL_LIGHTING) # context lights by default
  OpenGLContext tests/nehe7.py glDisable(GL_LIGHT0);
  OpenGLContext tests/nehe7.py glDisable( GL_LIGHTING )
  OpenGLContext tests/nehe7.py glDisable(GL_LIGHT1);
  OpenGLContext tests/nehe7.py glDisable(GL_LIGHT0);
  OpenGLContext tests/nehe8.py glDisable(GL_LIGHT0);
  OpenGLContext tests/nehe8.py glDisable( GL_LIGHTING )
  OpenGLContext tests/nehe8.py glDisable(GL_LIGHT1);
  OpenGLContext tests/nehe8.py glDisable(GL_LIGHT0);
  OpenGLContext tests/nehe8.py glDisable( GL_CULL_FACE )
  OpenGLContext tests/nehe8.py glDisable(GL_TEXTURE_2D)
  OpenGLContext tests/nehe8.py glDisable(GL_BLEND);
  OpenGLContext tests/nehe8.py glDisable(GL_DEPTH_TEST);
  OpenGLContext tests/redbook_alpha.py glDisable(GL_DEPTH_TEST);
  OpenGLContext tests/redbook_alpha.py glDisable( GL_LIGHTING )
  OpenGLContext tests/redbook_alpha3D.py glDisable (GL_BLEND);
  OpenGLContext tests/textureobject.py glDisable( GL_LIGHTING) # context lights by default
  OpenGLContext tests/transparentsorted.py glDisable(GL_TEXTURE_2D)
  OpenGLContext tests/wgl_font.py glDisable(GL_LIGHTING)
  OpenGLContext scenegraph/arraygeometry.py glDisable( GL_LIGHTING )
  OpenGLContext scenegraph/arraygeometry.py glDisable( GL_CULL_FACE )
  OpenGLContext scenegraph/arraygeometry.py glDisable( GL_COLOR_MATERIAL )
  OpenGLContext scenegraph/arraygeometry.py glDisable( GL_CULL_FACE )
  OpenGLContext scenegraph/shape.py glDisable(GL_LIGHTING)
  OpenGLContext scenegraph/shape.py glDisable(GL_LIGHTING)
  OpenGLContext scenegraph/cubebackground.py glDisable( GL_DEPTH_TEST ) # we don't want to do anything with the depth buffer...
  OpenGLContext scenegraph/cubebackground.py glDisable( GL_LIGHTING )
  OpenGLContext scenegraph/cubebackground.py glDisable( GL_COLOR_MATERIAL )
  OpenGLContext scenegraph/imagetexture.py glDisable( GL_TEXTURE_2D )
  OpenGLContext scenegraph/indexedlineset.py glDisable( GL_COLOR_MATERIAL )
  OpenGLContext scenegraph/indexedpolygons.py glDisable( GL_CULL_FACE )
  OpenGLContext scenegraph/indexedpolygons.py glDisable( GL_COLOR_MATERIAL )
  OpenGLContext scenegraph/indexedpolygons.py glDisable( GL_CULL_FACE )
  OpenGLContext scenegraph/indexedpolygons.py glDisable( GL_LIGHTING )
  OpenGLContext scenegraph/spherebackground.py glDisable( GL_DEPTH_TEST ) # we don't want to do anything with the depth buffer...
  OpenGLContext scenegraph/spherebackground.py glDisable( GL_LIGHTING )
  OpenGLContext scenegraph/spherebackground.py glDisable( GL_CULL_FACE )
  OpenGLContext scenegraph/spherebackground.py glDisable( GL_COLOR_MATERIAL )
  OpenGLContext scenegraph/nurbs.py glDisable( GL_AUTO_NORMAL )
  OpenGLContext scenegraph/nurbs.py glDisable( GL_NORMALIZE )
  OpenGLContext scenegraph/nurbs.py glDisable( GL_CULL_FACE )
  OpenGLContext scenegraph/pointset.py glDisable( GL_LIGHTING )
  OpenGLContext scenegraph/pointset.py glDisable( GL_VERTEX_ARRAY )
  OpenGLContext scenegraph/pointset.py glDisable( GL_COLOR_MATERIAL )
  OpenGLContext scenegraph/pointset.py glDisable( GL_COLOR_ARRAY )
  OpenGL/Demo dek/texturesurf.py glDisable(GL_CULL_FACE)
  OpenGL/Demo dek/texturesurf2.py glDisable(GL_CULL_FACE)
  OpenGL/Demo dek/OglSurface/OglFrame.py glDisable(GL_LIGHTING)
  OpenGL/Demo dek/OglSurface/triangle.py glDisable(GL_LIGHTING)
  OpenGL/Demo dek/OglSurface/triangle.py glDisable(GL_BLEND)
  OpenGL/Demo dek/OglSurface/triangle.py glDisable(GL_LIGHTING)
  OpenGL/Demo dek/OglSurface/triangle.py glDisable(GL_BLEND)
  OpenGL/Demo NeHe/lesson18.py glDisable(GL_LIGHTING)
  OpenGL/Demo redbook/lines.py glDisable (GL_LINE_STIPPLE)
  OpenGL/Demo redbook/movelight.py glDisable (GL_LIGHTING)
  OpenGL/Demo suite/items/GLE/cone.py glDisable(GL_DEPTH_TEST)
  OpenGL/Demo suite/items/GLE/cone.py glDisable(GL_COLOR_MATERIAL)
  OpenGL/Demo suite/items/GLE/cone.py glDisable(GL_LIGHTING)
  OpenGL/Demo suite/items/GLE/cone.py glDisable(GL_LIGHT0)
  OpenGL/Demo suite/items/GLE/cone.py glDisable(GL_LIGHT1)
  OpenGL/Demo suite/items/GLE/helix.py glDisable(GL_DEPTH_TEST)
  OpenGL/Demo suite/items/GLE/helix.py glDisable(GL_COLOR_MATERIAL)
  OpenGL/Demo suite/items/GLE/helix.py glDisable(GL_LIGHTING)
  OpenGL/Demo suite/items/GLE/helix.py glDisable(GL_LIGHT0)
  OpenGL/Demo suite/items/GLE/helix.py glDisable(GL_LIGHT1)
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glDisable(GL_DEPTH_TEST)
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glDisable(GL_COLOR_MATERIAL)
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glDisable(GL_LIGHTING)
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glDisable(GL_LIGHT0)
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glDisable(GL_LIGHT1)
  OpenGL/Demo tom/arraytest.py glDisable(GL_LIGHTING)
  OpenGL/Demo tom/checker.py glDisable(GL_LIGHTING)
  OpenGL/Demo tom/conechecker.py glDisable(GL_LIGHTING)
  OpenGL/Demo tom/demo.py glDisable(GL_LIGHTING)
  OpenGL/Demo tom/fog.py glDisable(GL_DITHER)
  OpenGL/Demo tom/Line.py glDisable(GL_LIGHTING)
  OpenGL/Demo tom/lorentz.py glDisable(GL_LIGHTING)
  OpenGL/Demo tom/poly.py glDisable(GL_LIGHTING)
  SciPy/kiva glcore2d.py glDisable( GL_LINE_STIPPLE )
  SciPy/kiva glcore2d.py glDisable(GL_BLEND)
  SciPy/kiva glcore2d.py glDisable( GL_BLEND )
  SciPy/kiva glcore2d.py glDisable( GL_BLEND )
  SciPy/kiva glcore2d.py glDisable( GL_SCISSOR_TEST )
  (LGPL) PyUI pyui/renderers/openglBase.py glDisable(GL_TEXTURE_2D)
  (LGPL) PyUI pyui/renderers/openglBase.py glDisable(GL_TEXTURE_2D)
  (LGPL) PyUI pyui/renderers/openglBase.py glDisable(GL_TEXTURE_2D)
  (LGPL) PyUI pyui/renderers/openglBase.py glDisable(GL_SCISSOR_TEST)
  (LGPL) PyUI pyui/renderers/openglBase.py glDisable(GL_DEPTH_TEST)
  (LGPL) PyUI pyui/renderers/openglPygame.py glDisable(GL_TEXTURE_2D)
  (LGPL) VisionEgg src/Core.py gl.glDisable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Core.py gl.glDisable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/Core.py gl.glDisable(gl.GL_BLEND)
  (LGPL) VisionEgg src/Dots.py gl.glDisable( gl.GL_BLEND )
  (LGPL) VisionEgg src/Dots.py gl.glDisable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/Dots.py gl.glDisable( gl.GL_POINT_SMOOTH ) # turn off
  (LGPL) VisionEgg src/Gratings.py gl.glDisable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/Gratings.py gl.glDisable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Gratings.py gl.glDisable(gl.GL_TEXTURE_1D)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glDisable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glDisable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glDisable(gl.GL_BLEND)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glDisable(gl.GL_LINE_SMOOTH)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glDisable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glDisable(gl.GL_BLEND)
  (LGPL) VisionEgg src/SphereMap.py gl.glDisable( gl.GL_TEXTURE_2D )
  (LGPL) VisionEgg src/SphereMap.py gl.glDisable( gl.GL_BLEND )
  (LGPL) VisionEgg src/SphereMap.py gl.glDisable( gl.GL_TEXTURE_1D )
  (LGPL) VisionEgg src/Text.py gl.glDisable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/Text.py gl.glDisable(gl.GL_BLEND)
  (LGPL) VisionEgg src/Text.py gl.glDisable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Text.py gl.glDisable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/Text.py gl.glDisable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/Text.py gl.glDisable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Text.py gl.glDisable(gl.GL_BLEND)
  (LGPL) VisionEgg src/Textures.py gl.glDisable(gl.GL_TEXTURE_2D) # turn off texturing in this texture unit
  (LGPL) VisionEgg src/Textures.py gl.glDisable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Textures.py gl.glDisable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Textures.py gl.glDisable(gl.GL_BLEND)
glDisableClientState
  OpenGLContext shadow/volume.py glDisableClientState(GL_VERTEX_ARRAY);
  OpenGLContext shadow/volume.py glDisableClientState(GL_VERTEX_ARRAY);
  OpenGLContext shadow/volume.py glDisableClientState(GL_VERTEX_ARRAY);
  OpenGLContext scenegraph/arraygeometry.py glDisableClientState( GL_VERTEX_ARRAY )
  OpenGLContext scenegraph/arraygeometry.py glDisableClientState( GL_COLOR_ARRAY )
  OpenGLContext scenegraph/arraygeometry.py glDisableClientState( GL_NORMAL_ARRAY )
  OpenGLContext scenegraph/arraygeometry.py glDisableClientState( GL_TEXTURE_COORD_ARRAY )
  OpenGLContext scenegraph/indexedpolygons.py glDisableClientState(GL_VERTEX_ARRAY);
  OpenGLContext scenegraph/indexedpolygons.py glDisableClientState( GL_COLOR_ARRAY )
  OpenGLContext scenegraph/indexedpolygons.py glDisableClientState( GL_NORMAL_ARRAY )
  OpenGLContext scenegraph/indexedpolygons.py glDisableClientState( GL_TEXTURE_COORD_ARRAY )
  OpenGLContext scenegraph/spherebackground.py glDisableClientState( GL_NORMAL_ARRAY )
  OpenGLContext scenegraph/spherebackground.py glDisableClientState( GL_VERTEX_ARRAY )
  OpenGLContext scenegraph/spherebackground.py glDisableClientState( GL_COLOR_ARRAY )
  OpenGL/Demo da/dots.py glDisableClientState(GL_VERTEX_ARRAY)
  OpenGL/Demo suite/items/da/dots.py glDisableClientState(GL_VERTEX_ARRAY)
  SciPy/kiva glcore2d.py glDisableClientState( GL_VERTEX_ARRAY )
  SciPy/kiva glcore2d.py glDisableClientState( GL_VERTEX_ARRAY )
glDistFromLine
  OpenGL/Demo tom/pick.py d = glDistFromLine(s, p1, p2)
glDrawArrays
  OpenGLContext shadow/volume.py glDrawArrays(GL_TRIANGLES, 0, len(self.backwardPoints))
  OpenGLContext shadow/volume.py glDrawArrays( self.sideType, 0, len(self.edges))
  OpenGLContext tests/gldrawarrays.py glDrawArrays(GL_TRIANGLES, 0, len(flower_geometry.points_expanded))
  OpenGLContext tests/gldrawarrays_string.py glDrawArrays(GL_TRIANGLES, 0, len(flower_geometry.points_expanded))
  OpenGLContext scenegraph/arraygeometry.py apply ( glDrawArrays, self.arguments)
  OpenGLContext scenegraph/spherebackground.py glDrawArrays( GL_TRIANGLE_STRIP, 0, len(vertices))
  OpenGLContext scenegraph/pointset.py glDrawArrays( GL_POINTS, 0, len(points))
  OpenGL/Demo da/dots.py glDrawArrays(GL_POINTS, 0, len(v))
  OpenGL/Demo suite/items/da/dots.py glDrawArrays(GL_POINTS, 0, len(v))
  OpenGL/Demo tom/arraytest.py glDrawArrays(GL_LINE_LOOP, 0, n)
  OpenGL/Demo tom/poly.py glDrawArrays(GL_LINE_LOOP, 0, n)
  SciPy/kiva glcore2d.py glDrawArrays( poly_mode, 0, len( pts ) )
  SciPy/kiva glcore2d.py glDrawArrays( poly_mode, 0, len_pts )
  SciPy/kiva glcore2d.py glDrawArrays( poly_mode, 0, len_pts )
glDrawElementsui
  OpenGLContext shadow/volume.py glDrawElementsui(
  OpenGLContext tests/gldrawelements.py glDrawElementsui(
  OpenGLContext tests/glinterleavedarrays.py glDrawElementsui(GL_QUADS,indices)
  OpenGLContext tests/glinterleavedarrays.py glDrawElementsui(GL_QUADS, indices)
  OpenGLContext tests/gldrawelements_base.py glDrawElementsui(
  OpenGLContext scenegraph/arraygeometry.py glDrawElementsui(
  OpenGLContext scenegraph/indexedpolygons.py glDrawElementsui(
  OpenGLContext scenegraph/indexedpolygons.py glDrawElementsui(
glDrawPixels
  OpenGLContext tests/gldrawpixels.py glDrawPixels(
  SciPy/kiva glcore2d.py glDrawPixels( dx, dy, GL_RGBA, GL_UNSIGNED_BYTE, img.tostring() )
glEnable
  OpenGLContext context.py glEnable(GL_LIGHTING);
  OpenGLContext context.py glEnable(GL_LIGHT0);
  OpenGLContext renderpass.py glEnable(GL_BLEND);
  OpenGLContext renderpass.py glEnable(GL_DEPTH_TEST);
  OpenGLContext renderpass.py glEnable(GL_DEPTH_TEST);
  OpenGLContext renderpass.py glEnable(GL_LIGHTING)
  OpenGLContext texture.py glEnable(GL_TEXTURE_2D)
  OpenGLContext rendervisitor.py glEnable(GL_LIGHTING);
  OpenGLContext rendervisitor.py glEnable(GL_LIGHTING);
  OpenGLContext rendervisitor.py glEnable(lightID)
  OpenGLContext rendervisitor.py glEnable(GL_DEPTH_TEST);
  OpenGLContext rendervisitor.py glEnable(GL_CULL_FACE)
  OpenGLContext shadow/passes.py glEnable(GL_DEPTH_TEST);
  OpenGLContext shadow/passes.py glEnable(GL_BLEND);
  OpenGLContext shadow/passes.py glEnable(GL_STENCIL_TEST);
  OpenGLContext shadow/passes.py glEnable( GL_CULL_FACE )
  OpenGLContext shadow/passes.py glEnable(GL_BLEND);
  OpenGLContext shadow/passes.py glEnable(GL_LIGHTING);
  OpenGLContext tests/dek_texturesurf.py glEnable(GL_DEPTH_TEST)
  OpenGLContext tests/dek_texturesurf.py glEnable(GL_NORMALIZE)
  OpenGLContext tests/dek_texturesurf.py glEnable(GL_TEXTURE_2D)
  OpenGLContext tests/dek_texturesurf.py glEnable(GL_MAP2_TEXTURE_COORD_2)
  OpenGLContext tests/dek_texturesurf.py glEnable(GL_MAP2_VERTEX_3)
  OpenGLContext tests/gldrawpixels.py glEnable(GL_ALPHA_TEST);
  OpenGLContext tests/lightobject.py glEnable(GL_LIGHTING);
  OpenGLContext tests/nehe6.py glEnable(GL_TEXTURE_2D)
  OpenGLContext tests/nehe7.py glEnable( GL_LIGHTING )
  OpenGLContext tests/nehe7.py glEnable(GL_LIGHT1);
  OpenGLContext tests/nehe7.py glEnable(GL_TEXTURE_2D)
  OpenGLContext tests/nehe8.py glEnable( GL_LIGHTING )
  OpenGLContext tests/nehe8.py glEnable(GL_LIGHT1);
  OpenGLContext tests/nehe8.py glEnable(GL_TEXTURE_2D)
  OpenGLContext tests/nehe8.py glEnable(GL_DEPTH_TEST);
  OpenGLContext tests/nehe8.py glEnable(GL_BLEND);
  OpenGLContext tests/redbook_alpha.py glEnable (GL_BLEND);
  OpenGLContext tests/redbook_alpha3D.py glEnable(GL_LIGHTING);
  OpenGLContext tests/redbook_alpha3D.py glEnable(GL_LIGHT0);
  OpenGLContext tests/redbook_alpha3D.py glEnable (GL_BLEND);
  OpenGLContext tests/redbook_surface.py glEnable(GL_AUTO_NORMAL);
  OpenGLContext tests/redbook_surface.py glEnable(GL_NORMALIZE);
  OpenGLContext tests/redbook_trim.py glEnable(GL_AUTO_NORMAL);
  OpenGLContext tests/redbook_trim.py glEnable(GL_NORMALIZE);
  OpenGLContext tests/redbook_surface_cb.py glEnable(GL_AUTO_NORMAL);
  OpenGLContext tests/redbook_surface_cb.py glEnable(GL_NORMALIZE);
  OpenGLContext scenegraph/arraygeometry.py glEnable( GL_COLOR_MATERIAL )
  OpenGLContext scenegraph/arraygeometry.py glEnable(GL_NORMALIZE); # should do this explicitly eventually
  OpenGLContext scenegraph/arraygeometry.py glEnable( GL_CULL_FACE )
  OpenGLContext scenegraph/shape.py glEnable(GL_LIGHTING)
  OpenGLContext scenegraph/cubebackground.py glEnable( GL_COLOR_MATERIAL )
  OpenGLContext scenegraph/cubebackground.py glEnable( GL_DEPTH_TEST )
  OpenGLContext scenegraph/cubebackground.py glEnable( GL_LIGHTING )
  OpenGLContext scenegraph/imagetexture.py glEnable (GL_BLEND)
  OpenGLContext scenegraph/indexedlineset.py glEnable( GL_COLOR_MATERIAL )
  OpenGLContext scenegraph/indexedpolygons.py glEnable( GL_CULL_FACE )
  OpenGLContext scenegraph/indexedpolygons.py glEnable( GL_COLOR_MATERIAL )
  OpenGLContext scenegraph/indexedpolygons.py glEnable(GL_NORMALIZE); # should do this explicitly eventually
  OpenGLContext scenegraph/spherebackground.py glEnable( GL_COLOR_MATERIAL )
  OpenGLContext scenegraph/spherebackground.py glEnable( GL_DEPTH_TEST )
  OpenGLContext scenegraph/spherebackground.py glEnable( GL_LIGHTING )
  OpenGLContext scenegraph/spherebackground.py glEnable( GL_CULL_FACE )
  OpenGLContext scenegraph/nurbs.py glEnable( GL_AUTO_NORMAL )
  OpenGLContext scenegraph/nurbs.py glEnable( GL_NORMALIZE )
  OpenGLContext scenegraph/nurbs.py glEnable( GL_CULL_FACE )
  OpenGLContext scenegraph/nurbs.py glEnable( GL_COLOR_MATERIAL )
  OpenGLContext scenegraph/nurbs.py glEnable( GL_CULL_FACE )
  OpenGLContext scenegraph/light.py glEnable( GL_LIGHTING )
  OpenGLContext scenegraph/light.py glEnable( lightID )
  OpenGLContext scenegraph/pointset.py glEnable( GL_VERTEX_ARRAY )
  OpenGLContext scenegraph/pointset.py glEnable( GL_COLOR_MATERIAL )
  OpenGLContext scenegraph/pointset.py glEnable( GL_COLOR_ARRAY )
  OpenGL/Demo dek/texturesurf.py glEnable(GL_MAP2_TEXTURE_COORD_2)
  OpenGL/Demo dek/texturesurf.py glEnable(GL_MAP2_VERTEX_3)
  OpenGL/Demo dek/texturesurf.py glEnable(GL_TEXTURE_2D)
  OpenGL/Demo dek/texturesurf.py glEnable(GL_DEPTH_TEST)
  OpenGL/Demo dek/texturesurf.py glEnable(GL_NORMALIZE)
  OpenGL/Demo dek/texturesurf2.py glEnable(GL_MAP2_TEXTURE_COORD_2)
  OpenGL/Demo dek/texturesurf2.py glEnable(GL_MAP2_VERTEX_3)
  OpenGL/Demo dek/texturesurf2.py glEnable(GL_TEXTURE_2D)
  OpenGL/Demo dek/texturesurf2.py glEnable(GL_DEPTH_TEST)
  OpenGL/Demo dek/texturesurf2.py glEnable(GL_NORMALIZE)
  OpenGL/Demo dek/tile.py glEnable(GL_TEXTURE_2D)
  OpenGL/Demo dek/OglSurface/OglFrame.py glEnable(GL_BLEND);
  OpenGL/Demo dek/OglSurface/OglFrame.py glEnable(GL_LINE_SMOOTH);
  OpenGL/Demo dek/OglSurface/triangle.py glEnable(GL_DEPTH_TEST)
  OpenGL/Demo dek/OglSurface/triangle.py glEnable(GL_CULL_FACE)
  OpenGL/Demo dek/OglSurface/triangle.py glEnable(GL_LIGHTING)
  OpenGL/Demo dek/OglSurface/triangle.py glEnable(GL_BLEND)
  OpenGL/Demo dek/OglSurface/triangle.py glEnable(GL_COLOR_MATERIAL)
  OpenGL/Demo dek/OglSurface/triangle.py glEnable(GL_BLEND)
  OpenGL/Demo GLE/maintest.py glEnable (GL_DEPTH_TEST)
  OpenGL/Demo GLE/maintest.py glEnable (GL_LIGHT0)
  OpenGL/Demo GLE/maintest.py glEnable (GL_LIGHT1)
  OpenGL/Demo GLE/maintest.py glEnable (GL_LIGHTING)
  OpenGL/Demo GLE/maintest.py glEnable (GL_COLOR_MATERIAL)
  OpenGL/Demo GLUT/examples/molehill.py glEnable(GL_LIGHTING)
  OpenGL/Demo GLUT/examples/molehill.py glEnable(GL_LIGHT0)
  OpenGL/Demo GLUT/examples/molehill.py glEnable(GL_DEPTH_TEST)
  OpenGL/Demo GLUT/examples/molehill.py glEnable(GL_AUTO_NORMAL)
  OpenGL/Demo GLUT/examples/molehill.py glEnable(GL_NORMALIZE)
  OpenGL/Demo NeHe/lesson1.py glEnable(GL_DEPTH_TEST)				# Enables Depth Testing
  OpenGL/Demo NeHe/lesson18.py glEnable(GL_TEXTURE_2D)
  OpenGL/Demo NeHe/lesson18.py glEnable(GL_DEPTH_TEST)				# Enables Depth Testing
  OpenGL/Demo NeHe/lesson18.py glEnable(GL_LIGHT0)					# Enable Light One
  OpenGL/Demo NeHe/lesson18.py glEnable(GL_LIGHTING)
  OpenGL/Demo NeHe/lesson2.py glEnable(GL_DEPTH_TEST)				# Enables Depth Testing
  OpenGL/Demo NeHe/lesson3.py glEnable(GL_DEPTH_TEST)				# Enables Depth Testing
  OpenGL/Demo NeHe/lesson4.py glEnable(GL_DEPTH_TEST)				# Enables Depth Testing
  OpenGL/Demo NeHe/lesson5.py glEnable(GL_DEPTH_TEST)				# Enables Depth Testing
  OpenGL/Demo NeHe/lesson6-multi.py glEnable(GL_TEXTURE_2D)
  OpenGL/Demo NeHe/lesson6-multi.py glEnable(GL_TEXTURE_2D)
  OpenGL/Demo NeHe/lesson6-multi.py glEnable(GL_DEPTH_TEST)				# Enables Depth Testing
  OpenGL/Demo NeHe/lesson6.py glEnable(GL_TEXTURE_2D)
  OpenGL/Demo NeHe/lesson6.py glEnable(GL_DEPTH_TEST)				# Enables Depth Testing
  OpenGL/Demo redbook/fog.py glEnable(GL_DEPTH_TEST)
  OpenGL/Demo redbook/fog.py glEnable(GL_LIGHTING)
  OpenGL/Demo redbook/fog.py glEnable(GL_LIGHT0)
  OpenGL/Demo redbook/fog.py glEnable(GL_FOG)
  OpenGL/Demo redbook/lines.py glEnable(GL_LINE_STIPPLE)
  OpenGL/Demo redbook/movelight.py glEnable(GL_LIGHTING)
  OpenGL/Demo redbook/movelight.py glEnable(GL_LIGHT0)
  OpenGL/Demo redbook/movelight.py glEnable(GL_DEPTH_TEST)
  OpenGL/Demo redbook/movelight.py glEnable (GL_LIGHTING)
  OpenGL/Demo redbook/scene.py glEnable(GL_LIGHTING)
  OpenGL/Demo redbook/scene.py glEnable(GL_LIGHT0)
  OpenGL/Demo redbook/scene.py glEnable(GL_DEPTH_TEST)
  OpenGL/Demo redbook/teapots.py glEnable(GL_LIGHTING)
  OpenGL/Demo redbook/teapots.py glEnable(GL_LIGHT0)
  OpenGL/Demo redbook/teapots.py glEnable(GL_AUTO_NORMAL)
  OpenGL/Demo redbook/teapots.py glEnable(GL_NORMALIZE)
  OpenGL/Demo redbook/teapots.py glEnable(GL_DEPTH_TEST)
  OpenGL/Demo simple/GLE.py glEnable(GL_DEPTH_TEST)
  OpenGL/Demo simple/GLE.py glEnable(GL_LIGHT0)
  OpenGL/Demo simple/GLE.py glEnable(GL_LIGHT1)
  OpenGL/Demo simple/GLE.py glEnable(GL_LIGHTING)
  OpenGL/Demo simple/GLE.py glEnable(GL_COLOR_MATERIAL)
  OpenGL/Demo suite/items/GLE/cone.py glEnable(GL_DEPTH_TEST)
  OpenGL/Demo suite/items/GLE/cone.py glEnable(GL_COLOR_MATERIAL)
  OpenGL/Demo suite/items/GLE/cone.py glEnable(GL_LIGHTING)
  OpenGL/Demo suite/items/GLE/cone.py glEnable(GL_LIGHT0)
  OpenGL/Demo suite/items/GLE/cone.py glEnable(GL_LIGHT1)
  OpenGL/Demo suite/items/GLE/helix.py glEnable(GL_DEPTH_TEST)
  OpenGL/Demo suite/items/GLE/helix.py glEnable(GL_COLOR_MATERIAL)
  OpenGL/Demo suite/items/GLE/helix.py glEnable(GL_LIGHTING)
  OpenGL/Demo suite/items/GLE/helix.py glEnable(GL_LIGHT0)
  OpenGL/Demo suite/items/GLE/helix.py glEnable(GL_LIGHT1)
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glEnable(GL_DEPTH_TEST)
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glEnable(GL_COLOR_MATERIAL)
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glEnable(GL_LIGHTING)
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glEnable(GL_LIGHT0)
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glEnable(GL_LIGHT1)
  OpenGL/Demo tom/arraytest.py glEnable(GL_LIGHTING)
  OpenGL/Demo tom/checker.py glEnable(GL_LIGHTING)
  OpenGL/Demo tom/cone.py glEnable(GL_LIGHTING)
  OpenGL/Demo tom/cone.py glEnable(GL_LIGHT0)
  OpenGL/Demo tom/cone.py glEnable(GL_DEPTH_TEST)
  OpenGL/Demo tom/conechecker.py glEnable(GL_LIGHTING)
  OpenGL/Demo tom/conechecker.py glEnable(GL_LIGHTING)
  OpenGL/Demo tom/conechecker.py glEnable(GL_LIGHT0)
  OpenGL/Demo tom/conechecker.py glEnable(GL_DEPTH_TEST)
  OpenGL/Demo tom/conesave.py glEnable(GL_LIGHTING)
  OpenGL/Demo tom/conesave.py glEnable(GL_LIGHT0)
  OpenGL/Demo tom/demo.py glEnable(GL_LIGHTING)
  OpenGL/Demo tom/fog.py glEnable(GL_DEPTH_TEST)
  OpenGL/Demo tom/fog.py glEnable(GL_LIGHTING)
  OpenGL/Demo tom/fog.py glEnable(GL_LIGHT0)
  OpenGL/Demo tom/fog.py glEnable(GL_AUTO_NORMAL)
  OpenGL/Demo tom/fog.py glEnable(GL_NORMALIZE)
  OpenGL/Demo tom/fog.py glEnable(GL_FOG)
  OpenGL/Demo tom/Line.py glEnable(GL_LIGHTING)
  OpenGL/Demo tom/lorentz.py glEnable(GL_LIGHTING)
  OpenGL/Demo tom/poly.py glEnable(GL_LIGHTING)
  OpenGL/Demo tom/text.py glEnable(GL_CULL_FACE)  # added by jfp to use with new logo.py
  OpenGL/Demo tom/text.py glEnable(GL_DEPTH_TEST) #
  OpenGL/Demo twburton/knot.py glEnable(GL_DEPTH_TEST)
  OpenGL/Demo twburton/knot.py glEnable(GL_LIGHTING)
  OpenGL/Demo twburton/knot.py glEnable(GL_LIGHT0)
  OpenGL/Demo twburton/knot.py glEnable(GL_CULL_FACE)
  SciPy/kiva glcore2d.py glEnable( GL_LINE_STIPPLE )
  SciPy/kiva glcore2d.py glEnable( GL_BLEND )
  SciPy/kiva glcore2d.py glEnable( GL_BLEND )
  SciPy/kiva glcore2d.py glEnable( GL_SCISSOR_TEST )
  (LGPL) PyUI pyui/renderers/openglBase.py glEnable(GL_TEXTURE_2D)
  (LGPL) PyUI pyui/renderers/openglBase.py glEnable(GL_TEXTURE_2D)
  (LGPL) PyUI pyui/renderers/openglBase.py glEnable(GL_SCISSOR_TEST)
  (LGPL) PyUI pyui/renderers/openglBase.py glEnable(GL_SCISSOR_TEST)
  (LGPL) PyUI pyui/renderers/openglBase.py glEnable(GL_BLEND)
  (LGPL) PyUI pyui/renderers/openglPygame.py glEnable(GL_TEXTURE_2D)
  (LGPL) PyUI tests/testcube.py glEnable(GL_DEPTH_TEST)
  (LGPL) PyUI tests/testcube.py glEnable(GL_NORMALIZE)
  (LGPL) VisionEgg src/Dots.py gl.glEnable( gl.GL_POINT_SMOOTH )
  (LGPL) VisionEgg src/Dots.py gl.glEnable( gl.GL_BLEND )
  (LGPL) VisionEgg src/Dots.py gl.glEnable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Gratings.py gl.glEnable(gl.GL_TEXTURE_1D)
  (LGPL) VisionEgg src/Gratings.py gl.glEnable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Gratings.py gl.glEnable( gl.GL_BLEND )
  (LGPL) VisionEgg src/MoreStimuli.py gl.glEnable(gl.GL_LINE_SMOOTH)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glEnable(gl.GL_BLEND)
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_DEPTH_TEST )
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_TEXTURE_2D )  # Make sure textures are drawn
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_BLEND ) # Contrast control implemented through blending
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_DEPTH_TEST )
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_TEXTURE_1D )  # Make sure textures are drawn
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_DEPTH_TEST )
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_TEXTURE_2D )
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_BLEND )
  (LGPL) VisionEgg src/SphereMap.py gl.glEnable( gl.GL_TEXTURE_2D )
  (LGPL) VisionEgg src/Text.py gl.glEnable(gl.GL_BLEND)
  (LGPL) VisionEgg src/Text.py gl.glEnable(gl.GL_LINE_SMOOTH)
  (LGPL) VisionEgg src/Textures.py gl.glEnable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/Textures.py gl.glEnable( gl.GL_TEXTURE_2D )
  (LGPL) VisionEgg src/Textures.py gl.glEnable( gl.GL_BLEND )
  (LGPL) VisionEgg src/Textures.py gl.glEnable(gl.GL_DEPTH_TEST)
  (LGPL) VisionEgg src/Textures.py gl.glEnable(gl.GL_TEXTURE_2D)
  (LGPL) VisionEgg src/Textures.py gl.glEnable( gl.GL_DEPTH_TEST )
  (LGPL) VisionEgg src/Textures.py gl.glEnable( gl.GL_TEXTURE_2D )  # Make sure textures are drawn
  (LGPL) VisionEgg src/Textures.py gl.glEnable( gl.GL_BLEND ) # Contrast control implemented through blending
glEnableClientState
  OpenGLContext shadow/volume.py glEnableClientState(GL_VERTEX_ARRAY);
  OpenGLContext shadow/volume.py glEnableClientState(GL_VERTEX_ARRAY);
  OpenGLContext shadow/volume.py glEnableClientState(GL_VERTEX_ARRAY);
  OpenGLContext tests/glarrayelement.py glEnableClientState(GL_VERTEX_ARRAY);
  OpenGLContext tests/glarrayelement.py glEnableClientState(GL_NORMAL_ARRAY);
  OpenGLContext tests/gldrawarrays.py glEnableClientState(GL_VERTEX_ARRAY);
  OpenGLContext tests/gldrawarrays.py glEnableClientState(GL_NORMAL_ARRAY);
  OpenGLContext tests/gldrawarrays_string.py glEnableClientState(GL_VERTEX_ARRAY);
  OpenGLContext tests/gldrawarrays_string.py glEnableClientState(GL_NORMAL_ARRAY);
  OpenGLContext tests/gldrawelements.py glEnableClientState(GL_VERTEX_ARRAY);
  OpenGLContext tests/gldrawelements_base.py glEnableClientState(GL_VERTEX_ARRAY);
  OpenGLContext scenegraph/arraygeometry.py glEnableClientState( GL_VERTEX_ARRAY )
  OpenGLContext scenegraph/arraygeometry.py glEnableClientState( GL_COLOR_ARRAY )
  OpenGLContext scenegraph/arraygeometry.py glEnableClientState( GL_NORMAL_ARRAY )
  OpenGLContext scenegraph/arraygeometry.py glEnableClientState( GL_TEXTURE_COORD_ARRAY )
  OpenGLContext scenegraph/indexedpolygons.py glEnableClientState( GL_COLOR_ARRAY )
  OpenGLContext scenegraph/indexedpolygons.py glEnableClientState( GL_NORMAL_ARRAY )
  OpenGLContext scenegraph/indexedpolygons.py glEnableClientState( GL_TEXTURE_COORD_ARRAY )
  OpenGLContext scenegraph/indexedpolygons.py glEnableClientState(GL_VERTEX_ARRAY);
  OpenGLContext scenegraph/spherebackground.py glEnableClientState( GL_VERTEX_ARRAY )
  OpenGLContext scenegraph/spherebackground.py glEnableClientState( GL_COLOR_ARRAY )
  OpenGL/Demo da/dots.py glEnableClientState(GL_VERTEX_ARRAY)
  OpenGL/Demo suite/items/da/dots.py glEnableClientState(GL_VERTEX_ARRAY)
  OpenGL/Demo tom/arraytest.py glEnableClientState(GL_VERTEX_ARRAY)
  OpenGL/Demo tom/arraytest.py glEnableClientState(GL_COLOR_ARRAY)
  OpenGL/Demo tom/poly.py glEnableClientState(GL_VERTEX_ARRAY)
  OpenGL/Demo tom/poly.py glEnableClientState(GL_COLOR_ARRAY)
  SciPy/kiva glcore2d.py glEnableClientState( GL_VERTEX_ARRAY )
  SciPy/kiva glcore2d.py glEnableClientState( GL_VERTEX_ARRAY )
glEnd
  OpenGLContext drawcube.py glEnd()
  OpenGLContext shadow/volume.py glEnd( )
  OpenGLContext tests/backgroundobject.py glEnd()
  OpenGLContext tests/glarrayelement.py glEnd()
  OpenGLContext tests/glvertex.py glEnd()
  OpenGLContext tests/nehe6_timer.py glEnd()
  OpenGLContext tests/nehe2.py glEnd()
  OpenGLContext tests/nehe2.py glEnd();
  OpenGLContext tests/nehe3.py glEnd()
  OpenGLContext tests/nehe3.py glEnd()
  OpenGLContext tests/multitexture_1.py glEnd()
  OpenGLContext tests/nehe4.py glEnd()
  OpenGLContext tests/nehe4.py glEnd()
  OpenGLContext tests/nehe5.py glEnd()
  OpenGLContext tests/nehe5.py glEnd()
  OpenGLContext tests/nehe6.py glEnd()
  OpenGLContext tests/nehe6_multi.py glEnd()
  OpenGLContext tests/nehe7.py glEnd()
  OpenGLContext tests/nehe8.py glEnd()
  OpenGLContext tests/redbook_alpha.py glEnd();
  OpenGLContext tests/redbook_alpha.py glEnd();
  OpenGLContext tests/textureobject.py glEnd()
  OpenGLContext tests/test.py glEnd()
  OpenGLContext tests/redbook_surface_cb.py glEnd()
  OpenGLContext scenegraph/box.py glEnd()
  OpenGLContext scenegraph/cubebackground.py glEnd()
  OpenGLContext scenegraph/indexedlineset.py glEnd()
  OpenGLContext scenegraph/indexedlineset.py glEnd()
  OpenGLContext scenegraph/indexedlineset.py glEnd()
  OpenGL/Demo dek/tile.py glEnd()
  OpenGL/Demo dek/OglSurface/OglFrame.py glEnd()
  OpenGL/Demo dek/OglSurface/triangle.py glEnd()
  OpenGL/Demo dek/OglSurface/triangle.py glEnd()
  OpenGL/Demo NeHe/lesson18.py glEnd();				# Done Drawing The Cube
  OpenGL/Demo NeHe/lesson2.py glEnd()                             # We are done with the polygon
  OpenGL/Demo NeHe/lesson2.py glEnd()                             # We are done with the polygon
  OpenGL/Demo NeHe/lesson3.py glEnd()                             # We are done with the polygon
  OpenGL/Demo NeHe/lesson3.py glEnd()                             # We are done with the polygon
  OpenGL/Demo NeHe/lesson4.py glEnd()                             # We are done with the polygon
  OpenGL/Demo NeHe/lesson4.py glEnd()                             # We are done with the polygon
  OpenGL/Demo NeHe/lesson5.py glEnd();
  OpenGL/Demo NeHe/lesson5.py glEnd();				# Done Drawing The Quad
  OpenGL/Demo NeHe/lesson6-multi.py glEnd();				# Done Drawing The Cube
  OpenGL/Demo NeHe/lesson6.py glEnd();				# Done Drawing The Cube
  OpenGL/Demo redbook/hello.py glEnd()
  OpenGL/Demo redbook/lines.py glEnd()
  OpenGL/Demo redbook/lines.py glEnd()
  OpenGL/Demo redbook/smooth.py glEnd()
  OpenGL/Demo tom/demo.py glEnd()
  OpenGL/Demo tom/Line.py glEnd()
  OpenGL/Demo tom/logo.py glEnd()
  OpenGL/Demo tom/lorentz.py glEnd()
  SciPy/kiva glcore2d.py gluTessCallback( self._glu_tess, GLU_TESS_END,    glEnd )
  (LGPL) PyUI pyui/renderers/openglBase.py glEnd()
  (LGPL) PyUI pyui/renderers/openglBase.py glEnd()
  (LGPL) PyUI pyui/renderers/openglBase.py glEnd()
  (LGPL) PyUI pyui/renderers/openglBase.py glEnd()
  (LGPL) PyUI pyui/renderers/openglBase.py glEnd()
  (LGPL) PyUI pyui/renderers/openglPygame.py glEnd()
  (LGPL) PyUI tests/testcube.py glEnd()
  (LGPL) PyUI tests/testcube.py glEnd()
  (LGPL) VisionEgg src/Core.py gl.glEnd() # GL_QUADS
  (LGPL) VisionEgg src/Dots.py gl.glEnd()
  (LGPL) VisionEgg src/Gratings.py gl.glEnd() # GL_QUADS
  (LGPL) VisionEgg src/MoreStimuli.py gl.glEnd() # GL_QUADS
  (LGPL) VisionEgg src/MoreStimuli.py gl.glEnd() # GL_QUADS
  (LGPL) VisionEgg src/MoreStimuli.py gl.glEnd() # GL_QUADS
  (LGPL) VisionEgg src/SphereMap.py gl.glEnd()
  (LGPL) VisionEgg src/SphereMap.py gl.glEnd()
  (LGPL) VisionEgg src/SphereMap.py gl.glEnd()
  (LGPL) VisionEgg src/SphereMap.py gl.glEnd()
  (LGPL) VisionEgg src/Textures.py gl.glEnd() # GL_QUADS
  (LGPL) VisionEgg src/Textures.py gl.glEnd() # GL_QUADS
  (LGPL) VisionEgg src/Textures.py gl.glEnd() # GL_QUADS
  (LGPL) VisionEgg src/Textures.py gl.glEnd() # GL_QUADS
  (LGPL) VisionEgg src/Textures.py gl.glEnd() # GL_QUADS
  (LGPL) VisionEgg src/Textures.py gl.glEnd()
glEndList
  OpenGLContext displaylist.py glEndList()
  OpenGLContext tests/dek_texturesurf.py glEndList()
  OpenGLContext tests/redbook_alpha3D.py glEndList();
  OpenGLContext tests/redbook_alpha3D.py glEndList();
  OpenGL/Demo dek/texturesurf.py glEndList()
  OpenGL/Demo dek/texturesurf2.py glEndList()
  OpenGL/Demo dek/OglSurface/triangle.py glEndList()
  OpenGL/Demo dek/OglSurface/triangle.py glEndList()
  OpenGL/Demo GLUT/examples/molehill.py glEndList()
  OpenGL/Demo redbook/teapots.py glEndList ()
  OpenGL/Demo tom/demo.py glEndList()
  OpenGL/Demo tom/lorentz.py glEndList()
  OpenGL/Demo tom/text.py glEndList()
  OpenGL/Demo twburton/knot.py glEndList()
  (LGPL) PyUI pyui/renderers/openglGlut.py glEndList()
  (LGPL) PyUI pyui/renderers/openglPygame.py glEndList()
  (LGPL) PyUI pyui/renderers/openglPygame.py glEndList()
  (LGPL) VisionEgg src/SphereMap.py gl.glEndList()
  (LGPL) VisionEgg src/SphereMap.py gl.glEndList()
  (LGPL) VisionEgg src/SphereMap.py gl.glEndList()
  (LGPL) VisionEgg src/SphereMap.py gl.glEndList()
  (LGPL) VisionEgg src/Textures.py gl.glEndList()
glEvalMesh2
  OpenGLContext tests/dek_texturesurf.py glEvalMesh2(GL_FILL, 0, 20, 0, 20)
  OpenGL/Demo dek/texturesurf.py glEvalMesh2(GL_FILL, 0, 20, 0, 20)
  OpenGL/Demo dek/texturesurf2.py glEvalMesh2(GL_FILL, 0, 20, 0, 20)
glFlush
  OpenGLContext renderpass.py glFlush()
  OpenGLContext tests/redbook_alpha.py glFlush();
  OpenGL/Demo da/dots.py glFlush()
  OpenGL/Demo dek/tile.py glFlush()
  OpenGL/Demo redbook/cube.py glFlush ()
  OpenGL/Demo redbook/drawf.py glFlush()
  OpenGL/Demo redbook/hello.py glFlush ();
  OpenGL/Demo redbook/lines.py glFlush ()
  OpenGL/Demo redbook/movelight.py glFlush ()
  OpenGL/Demo redbook/scene.py glFlush()
  OpenGL/Demo redbook/smooth.py glFlush()
  OpenGL/Demo redbook/teapots.py glFlush()
  SciPy/kiva glcore2d.py glFlush()
glFogf
  OpenGL/Demo redbook/fog.py glFogf (GL_FOG_DENSITY, 0.35)
  OpenGL/Demo redbook/fog.py glFogf (GL_FOG_START, 1.0)
  OpenGL/Demo redbook/fog.py glFogf (GL_FOG_END, 5.0)
  OpenGL/Demo tom/fog.py glFogf(GL_FOG_START, 1.0)
  OpenGL/Demo tom/fog.py glFogf(GL_FOG_END, 5.0)
  OpenGL/Demo tom/fog.py glFogf(GL_FOG_DENSITY, 0.35)
glFogfv
  OpenGL/Demo redbook/fog.py glFogfv (GL_FOG_COLOR, fogColor)
  OpenGL/Demo tom/fog.py glFogfv(GL_FOG_COLOR, fogColor)
glFogi
  OpenGL/Demo redbook/fog.py glFogi (GL_FOG_MODE, fogMode)
  OpenGL/Demo redbook/fog.py glFogi(GL_FOG_MODE, fogMode)
  OpenGL/Demo tom/fog.py glFogi(GL_FOG_MODE, val)
  OpenGL/Demo tom/fog.py glFogi(GL_FOG_MODE, val)
  OpenGL/Demo tom/fog.py glFogi(GL_FOG_MODE, GL_EXP)
glFrontFace
  OpenGLContext shadow/volume.py glFrontFace( GL_CW )
  OpenGLContext shadow/volume.py glFrontFace( GL_CCW )
  OpenGLContext scenegraph/arraygeometry.py glFrontFace( self.ccw)
  OpenGLContext scenegraph/indexedpolygons.py glFrontFace( GL_CCW )
  OpenGLContext scenegraph/indexedpolygons.py glFrontFace( GL_CW )
  OpenGLContext scenegraph/indexedpolygons.py glFrontFace( GL_CCW )
  OpenGLContext scenegraph/spherebackground.py glFrontFace( GL_CCW )
  OpenGLContext scenegraph/nurbs.py glFrontFace(  GL_CCW )
  OpenGLContext scenegraph/nurbs.py glFrontFace(  GL_CW )
  OpenGLContext scenegraph/nurbs.py glFrontFace( GL_CCW )
  OpenGL/Demo redbook/teapots.py glFrontFace(GL_CW)
  OpenGL/Demo tom/fog.py glFrontFace(GL_CW)
  OpenGL/Demo tom/text.py glFrontFace(GL_CCW)     #
glFrustum
  OpenGLContext context.py glFrustum(-0.5, 0.5, -0.5, 0.5, .5, 5.0);
  OpenGLContext tests/boundingvolume.py from OpenGL.GL import glFrustum
  OpenGLContext tests/boundingvolume.py glFrustum( -20,20, -20,20, near, far )
  OpenGL/Demo GLE/maintest.py glFrustum (-9.0, 9.0, -9.0, 9.0, 50.0, 150.0)
  OpenGL/Demo redbook/cube.py glFrustum (-1.0, 1.0, -1.0, 1.0, 1.5, 20.0)
  OpenGL/Demo simple/GLE.py glFrustum(-clipping_planes[0], clipping_planes[0], -clipping_planes[1], clipping_planes[1], 50.0, 150.0)
  (LGPL) VisionEgg src/Core.py gl.glFrustum(left,right,bottom,top,near,far) # Let GL create a matrix and compose it
glGenLists
  OpenGLContext displaylist.py self.list = glGenLists (1)
  OpenGLContext tests/dek_texturesurf.py displayList = glGenLists(1)
  OpenGLContext tests/glprint.py self.base = glGenLists(96)								# Storage For 96 Characters
  OpenGLContext tests/redbook_alpha3D.py self.sphereList = glGenLists(1);
  OpenGLContext tests/redbook_alpha3D.py self.cubeList = glGenLists(1);
  OpenGLContext scenegraph/text/wglfont.py base = glGenLists( 1 )
  OpenGL/Demo dek/texturesurf.py self.list = glGenLists(1)
  OpenGL/Demo dek/texturesurf2.py self.list = glGenLists(1)
  OpenGL/Demo dek/OglSurface/triangle.py self.surfacelist = glGenLists(1)
  OpenGL/Demo dek/OglSurface/triangle.py self.bondlist = glGenLists(1)
  OpenGL/Demo redbook/teapots.py teapotList = glGenLists(1)
  OpenGL/Demo tom/demo.py ogl.grob = glGenLists(1);
  OpenGL/Demo tom/lorentz.py o.grob = glGenLists(10);
  OpenGL/Demo tom/text.py o.grob = glGenLists(1);
  OpenGL/Demo twburton/knot.py self.list = glGenLists(1)
  (LGPL) PyUI pyui/renderers/openglGlut.py w.displayList = glGenLists(1)
  (LGPL) PyUI pyui/renderers/openglPygame.py w.displayList = glGenLists(1)
  (LGPL) PyUI pyui/renderers/openglPygame.py newList = glGenLists(1)
  (LGPL) VisionEgg src/SphereMap.py self.cached_display_list = gl.glGenLists(1) # Allocate a new display list
  (LGPL) VisionEgg src/SphereMap.py self.cached_display_list_id = gl.glGenLists(1) # Allocate a new display list
  (LGPL) VisionEgg src/SphereMap.py self.windowed_display_list_id = gl.glGenLists(1) # Allocate a new display list
  (LGPL) VisionEgg src/SphereMap.py self.opaque_display_list_id = gl.glGenLists(1) # Allocate a new display list
  (LGPL) VisionEgg src/Textures.py self.cached_display_list_normal = gl.glGenLists(1) # Allocate a new display list
  (LGPL) VisionEgg src/Textures.py self.cached_display_list_mirror = gl.glGenLists(1) # Allocate a new display list
glGenTextures
  OpenGLContext texture.py self.texture = glGenTextures(1)
  OpenGLContext tests/dek_texturesurf.py ID = glGenTextures(1)
  OpenGLContext tests/nehe6.py ID = glGenTextures(1)
  OpenGLContext tests/nehe7.py ID = glGenTextures(1)
  OpenGLContext tests/nehe7.py ID = glGenTextures(1)
  OpenGLContext tests/nehe7.py ID = glGenTextures(1)
  OpenGLContext tests/nehe8.py ID = glGenTextures(1)
  OpenGLContext tests/nehe8.py ID = glGenTextures(1)
  OpenGLContext tests/nehe8.py ID = glGenTextures(1)
  OpenGL/Demo NeHe/lesson18.py textures = glGenTextures(3)
  OpenGL/Demo NeHe/lesson6-multi.py id = glGenTextures(1)
  OpenGL/Demo NeHe/lesson6.py glBindTexture(GL_TEXTURE_2D, glGenTextures(1))   # 2d texture (x and y size)
  (LGPL) PyUI pyui/renderers/openglGlut.py texture = glGenTextures(1)
  (LGPL) PyUI pyui/renderers/openglPygame.py texture = glGenTextures(1)
  (LGPL) PyUI pyui/renderers/openglPygame.py self.texture = glGenTextures(1)
  (LGPL) VisionEgg src/Gratings.py self._texture_object_id = gl.glGenTextures(1)
  (LGPL) VisionEgg src/SphereMap.py self.texture_object_id = gl.glGenTextures(1) # Allocate a new texture object
  (LGPL) VisionEgg src/SphereMap.py self.texture_object_id = gl.glGenTextures(1)
  (LGPL) VisionEgg src/Textures.py self.gl_id = gl.glGenTextures(1)
glGetBoolean
  OpenGLContext scenegraph/shape.py if glGetBoolean( GL_LIGHTING ):
  OpenGLContext scenegraph/imagetexture.py if glGetBoolean( GL_TEXTURE_2D ):
glGetBooleanv
  (LGPL) VisionEgg test/opengl_info.py print " GL_RGBA_MODE =",glGetBooleanv( GL_RGBA_MODE )
  (LGPL) VisionEgg test/opengl_info.py print " GL_DOUBLEBUFFER = ",glGetBooleanv( GL_DOUBLEBUFFER )
  (LGPL) VisionEgg test/opengl_info.py print " GL_STEREO = ",glGetBooleanv( GL_STEREO )
glGetDouble
  OpenGLContext rendervisitor.py matrix = glGetDouble( GL_MODELVIEW_MATRIX )
  OpenGLContext rendervisitor.py matrix = glGetDouble( GL_MODELVIEW_MATRIX )
  OpenGLContext tests/gldrawpixels.py matrix = glGetDouble( GL_PROJECTION_MATRIX )
  OpenGLContext tests/glutbitmapcharacter.py matrix = glGetDouble( GL_PROJECTION_MATRIX )
  OpenGLContext scenegraph/texturetransform.py matrix = glGetDouble( GL_TEXTURE_MATRIX )
  SciPy/kiva glcore2d.py glm = glGetDouble( GL_MODELVIEW_MATRIX )
glGetDoublev
  OpenGLContext renderpass.py self.projection = glGetDoublev( GL_PROJECTION_MATRIX )
  OpenGLContext renderpass.py self.modelView = glGetDoublev( GL_MODELVIEW_MATRIX )
  OpenGLContext renderpass.py matrix = glGetDoublev( GL_MODELVIEW_MATRIX )
  OpenGLContext frustum.py projection = glGetDoublev( GL_PROJECTION_MATRIX)
  OpenGLContext frustum.py model = glGetDoublev( GL_MODELVIEW_MATRIX )
  OpenGLContext scenegraph/cubebackground.py matrix = glGetDoublev( GL_MODELVIEW_MATRIX )
  OpenGLContext scenegraph/polygonsort.py modelView = glGetDoublev( GL_MODELVIEW_MATRIX )
  OpenGLContext scenegraph/polygonsort.py projection = glGetDoublev( GL_PROJECTION_MATRIX )
glGetFloat
  SciPy/kiva glcore2d.py return glGetFloat( GL_MODELVIEW_MATRIX )
glGetFloatv
  (LGPL) VisionEgg src/Core.py self.parameters.matrix = gl.glGetFloatv(gl.GL_PROJECTION_MATRIX)
  (LGPL) VisionEgg src/Core.py self.parameters.matrix = gl.glGetFloatv(gl.GL_PROJECTION_MATRIX)
  (LGPL) VisionEgg src/Core.py self.parameters.matrix = gl.glGetFloatv(gl.GL_PROJECTION_MATRIX)
  (LGPL) VisionEgg src/Core.py self.parameters.matrix = gl.glGetFloatv(gl.GL_PROJECTION_MATRIX)
  (LGPL) VisionEgg src/Core.py self.parameters.matrix = gl.glGetFloatv(gl.GL_PROJECTION_MATRIX)
  (LGPL) VisionEgg src/Core.py self.parameters.matrix = gl.glGetFloatv(gl.GL_PROJECTION_MATRIX)
  (LGPL) VisionEgg src/Core.py self.parameters.matrix = gl.glGetFloatv(gl.GL_PROJECTION_MATRIX)
  (LGPL) VisionEgg src/Core.py matrix = gl.glGetFloatv(gl.GL_PROJECTION_MATRIX)
glGetInteger
  OpenGLContext context.py if not glGetInteger( GL_MATRIX_MODE ) == GL_MODELVIEW:
  OpenGLContext texture.py boundary = min( (glGetInteger( GL_MAX_TEXTURE_SIZE ), dim))
  (LGPL) VisionEgg src/Core.py matrix_mode = gl.glGetInteger(gl.GL_MATRIX_MODE)
  (LGPL) VisionEgg src/Core.py matrix_mode = gl.glGetInteger(gl.GL_MATRIX_MODE)
  (LGPL) VisionEgg src/Core.py matrix_mode = gl.glGetInteger(gl.GL_MATRIX_MODE)
glGetIntegerv
  OpenGLContext renderpass.py self.viewport = glGetIntegerv( GL_VIEWPORT )
  OpenGLContext scenegraph/polygonsort.py viewport = glGetIntegerv( GL_VIEWPORT )
  (LGPL) PyUI pyui/renderers/openglBase.py offsets = glGetIntegerv( GL_MODELVIEW_MATRIX )
  (LGPL) VisionEgg src/Gratings.py if gl.glGetIntegerv( gl.GL_RED_BITS ) < self.parameters.bit_depth:
  (LGPL) VisionEgg src/Gratings.py current_bit_depth = gl.glGetIntegerv( gl.GL_RED_BITS )
  (LGPL) VisionEgg src/Gratings.py elif gl.glGetIntegerv( gl.GL_GREEN_BITS ) < self.parameters.bit_depth:
  (LGPL) VisionEgg src/Gratings.py current_bit_depth = gl.glGetIntegerv( gl.GL_GREEN_BITS )
  (LGPL) VisionEgg src/Gratings.py elif gl.glGetIntegerv( gl.GL_BLUE_BITS ) < self.parameters.bit_depth:
  (LGPL) VisionEgg src/Gratings.py current_bit_depth = gl.glGetIntegerv( gl.GL_BLUE_BITS )
  (LGPL) VisionEgg src/Gratings.py alpha_bit_depth = gl.glGetIntegerv( gl.GL_ALPHA_BITS )
  (LGPL) VisionEgg src/Gratings.py max_dim = gl.glGetIntegerv(gl.GL_MAX_TEXTURE_SIZE)
  (LGPL) VisionEgg src/Lib3DS.py max_dim = gl.glGetIntegerv( gl.GL_MAX_TEXTURE_SIZE )
  (LGPL) VisionEgg src/Lib3DS.py max_dim = gl.glGetIntegerv( gl.GL_MAX_TEXTURE_SIZE )
  (LGPL) VisionEgg src/SphereMap.py max_dim = gl.glGetIntegerv(gl.GL_MAX_TEXTURE_SIZE)
  (LGPL) VisionEgg src/SphereMap.py max_dim = gl.glGetIntegerv(gl.GL_MAX_TEXTURE_SIZE)
  (LGPL) VisionEgg src/Textures.py max_dim = gl.glGetIntegerv( gl.GL_MAX_TEXTURE_SIZE )
  (LGPL) VisionEgg src/Textures.py max_dim = gl.glGetIntegerv( gl.GL_MAX_TEXTURE_SIZE )
  (LGPL) VisionEgg test/opengl_info.py print " GL_AUX_BUFFERS =",glGetIntegerv( GL_AUX_BUFFERS )
  (LGPL) VisionEgg test/opengl_info.py print " GL_RED_BITS =",glGetIntegerv( GL_RED_BITS )
  (LGPL) VisionEgg test/opengl_info.py print " GL_GREEN_BITS =",glGetIntegerv( GL_GREEN_BITS )
  (LGPL) VisionEgg test/opengl_info.py print " GL_BLUE_BITS =",glGetIntegerv( GL_BLUE_BITS )
  (LGPL) VisionEgg test/opengl_info.py print " GL_ALPHA_BITS =",glGetIntegerv( GL_ALPHA_BITS )
  (LGPL) VisionEgg test/opengl_info.py print " GL_ACCUM_RED_BITS =",glGetIntegerv( GL_ACCUM_RED_BITS )
  (LGPL) VisionEgg test/opengl_info.py print " GL_ACCUM_GREEN_BITS =",glGetIntegerv( GL_ACCUM_GREEN_BITS )
  (LGPL) VisionEgg test/opengl_info.py print " GL_ACCUM_BLUE_BITS =",glGetIntegerv( GL_ACCUM_BLUE_BITS )
  (LGPL) VisionEgg test/opengl_info.py print " GL_ACCUM_ALPHA_BITS =",glGetIntegerv( GL_ACCUM_ALPHA_BITS )
  (LGPL) VisionEgg test/opengl_info.py max_dim = glGetIntegerv(GL_MAX_TEXTURE_SIZE)
glGetLightfv
  OpenGLContext tests/glgetlight.py print name, glGetLightfv(GL_LIGHT0, param ) # now requires fully-specified name...
glGetMaterialfv
  OpenGLContext tests/glgetmaterial.py print name, glGetMaterialfv(GL_FRONT, param )
glGetPixelMapfv
  OpenGLContext tests/glgetpixelmap.py print name, glGetPixelMapfv(param )
glGetPolygonStipple
  OpenGLContext tests/glgetpolygonstipple.py print  repr(glGetPolygonStipple())
glGetPolygonStippleub
  OpenGLContext tests/glgetpolygonstipple.py print 'glGetPolygonStipple',  glGetPolygonStippleub()
glGetString
  (LGPL) VisionEgg src/Core.py vendor = gl.glGetString(gl.GL_VENDOR)
  (LGPL) VisionEgg src/Core.py renderer = gl.glGetString(gl.GL_RENDERER)
  (LGPL) VisionEgg src/Core.py version = gl.glGetString(gl.GL_VERSION)
  (LGPL) VisionEgg src/Core.py vendor = gl.glGetString(gl.GL_VENDOR)
  (LGPL) VisionEgg src/Core.py renderer = gl.glGetString(gl.GL_RENDERER)
  (LGPL) VisionEgg src/Core.py value_str = string.split(gl.glGetString(gl.GL_VERSION))[0]
  (LGPL) VisionEgg test/opengl_info.py print " GL_VENDOR =",glGetString(GL_VENDOR)
  (LGPL) VisionEgg test/opengl_info.py print " GL_RENDERER =",glGetString(GL_RENDERER)
  (LGPL) VisionEgg test/opengl_info.py print " GL_VERSION = ",glGetString(GL_VERSION)
  (LGPL) VisionEgg test/opengl_info.py for extension in string.split(glGetString(GL_EXTENSIONS)):
glGetTexLevelParameteriv
  (LGPL) VisionEgg src/Gratings.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_1D,0,gl.GL_TEXTURE_WIDTH) == 0:
  (LGPL) VisionEgg src/SphereMap.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_1D,0,gl.GL_TEXTURE_WIDTH) == 0:
  (LGPL) VisionEgg src/SphereMap.py if (gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_2D,0,gl.GL_TEXTURE_WIDTH) == 0) or (gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_2D,0,gl.GL_TEXTURE_HEIGHT) == 0):
  (LGPL) VisionEgg src/SphereMap.py if (gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_2D,0,gl.GL_TEXTURE_WIDTH) == 0) or (gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_2D,0,gl.GL_TEXTURE_HEIGHT) == 0):
  (LGPL) VisionEgg src/Textures.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_1D,mipmap_level,gl.GL_TEXTURE_WIDTH) == 0:
  (LGPL) VisionEgg src/Textures.py if gl.glGetTexLevelParameteriv(target,mipmap_level,gl.GL_TEXTURE_WIDTH) == 0:
  (LGPL) VisionEgg src/Textures.py if gl.glGetTexLevelParameteriv(target,mipmap_level,gl.GL_TEXTURE_HEIGHT) == 0:
  (LGPL) VisionEgg src/Textures.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_3D,mipmap_level,gl.GL_TEXTURE_WIDTH) == 0:
  (LGPL) VisionEgg src/Textures.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_3D,mipmap_level,gl.GL_TEXTURE_HEIGHT) == 0:
  (LGPL) VisionEgg src/Textures.py if gl.glGetTexLevelParameteriv(gl.GL_PROXY_TEXTURE_3D,mipmap_level,gl.GL_TEXTURE_DEPTH) == 0:
  (LGPL) VisionEgg test/opengl_info.py if glGetTexLevelParameteriv(GL_PROXY_TEXTURE_2D,0,GL_TEXTURE_WIDTH) != 0:
  (LGPL) VisionEgg test/opengl_info.py if glGetTexLevelParameteriv(GL_PROXY_TEXTURE_2D,0,GL_TEXTURE_HEIGHT) != 0:
glHint
  OpenGL/Demo redbook/fog.py glHint (GL_FOG_HINT, GL_DONT_CARE)
  OpenGL/Demo tom/fog.py glHint(GL_FOG_HINT, GL_DONT_CARE)
glInitMultitextureARB
  OpenGLContext tests/multitexture_1.py if not glInitMultitextureARB():
  OpenGLContext tests/nehe6_multi.py if not glInitMultitextureARB():
  OpenGL/Demo NeHe/lesson6-multi.py if not glInitMultitextureARB():
  (LGPL) VisionEgg src/Textures.py OpenGL.GL.ARB.multitexture.glInitMultitextureARB()
  (LGPL) VisionEgg src/Textures.py if not gl.glInitMultitextureARB():
  (LGPL) VisionEgg src/Textures.py if not gl.glInitMultitextureARB():
glInitNames
  OpenGLContext renderpass.py glInitNames()
glInitTextureEdgeClampSGIS
  (LGPL) VisionEgg src/Textures.py if OpenGL.GL.SGIS.texture_edge_clamp.glInitTextureEdgeClampSGIS():
glInterleavedArrays
  OpenGLContext tests/glinterleavedarrays.py glInterleavedArrays(
  OpenGLContext tests/glinterleavedarrays.py glInterleavedArrays(
glLight
  OpenGLContext rendervisitor.py glLight(lightID, GL_DIFFUSE, (1.0,1.0,1.0,1.0))
  OpenGLContext rendervisitor.py glLight(lightID, GL_POSITION, (0.0,0.0,10.0,1.0))
  OpenGLContext tests/dek_texturesurf.py glLight( GL_LIGHT0, GL_DIFFUSE, (0,0,1))
  OpenGLContext scenegraph/light.py glLight(lightID, GL_AMBIENT, (x,y,z,1.0))
  OpenGLContext scenegraph/light.py glLight(lightID, GL_DIFFUSE, (x,y,z,1.0))
  OpenGLContext scenegraph/light.py glLight(lightID, GL_POSITION, (x,y,z,self.pointSource))
  OpenGLContext scenegraph/light.py glLight(lightID, GL_CONSTANT_ATTENUATION, self.attenuation[0])
  OpenGLContext scenegraph/light.py glLight(lightID, GL_LINEAR_ATTENUATION, self.attenuation[1])
  OpenGLContext scenegraph/light.py glLight(lightID, GL_QUADRATIC_ATTENUATION, self.attenuation[2])
  OpenGLContext scenegraph/light.py glLight(lightID, GL_SPOT_DIRECTION, self.direction)
  OpenGLContext scenegraph/light.py glLight(lightID, GL_SPOT_CUTOFF, self.cutOffAngle* (180/pi))
  OpenGLContext scenegraph/light.py glLight(lightID, GL_QUADRATIC_ATTENUATION, self.attenuation[2])
glLightModelf
  OpenGL/Demo tom/fog.py glLightModelf(GL_LIGHT_MODEL_LOCAL_VIEWER, 0.0)
glLightModelfv
  OpenGL/Demo redbook/teapots.py glLightModelfv(GL_LIGHT_MODEL_AMBIENT, lmodel_ambient)
  OpenGL/Demo redbook/teapots.py glLightModelfv(GL_LIGHT_MODEL_LOCAL_VIEWER, local_view)
  OpenGL/Demo tom/cone.py glLightModelfv(GL_LIGHT_MODEL_AMBIENT, [0.2, 0.2, 0.2, 1.0])
  OpenGL/Demo tom/conechecker.py glLightModelfv(GL_LIGHT_MODEL_AMBIENT, [0.2, 0.2, 0.2, 1.0])
  OpenGL/Demo tom/conesave.py glLightModelfv(GL_LIGHT_MODEL_AMBIENT, [0.2, 0.2, 0.2, 1.0])
glLightModeli
  OpenGL/Demo suite/items/GLUT/geometry/solid_cone.py glLightModeli(GL_LIGHT_MODEL_TWO_SIDE, 1)
  OpenGL/Demo suite/items/GLUT/geometry/solid_cone.py glLightModeli(GL_LIGHT_MODEL_TWO_SIDE, 0)
glLightfv
  OpenGLContext tests/nehe7.py glLightfv( GL_LIGHT1, GL_AMBIENT, (0.2, .2, .2, 1.0) );
  OpenGLContext tests/nehe7.py glLightfv(GL_LIGHT1, GL_DIFFUSE, (.8,.8,.8));
  OpenGLContext tests/nehe7.py glLightfv(GL_LIGHT1, GL_POSITION, (-2,0,3,1) );
  OpenGLContext tests/nehe8.py glLightfv( GL_LIGHT1, GL_AMBIENT, (0.2, .2, .2, 1.0) );
  OpenGLContext tests/nehe8.py glLightfv(GL_LIGHT1, GL_DIFFUSE, (.8,.8,.8));
  OpenGLContext tests/nehe8.py glLightfv(GL_LIGHT1, GL_POSITION, (-2,0,3,1) );
  OpenGLContext tests/redbook_alpha3D.py glLightfv(GL_LIGHT0, GL_POSITION, (0.5, 0.5, 1.0, 0.0), );
  OpenGL/Demo GLE/maintest.py glLightfv (GL_LIGHT0, GL_POSITION, lightOnePosition)
  OpenGL/Demo GLE/maintest.py glLightfv (GL_LIGHT0, GL_DIFFUSE, lightOneColor)
  OpenGL/Demo GLE/maintest.py glLightfv (GL_LIGHT1, GL_POSITION, lightTwoPosition)
  OpenGL/Demo GLE/maintest.py glLightfv (GL_LIGHT1, GL_DIFFUSE, lightTwoColor)
  OpenGL/Demo NeHe/lesson18.py glLightfv(GL_LIGHT0, GL_AMBIENT, (0.5, 0.5, 0.5, 1.0))		# Setup The Ambient Light
  OpenGL/Demo NeHe/lesson18.py glLightfv(GL_LIGHT0, GL_DIFFUSE, (1.0, 1.0, 1.0, 1.0))		# Setup The Diffuse Light
  OpenGL/Demo NeHe/lesson18.py glLightfv(GL_LIGHT0, GL_POSITION, (0.0, 0.0, 2.0, 1.0))	# Position The Light
  OpenGL/Demo redbook/fog.py glLightfv(GL_LIGHT0, GL_POSITION, position)
  OpenGL/Demo redbook/movelight.py glLightfv (GL_LIGHT0, GL_POSITION, position)
  OpenGL/Demo redbook/scene.py glLightfv(GL_LIGHT0, GL_AMBIENT, light_ambient)
  OpenGL/Demo redbook/scene.py glLightfv(GL_LIGHT0, GL_DIFFUSE, light_diffuse)
  OpenGL/Demo redbook/scene.py glLightfv(GL_LIGHT0, GL_SPECULAR, light_specular)
  OpenGL/Demo redbook/scene.py glLightfv(GL_LIGHT0, GL_POSITION, light_position)
  OpenGL/Demo redbook/teapots.py glLightfv(GL_LIGHT0, GL_AMBIENT, ambient)
  OpenGL/Demo redbook/teapots.py glLightfv(GL_LIGHT0, GL_DIFFUSE, diffuse)
  OpenGL/Demo redbook/teapots.py glLightfv(GL_LIGHT0, GL_POSITION, position)
  OpenGL/Demo simple/GLE.py glLightfv(GL_LIGHT0, GL_POSITION,  (40.0, 40, 100.0, 0.0))
  OpenGL/Demo simple/GLE.py glLightfv(GL_LIGHT0, GL_DIFFUSE, (0.99, 0.99, 0.99, 1.0))
  OpenGL/Demo simple/GLE.py glLightfv(GL_LIGHT1, GL_POSITION, (-40.0, 40, 100.0, 0.0))
  OpenGL/Demo simple/GLE.py glLightfv(GL_LIGHT1, GL_DIFFUSE, (0.99, 0.99, 0.99, 1.0))
  OpenGL/Demo suite/items/GLE/cone.py glLightfv(GL_LIGHT0, GL_POSITION, (40.0, 40, 100.0, 0.0))
  OpenGL/Demo suite/items/GLE/cone.py glLightfv(GL_LIGHT0, GL_DIFFUSE, (0.99, 0.99, 0.99, 1.0))
  OpenGL/Demo suite/items/GLE/cone.py glLightfv(GL_LIGHT1, GL_POSITION, (-40.0, 40, 100.0, 0.0))
  OpenGL/Demo suite/items/GLE/cone.py glLightfv(GL_LIGHT1, GL_DIFFUSE, (0.99, 0.99, 0.99, 1.0))
  OpenGL/Demo suite/items/GLE/cone.py glLightfv(GL_LIGHT0, GL_POSITION, (0, 0, 1, 0))
  OpenGL/Demo suite/items/GLE/cone.py glLightfv(GL_LIGHT0, GL_DIFFUSE, (1, 1, 1, 1))
  OpenGL/Demo suite/items/GLE/cone.py glLightfv(GL_LIGHT1, GL_POSITION, (0, 0, 1, 0))
  OpenGL/Demo suite/items/GLE/cone.py glLightfv(GL_LIGHT1, GL_DIFFUSE, (0, 0, 0, 0))
  OpenGL/Demo suite/items/GLE/helix.py glLightfv(GL_LIGHT0, GL_POSITION, (40.0, 40, 100.0, 0.0))
  OpenGL/Demo suite/items/GLE/helix.py glLightfv(GL_LIGHT0, GL_DIFFUSE, (0.99, 0.99, 0.99, 1.0))
  OpenGL/Demo suite/items/GLE/helix.py glLightfv(GL_LIGHT1, GL_POSITION, (-40.0, 40, 100.0, 0.0))
  OpenGL/Demo suite/items/GLE/helix.py glLightfv(GL_LIGHT1, GL_DIFFUSE, (0.99, 0.99, 0.99, 1.0))
  OpenGL/Demo suite/items/GLE/helix.py glLightfv (GL_LIGHT0, GL_POSITION, (0, 0, 1, 0))
  OpenGL/Demo suite/items/GLE/helix.py glLightfv (GL_LIGHT0, GL_DIFFUSE, (1, 1, 1, 1))
  OpenGL/Demo suite/items/GLE/helix.py glLightfv (GL_LIGHT1, GL_POSITION, (0, 0, 1, 0))
  OpenGL/Demo suite/items/GLE/helix.py glLightfv (GL_LIGHT1, GL_DIFFUSE, (0, 0, 0, 0))
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glLightfv(GL_LIGHT0, GL_POSITION, (40.0, 40, 100.0, 0.0))
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glLightfv(GL_LIGHT0, GL_DIFFUSE, (0.99, 0.99, 0.99, 1.0))
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glLightfv(GL_LIGHT1, GL_POSITION, (-40.0, 40, 100.0, 0.0))
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glLightfv(GL_LIGHT1, GL_DIFFUSE, (0.99, 0.99, 0.99, 1.0))
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glLightfv (GL_LIGHT0, GL_POSITION, (0, 0, 1, 0))
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glLightfv (GL_LIGHT0, GL_DIFFUSE, (1, 1, 1, 1))
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glLightfv (GL_LIGHT1, GL_POSITION, (0, 0, 1, 0))
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glLightfv (GL_LIGHT1, GL_DIFFUSE, (0, 0, 0, 0))
  OpenGL/Demo tom/cone.py glLightfv(GL_LIGHT0, GL_AMBIENT, [0.0, 1.0, 0.0, 1.0])
  OpenGL/Demo tom/cone.py glLightfv(GL_LIGHT0, GL_DIFFUSE, [1.0, 1.0, 1.0, 1.0])
  OpenGL/Demo tom/cone.py glLightfv(GL_LIGHT0, GL_SPECULAR, [1.0, 1.0, 1.0, 1.0])
  OpenGL/Demo tom/cone.py glLightfv(GL_LIGHT0, GL_POSITION, [1.0, 1.0, 1.0, 0.0]);
  OpenGL/Demo tom/conechecker.py glLightfv(GL_LIGHT0, GL_AMBIENT, [0.0, 1.0, 0.0, 1.0])
  OpenGL/Demo tom/conechecker.py glLightfv(GL_LIGHT0, GL_DIFFUSE, [1.0, 1.0, 1.0, 1.0])
  OpenGL/Demo tom/conechecker.py glLightfv(GL_LIGHT0, GL_SPECULAR, [1.0, 1.0, 1.0, 1.0])
  OpenGL/Demo tom/conechecker.py glLightfv(GL_LIGHT0, GL_POSITION, [1.0, 1.0, 1.0, 0.0]);
  OpenGL/Demo tom/conesave.py glLightfv(GL_LIGHT0, GL_AMBIENT, [0.0, 1.0, 0.0, 1.0])
  OpenGL/Demo tom/conesave.py glLightfv(GL_LIGHT0, GL_DIFFUSE, [1.0, 1.0, 1.0, 1.0])
  OpenGL/Demo tom/conesave.py glLightfv(GL_LIGHT0, GL_SPECULAR, [1.0, 1.0, 1.0, 1.0])
  OpenGL/Demo tom/conesave.py glLightfv(GL_LIGHT0, GL_POSITION, [1.0, 1.0, 1.0, 0.0]);
  OpenGL/Demo tom/fog.py glLightfv(GL_LIGHT0, GL_POSITION, [0.0, 3.0, 3.0, 0.0])
glLineStipple
  OpenGL/Demo redbook/lines.py glLineStipple (1, 0x0101)  #  dotted
  OpenGL/Demo redbook/lines.py glLineStipple (1, 0x00FF)  #  dashed
  OpenGL/Demo redbook/lines.py glLineStipple (1, 0x1C47)  #  dash/dot/dash
  OpenGL/Demo redbook/lines.py glLineStipple(1, 0x0101)  #  dotted
  OpenGL/Demo redbook/lines.py glLineStipple(1, 0x00FF)  #  dashed
  OpenGL/Demo redbook/lines.py glLineStipple(1, 0x1C47)  #  dash/dot/dash
  OpenGL/Demo redbook/lines.py glLineStipple (1, 0x1C47)  # dash/dot/dash
  OpenGL/Demo redbook/lines.py glLineStipple (5, 0x1C47)  #  dash/dot/dash
  SciPy/kiva glcore2d.py glLineStipple( factor, pattern & 0xFFFF ) # <--- TBD: HACK!
glLineWidth
  OpenGL/Demo redbook/lines.py glLineWidth(5.0)
  OpenGL/Demo redbook/lines.py glLineWidth(1.0)
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glLineWidth(2)
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glLineWidth(1)
  SciPy/kiva glcore2d.py glLineWidth( self.state.line_width )
  (LGPL) VisionEgg src/Text.py gl.glLineWidth(self.parameters.linewidth)
glLoadIdentity
  OpenGLContext context.py glLoadIdentity()
  OpenGLContext renderpass.py glLoadIdentity()
  OpenGLContext rendervisitor.py glLoadIdentity()
  OpenGLContext rendervisitor.py glLoadIdentity()
  OpenGLContext rendervisitor.py glLoadIdentity()
  OpenGLContext shadow/shadowcontext.py glLoadIdentity()
  OpenGLContext tests/gldrawpixels.py glLoadIdentity();
  OpenGLContext tests/gldrawpixels.py glLoadIdentity();
  OpenGLContext tests/glutbitmapcharacter.py glLoadIdentity();
  OpenGLContext tests/glutbitmapcharacter.py glLoadIdentity();
  OpenGLContext tests/nehe4.py glLoadIdentity()
  OpenGLContext tests/nehe5.py glLoadIdentity()
  OpenGLContext tests/boundingvolume.py glLoadIdentity()
  OpenGL/Demo da/dots.py glLoadIdentity()
  OpenGL/Demo NeHe/lesson1.py glLoadIdentity()					# Reset The Projection Matrix
  OpenGL/Demo NeHe/lesson1.py glLoadIdentity()
  OpenGL/Demo NeHe/lesson1.py glLoadIdentity()					# Reset The View
  OpenGL/Demo NeHe/lesson18.py glLoadIdentity()					# Reset The Projection Matrix
  OpenGL/Demo NeHe/lesson18.py glLoadIdentity()
  OpenGL/Demo NeHe/lesson18.py glLoadIdentity()					# Reset The View
  OpenGL/Demo NeHe/lesson2.py glLoadIdentity()					# Reset The Projection Matrix
  OpenGL/Demo NeHe/lesson2.py glLoadIdentity()
  OpenGL/Demo NeHe/lesson2.py glLoadIdentity()					# Reset The View
  OpenGL/Demo NeHe/lesson3.py glLoadIdentity()					# Reset The Projection Matrix
  OpenGL/Demo NeHe/lesson3.py glLoadIdentity()
  OpenGL/Demo NeHe/lesson3.py glLoadIdentity()					# Reset The View
  OpenGL/Demo NeHe/lesson4.py glLoadIdentity()					# Reset The Projection Matrix
  OpenGL/Demo NeHe/lesson4.py glLoadIdentity()
  OpenGL/Demo NeHe/lesson4.py glLoadIdentity()					# Reset The View
  OpenGL/Demo NeHe/lesson4.py glLoadIdentity()
  OpenGL/Demo NeHe/lesson5.py glLoadIdentity()					# Reset The Projection Matrix
  OpenGL/Demo NeHe/lesson5.py glLoadIdentity()
  OpenGL/Demo NeHe/lesson5.py glLoadIdentity();					# Reset The View
  OpenGL/Demo NeHe/lesson5.py glLoadIdentity();
  OpenGL/Demo NeHe/lesson6-multi.py glLoadIdentity()					# Reset The Projection Matrix
  OpenGL/Demo NeHe/lesson6-multi.py glLoadIdentity()
  OpenGL/Demo NeHe/lesson6-multi.py glLoadIdentity()					# Reset The View
  OpenGL/Demo NeHe/lesson6.py glLoadIdentity()					# Reset The Projection Matrix
  OpenGL/Demo NeHe/lesson6.py glLoadIdentity()
  OpenGL/Demo NeHe/lesson6.py glLoadIdentity()					# Reset The View
  OpenGL/Demo redbook/cube.py glLoadIdentity ()             # clear the matrix
  OpenGL/Demo redbook/cube.py glLoadIdentity ()
  OpenGL/Demo redbook/double.py glLoadIdentity()
  OpenGL/Demo redbook/double.py glLoadIdentity()
  OpenGL/Demo redbook/drawf.py glLoadIdentity()
  OpenGL/Demo redbook/fog.py glLoadIdentity()
  OpenGL/Demo redbook/fog.py glLoadIdentity()
  OpenGL/Demo redbook/hello.py glLoadIdentity()
  OpenGL/Demo redbook/lines.py glLoadIdentity()
  OpenGL/Demo redbook/movelight.py glLoadIdentity()
  OpenGL/Demo redbook/movelight.py glLoadIdentity()
  OpenGL/Demo redbook/scene.py glLoadIdentity()
  OpenGL/Demo redbook/scene.py glLoadIdentity()
  OpenGL/Demo redbook/smooth.py glLoadIdentity()
  OpenGL/Demo redbook/teapots.py glLoadIdentity()
  OpenGL/Demo simple/GLE.py glLoadIdentity()
  OpenGL/Demo simple/GLE.py glLoadIdentity()
  OpenGL/Demo suite/GLUT.py glLoadIdentity()
  OpenGL/Demo suite/GLUT.py glLoadIdentity()
  OpenGL/Demo suite/GLUT.py glLoadIdentity()
  OpenGL/Demo twburton/knot.py glLoadIdentity()
  OpenGL/Demo twburton/knot.py glLoadIdentity()
  OpenGL/Demo twburton/knot.py glLoadIdentity()
  SciPy/kiva glcore2d.py glLoadIdentity()
  SciPy/kiva glcore2d.py glLoadIdentity()
  SciPy/kiva tests/test_glcore2d.py glLoadIdentity()
  (LGPL) PyUI pyui/renderers/openglBase.py glLoadIdentity()
  (LGPL) PyUI pyui/renderers/openglBase.py glLoadIdentity()
  (LGPL) PyUI pyui/renderers/openglBase.py glLoadIdentity()
  (LGPL) PyUI pyui/renderers/openglGlut.py glLoadIdentity()
  (LGPL) VisionEgg src/Core.py gl.glLoadIdentity() # Clear the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glLoadIdentity()
  (LGPL) VisionEgg src/Dots.py gl.glLoadIdentity()
  (LGPL) VisionEgg src/Gratings.py gl.glLoadIdentity()
  (LGPL) VisionEgg src/MoreStimuli.py gl.glLoadIdentity()
  (LGPL) VisionEgg src/MoreStimuli.py gl.glLoadIdentity()
  (LGPL) VisionEgg src/SphereMap.py gl.glLoadIdentity()
  (LGPL) VisionEgg src/SphereMap.py gl.glLoadIdentity()
  (LGPL) VisionEgg src/SphereMap.py gl.glLoadIdentity()
  (LGPL) VisionEgg src/SphereMap.py gl.glLoadIdentity()
  (LGPL) VisionEgg src/SphereMap.py gl.glLoadIdentity()
  (LGPL) VisionEgg src/SphereMap.py gl.glLoadIdentity()
  (LGPL) VisionEgg src/Text.py gl.glLoadIdentity()
  (LGPL) VisionEgg src/Text.py gl.glLoadIdentity()
  (LGPL) VisionEgg src/Textures.py gl.glLoadIdentity()
  (LGPL) VisionEgg src/Textures.py gl.glLoadIdentity()
  (LGPL) VisionEgg src/Textures.py gl.glLoadIdentity()
glLoadMatrixd
  OpenGLContext renderpass.py glLoadMatrixd( matrix )
  OpenGLContext rendervisitor.py glLoadMatrixd( matrix )
  OpenGLContext rendervisitor.py glLoadMatrixd( self.matrix )
  OpenGLContext shadow/shadowcontext.py glLoadMatrixd(pinfperspective.pinfPerspective( * self.frustum))
  OpenGLContext tests/gldrawpixels.py glLoadMatrixd( matrix ) # should have un-decorated alias for this...
  OpenGLContext tests/glutbitmapcharacter.py glLoadMatrixd( matrix ) # should have un-decorated alias for this...
  OpenGLContext scenegraph/texturetransform.py glLoadMatrixd( token )
glLoadMatrixf
  SciPy/kiva glcore2d.py glLoadMatrixf( glm )
  (LGPL) VisionEgg src/Core.py gl.glLoadMatrixf(self.parameters.matrix)
  (LGPL) VisionEgg src/Core.py gl.glLoadMatrixf(self.parameters.matrix)
  (LGPL) VisionEgg src/Core.py gl.glLoadMatrixf(self.parameters.matrix)
  (LGPL) VisionEgg src/Core.py gl.glLoadMatrixf(self.parameters.matrix)
  (LGPL) VisionEgg src/Core.py gl.glLoadMatrixf(self.parameters.matrix)
  (LGPL) VisionEgg src/Core.py gl.glLoadMatrixf(self.parameters.matrix)
  (LGPL) VisionEgg src/Core.py gl.glLoadMatrixf(self.parameters.matrix)
  (LGPL) VisionEgg src/Core.py gl.glLoadMatrixf(self.parameters.matrix)
  (LGPL) VisionEgg src/Core.py gl.glLoadMatrixf(self.parameters.matrix)
glMap2f
  OpenGLContext tests/dek_texturesurf.py glMap2f(GL_MAP2_VERTEX_3, 0., 1., 0., 1., ctrlpoints)
  OpenGLContext tests/dek_texturesurf.py glMap2f(GL_MAP2_TEXTURE_COORD_2, 0, 1, 0, 1, texpts)
  OpenGL/Demo dek/texturesurf.py glMap2f(GL_MAP2_VERTEX_3, 0, 1, 0, 1, ctrlpoints)
  OpenGL/Demo dek/texturesurf.py glMap2f(GL_MAP2_TEXTURE_COORD_2, 0, 1, 0, 1, texpts)
  OpenGL/Demo dek/texturesurf2.py glMap2f(GL_MAP2_VERTEX_3, 0, 1, 0, 1, ctrlpoints)
  OpenGL/Demo dek/texturesurf2.py glMap2f(GL_MAP2_TEXTURE_COORD_2, 0, 1, 0, 1, texpts)
glMapGrid2f
  OpenGLContext tests/dek_texturesurf.py glMapGrid2f(20, 0.0, 1.0, 20, 0.0, 1.0)
  OpenGL/Demo dek/texturesurf.py glMapGrid2f(20, 0.0, 1.0, 20, 0.0, 1.0)
  OpenGL/Demo dek/texturesurf2.py glMapGrid2f(20, 0.0, 1.0, 20, 0.0, 1.0)
glMaterial
  OpenGLContext scenegraph/material.py map ( glMaterial, self.faces, self.datamap, renderingData )
  OpenGLContext scenegraph/material.py glMaterial( self.faces[0], GL_SHININESS, self.shininess * 128)
glMaterialf
  OpenGL/Demo redbook/fog.py glMaterialf(GL_FRONT, GL_SHININESS, 0.6*128.0)
  OpenGL/Demo redbook/teapots.py glMaterialf(GL_FRONT, GL_SHININESS, shine * 128.0)
  OpenGL/Demo twburton/knot.py glMaterialf(GL_FRONT_AND_BACK, GL_SHININESS, 50)
glMaterialfv
  OpenGLContext tests/redbook_alpha3D.py glMaterialfv(GL_FRONT, GL_SPECULAR, (1.0, 1.0, 1.0, 0.15) );
  OpenGLContext tests/redbook_alpha3D.py glMaterialfv(GL_FRONT, GL_SHININESS, (100.0, ) );
  OpenGLContext tests/redbook_alpha3D.py glMaterialfv(GL_FRONT, GL_EMISSION, ( 0.0, 0.0, 0.0, 1.0), );
  OpenGLContext tests/redbook_alpha3D.py glMaterialfv(GL_FRONT, GL_DIFFUSE, (0.75, 0.75, 0.0, 1.0), );
  OpenGLContext tests/redbook_alpha3D.py glMaterialfv(GL_FRONT, GL_EMISSION, ( 0.0, 0.3, 0.3, 0.6), );
  OpenGLContext tests/redbook_alpha3D.py glMaterialfv(GL_FRONT, GL_DIFFUSE, ( 0.0, 0.8, 0.8, 0.8), );
  OpenGLContext tests/redbook_surface.py glMaterialfv(GL_FRONT, GL_DIFFUSE, [0.7, 0.7, 0.7, 1.0]);
  OpenGLContext tests/redbook_surface.py glMaterialfv(GL_FRONT, GL_SPECULAR, [1.0, 1.0, 1.0, 1.0]);
  OpenGLContext tests/redbook_surface.py glMaterialfv(GL_FRONT, GL_SHININESS, [100.0]);
  OpenGLContext tests/redbook_trim.py glMaterialfv(GL_FRONT, GL_DIFFUSE, [0.7, 0.7, 0.7, 1.0]);
  OpenGLContext tests/redbook_trim.py glMaterialfv(GL_FRONT, GL_SPECULAR, [1.0, 1.0, 1.0, 1.0]);
  OpenGLContext tests/redbook_trim.py glMaterialfv(GL_FRONT, GL_SHININESS, [100.0]);
  OpenGLContext tests/redbook_surface_cb.py glMaterialfv(GL_FRONT, GL_DIFFUSE, [0.7, 0.7, 0.7, 1.0]);
  OpenGLContext tests/redbook_surface_cb.py glMaterialfv(GL_FRONT, GL_SPECULAR, [1.0, 1.0, 1.0, 1.0]);
  OpenGLContext tests/redbook_surface_cb.py glMaterialfv(GL_FRONT, GL_SHININESS, [100.0]);
  OpenGL/Demo GLUT/examples/molehill.py glMaterialfv(GL_FRONT, GL_SPECULAR, mat_specular)
  OpenGL/Demo GLUT/examples/molehill.py glMaterialfv(GL_FRONT, GL_SHININESS, mat_shininess)
  OpenGL/Demo GLUT/examples/molehill.py glMaterialfv(GL_FRONT, GL_DIFFUSE, mat_red_diffuse)
  OpenGL/Demo GLUT/examples/molehill.py glMaterialfv(GL_FRONT, GL_DIFFUSE, mat_green_diffuse)
  OpenGL/Demo GLUT/examples/molehill.py glMaterialfv(GL_FRONT, GL_DIFFUSE, mat_blue_diffuse)
  OpenGL/Demo GLUT/examples/molehill.py glMaterialfv(GL_FRONT, GL_DIFFUSE, mat_yellow_diffuse)
  OpenGL/Demo redbook/fog.py glMaterialfv(GL_FRONT, GL_AMBIENT, mat)
  OpenGL/Demo redbook/fog.py glMaterialfv(GL_FRONT, GL_DIFFUSE, mat)
  OpenGL/Demo redbook/fog.py glMaterialfv(GL_FRONT, GL_SPECULAR, mat)
  OpenGL/Demo redbook/teapots.py glMaterialfv(GL_FRONT, GL_AMBIENT, mat)
  OpenGL/Demo redbook/teapots.py glMaterialfv(GL_FRONT, GL_DIFFUSE, mat)
  OpenGL/Demo redbook/teapots.py glMaterialfv(GL_FRONT, GL_SPECULAR, mat)
  OpenGL/Demo tom/cone.py glMaterialfv(GL_FRONT, GL_AMBIENT, [0.2, 0.2, 0.2, 1.0])
  OpenGL/Demo tom/cone.py glMaterialfv(GL_FRONT, GL_DIFFUSE, [0.8, 0.8, 0.8, 1.0])
  OpenGL/Demo tom/cone.py glMaterialfv(GL_FRONT, GL_SPECULAR, [1.0, 0.0, 1.0, 1.0])
  OpenGL/Demo tom/cone.py glMaterialfv(GL_FRONT, GL_SHININESS, 50.0)
  OpenGL/Demo tom/conechecker.py glMaterialfv(GL_FRONT, GL_AMBIENT, [0.2, 0.2, 0.2, 1.0])
  OpenGL/Demo tom/conechecker.py glMaterialfv(GL_FRONT, GL_DIFFUSE, [0.8, 0.8, 0.8, 1.0])
  OpenGL/Demo tom/conechecker.py glMaterialfv(GL_FRONT, GL_SPECULAR, [1.0, 0.0, 1.0, 1.0])
  OpenGL/Demo tom/conechecker.py glMaterialfv(GL_FRONT, GL_SHININESS, 50.0)
  OpenGL/Demo tom/conesave.py glMaterialfv(GL_FRONT, GL_AMBIENT, [0.2, 0.2, 0.2, 1.0])
  OpenGL/Demo tom/conesave.py glMaterialfv(GL_FRONT, GL_DIFFUSE, [0.8, 0.8, 0.8, 1.0])
  OpenGL/Demo tom/conesave.py glMaterialfv(GL_FRONT, GL_SPECULAR, [1.0, 0.0, 1.0, 1.0])
  OpenGL/Demo tom/conesave.py glMaterialfv(GL_FRONT, GL_SHININESS, 50.0)
  OpenGL/Demo tom/demo.py glMaterialfv(GL_FRONT, GL_DIFFUSE, [1, 0, 0, 0])
  OpenGL/Demo tom/fog.py glMaterialfv(GL_FRONT, GL_AMBIENT, [0.1745, 0.01175, 0.01175, 1.0])
  OpenGL/Demo tom/fog.py glMaterialfv(GL_FRONT, GL_DIFFUSE, [0.61424, 0.04136, 0.04136, 1.0])
  OpenGL/Demo tom/fog.py glMaterialfv(GL_FRONT, GL_SPECULAR, [0.727811, 0.626959, 0.626959, 1.0])
  OpenGL/Demo tom/fog.py glMaterialfv(GL_FRONT, GL_SHININESS, 0.6 * 128.0)
  OpenGL/Demo tom/pick.py glMaterialfv(GL_FRONT, GL_DIFFUSE, [1., 1., 0., 0.])
  OpenGL/Demo tom/pick.py glMaterialfv(GL_FRONT, GL_DIFFUSE, [0.3, 0.9, 0.3, 0.])
  OpenGL/Demo tom/text.py glMaterialfv(GL_FRONT, GL_DIFFUSE, [1., 1., 0., 0.])
  OpenGL/Demo twburton/knot.py glMaterialfv(GL_FRONT_AND_BACK, GL_SPECULAR, ( 1.0, 1.0, 1.0, 1.0 ))
  OpenGL/Demo twburton/knot.py glMaterialfv(GL_FRONT, GL_DIFFUSE, self.colors[i] + [1])
glMatrixMode
  OpenGLContext context.py glMatrixMode(GL_MODELVIEW)
  OpenGLContext context.py glMatrixMode(GL_PROJECTION);
  OpenGLContext renderpass.py glMatrixMode(GL_MODELVIEW)
  OpenGLContext renderpass.py glMatrixMode(GL_PROJECTION)
  OpenGLContext viewplatform.py glMatrixMode(GL_PROJECTION)
  OpenGLContext viewplatform.py glMatrixMode(GL_MODELVIEW)
  OpenGLContext rendervisitor.py glMatrixMode(GL_MODELVIEW)
  OpenGLContext rendervisitor.py glMatrixMode(GL_PROJECTION)
  OpenGLContext rendervisitor.py glMatrixMode(GL_MODELVIEW)
  OpenGLContext rendervisitor.py glMatrixMode( GL_MODELVIEW )
  OpenGLContext rendervisitor.py glMatrixMode( GL_MODELVIEW )
  OpenGLContext rendervisitor.py glMatrixMode( GL_MODELVIEW )
  OpenGLContext rendervisitor.py glMatrixMode(GL_MODELVIEW)
  OpenGLContext rendervisitor.py glMatrixMode(GL_MODELVIEW)
  OpenGLContext shadow/shadowcontext.py glMatrixMode(GL_PROJECTION)
  OpenGLContext shadow/shadowcontext.py glMatrixMode(GL_MODELVIEW)
  OpenGLContext tests/gldrawpixels.py glMatrixMode(GL_PROJECTION);
  OpenGLContext tests/gldrawpixels.py glMatrixMode(GL_MODELVIEW);
  OpenGLContext tests/gldrawpixels.py glMatrixMode(GL_PROJECTION);
  OpenGLContext tests/gldrawpixels.py glMatrixMode(GL_MODELVIEW);
  OpenGLContext tests/glutbitmapcharacter.py glMatrixMode(GL_PROJECTION);
  OpenGLContext tests/glutbitmapcharacter.py glMatrixMode(GL_MODELVIEW);
  OpenGLContext tests/glutbitmapcharacter.py glMatrixMode(GL_PROJECTION);
  OpenGLContext tests/glutbitmapcharacter.py glMatrixMode(GL_MODELVIEW);
  OpenGLContext tests/boundingvolume.py glMatrixMode(GL_PROJECTION);
  OpenGLContext tests/boundingvolume.py glMatrixMode(GL_MODELVIEW);
  OpenGLContext scenegraph/texturetransform.py glMatrixMode( GL_TEXTURE )
  OpenGLContext scenegraph/texturetransform.py glMatrixMode( GL_MODELVIEW )
  OpenGLContext scenegraph/texturetransform.py glMatrixMode( GL_TEXTURE )
  OpenGLContext scenegraph/texturetransform.py glMatrixMode( GL_MODELVIEW )
  OpenGL/Demo da/dots.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo GLE/maintest.py glMatrixMode (GL_PROJECTION)
  OpenGL/Demo GLE/maintest.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo GLUT/examples/molehill.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo GLUT/examples/molehill.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo NeHe/lesson1.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo NeHe/lesson1.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo NeHe/lesson1.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo NeHe/lesson1.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo NeHe/lesson18.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo NeHe/lesson18.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo NeHe/lesson18.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo NeHe/lesson18.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo NeHe/lesson2.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo NeHe/lesson2.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo NeHe/lesson2.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo NeHe/lesson2.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo NeHe/lesson3.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo NeHe/lesson3.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo NeHe/lesson3.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo NeHe/lesson3.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo NeHe/lesson4.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo NeHe/lesson4.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo NeHe/lesson4.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo NeHe/lesson4.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo NeHe/lesson5.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo NeHe/lesson5.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo NeHe/lesson5.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo NeHe/lesson5.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo NeHe/lesson6-multi.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo NeHe/lesson6-multi.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo NeHe/lesson6-multi.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo NeHe/lesson6-multi.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo NeHe/lesson6.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo NeHe/lesson6.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo NeHe/lesson6.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo NeHe/lesson6.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo redbook/cube.py glMatrixMode (GL_PROJECTION)
  OpenGL/Demo redbook/cube.py glMatrixMode (GL_MODELVIEW)
  OpenGL/Demo redbook/double.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo redbook/double.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo redbook/drawf.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo redbook/drawf.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo redbook/fog.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo redbook/fog.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo redbook/hello.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo redbook/lines.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo redbook/movelight.py glMatrixMode (GL_PROJECTION)
  OpenGL/Demo redbook/movelight.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo redbook/scene.py glMatrixMode (GL_PROJECTION)
  OpenGL/Demo redbook/scene.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo redbook/smooth.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo redbook/smooth.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo redbook/teapots.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo redbook/teapots.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo simple/GLE.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo simple/GLE.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo simple/GLE.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo suite/GLUT.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo suite/GLUT.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo suite/GLUT.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo twburton/knot.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo twburton/knot.py glMatrixMode(GL_MODELVIEW)
  OpenGL/Demo twburton/knot.py glMatrixMode(GL_PROJECTION)
  OpenGL/Demo twburton/knot.py glMatrixMode(GL_MODELVIEW)
  SciPy/kiva glcore2d.py glMatrixMode( GL_PROJECTION )
  SciPy/kiva glcore2d.py glMatrixMode( GL_MODELVIEW )
  SciPy/kiva tests/test_glcore2d.py glMatrixMode( GL_PROJECTION )
  SciPy/kiva tests/test_glcore2d.py glMatrixMode( GL_MODELVIEW )
  (LGPL) PyUI pyui/renderers/openglBase.py glMatrixMode(GL_PROJECTION)
  (LGPL) PyUI pyui/renderers/openglBase.py glMatrixMode(GL_MODELVIEW)
  (LGPL) PyUI pyui/renderers/openglBase.py glMatrixMode(GL_MODELVIEW)
  (LGPL) PyUI pyui/renderers/openglBase.py glMatrixMode(GL_PROJECTION)
  (LGPL) PyUI pyui/renderers/openglBase.py glMatrixMode(GL_MODELVIEW)
  (LGPL) PyUI pyui/renderers/openglBase.py glMatrixMode(GL_MODELVIEW)
  (LGPL) PyUI pyui/renderers/openglGlut.py glMatrixMode(GL_PROJECTION)
  (LGPL) PyUI pyui/renderers/openglGlut.py glMatrixMode(GL_MODELVIEW)
  (LGPL) PyUI tests/testcube.py glMatrixMode(GL_PROJECTION)
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Restore projection
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(matrix_mode)
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(matrix_mode)
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(matrix_mode)
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_PROJECTION) # Set OpenGL matrix state to modify the projection matrix
  (LGPL) VisionEgg src/Core.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/Dots.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/Gratings.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/SphereMap.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/SphereMap.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/SphereMap.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/SphereMap.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/SphereMap.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/SphereMap.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/Text.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/Text.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/Textures.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/Textures.py gl.glMatrixMode(gl.GL_MODELVIEW)
  (LGPL) VisionEgg src/Textures.py gl.glMatrixMode(gl.GL_MODELVIEW)
glMultMatrixf
  SciPy/kiva glcore2d.py glMultMatrixf( glm )
  (LGPL) VisionEgg src/Core.py gl.glMultMatrixf(m)
glMultiTexCoord2fARB
  OpenGLContext tests/multitexture_1.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, a,b)
  OpenGLContext tests/multitexture_1.py glMultiTexCoord2fARB(GL_TEXTURE1_ARB, a,b)
  OpenGLContext tests/nehe6_multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, a,b)
  OpenGLContext tests/nehe6_multi.py glMultiTexCoord2fARB(GL_TEXTURE1_ARB, a,b)
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 0.0); glVertex3f(-1.0, -1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 0.0); glVertex3f(-1.0, -1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 0.0); glVertex3f( 1.0, -1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 0.0); glVertex3f( 1.0, -1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 1.0); glVertex3f( 1.0,  1.0,  1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 1.0); glVertex3f( 1.0,  1.0,  1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 1.0); glVertex3f(-1.0,  1.0,  1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 1.0); glVertex3f(-1.0,  1.0,  1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 0.0); glVertex3f(-1.0, -1.0, -1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 0.0); glVertex3f(-1.0, -1.0, -1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 1.0); glVertex3f(-1.0,  1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 1.0); glVertex3f(-1.0,  1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 1.0); glVertex3f( 1.0,  1.0, -1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 1.0); glVertex3f( 1.0,  1.0, -1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 0.0); glVertex3f( 1.0, -1.0, -1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 0.0); glVertex3f( 1.0, -1.0, -1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 0.0); glVertex3f(-1.0,  1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 0.0); glVertex3f(-1.0,  1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 0.0); glVertex3f( 1.0,  1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 0.0); glVertex3f( 1.0,  1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 1.0); glVertex3f(-1.0, -1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 1.0); glVertex3f(-1.0, -1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 1.0); glVertex3f( 1.0, -1.0, -1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 1.0); glVertex3f( 1.0, -1.0, -1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 0.0); glVertex3f( 1.0, -1.0, -1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 0.0); glVertex3f( 1.0, -1.0, -1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 1.0); glVertex3f( 1.0,  1.0,  1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 1.0); glVertex3f( 1.0,  1.0,  1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 0.0); glVertex3f(-1.0, -1.0, -1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 0.0); glVertex3f(-1.0, -1.0, -1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 1.0); glVertex3f(-1.0,  1.0,  1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 1.0); glVertex3f(-1.0,  1.0,  1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0)	# Top Left Of The Texture and Quad
  (LGPL) VisionEgg src/Textures.py gl.glMultiTexCoord2fARB(gl.GL_TEXTURE0_ARB,lt,bt)
  (LGPL) VisionEgg src/Textures.py gl.glMultiTexCoord2fARB(gl.GL_TEXTURE1_ARB,0.0,0.0)
  (LGPL) VisionEgg src/Textures.py gl.glMultiTexCoord2fARB(gl.GL_TEXTURE0_ARB,rt,bt)
  (LGPL) VisionEgg src/Textures.py gl.glMultiTexCoord2fARB(gl.GL_TEXTURE1_ARB,1.0,0.0)
  (LGPL) VisionEgg src/Textures.py gl.glMultiTexCoord2fARB(gl.GL_TEXTURE0_ARB,rt,tt)
  (LGPL) VisionEgg src/Textures.py gl.glMultiTexCoord2fARB(gl.GL_TEXTURE1_ARB,1.0,1.0)
  (LGPL) VisionEgg src/Textures.py gl.glMultiTexCoord2fARB(gl.GL_TEXTURE0_ARB,lt,tt)
  (LGPL) VisionEgg src/Textures.py gl.glMultiTexCoord2fARB(gl.GL_TEXTURE1_ARB,0.0,1.0)
glNewList
  OpenGLContext displaylist.py glNewList( self.list, mode )
  OpenGLContext tests/dek_texturesurf.py glNewList( displayList, GL_COMPILE)
  OpenGLContext tests/redbook_alpha3D.py glNewList(self.sphereList, GL_COMPILE);
  OpenGLContext tests/redbook_alpha3D.py glNewList(self.cubeList, GL_COMPILE);
  OpenGL/Demo dek/texturesurf.py glNewList(self.list, GL_COMPILE)
  OpenGL/Demo dek/texturesurf2.py glNewList(self.list, GL_COMPILE)
  OpenGL/Demo dek/OglSurface/triangle.py glNewList(self.surfacelist, GL_COMPILE);
  OpenGL/Demo dek/OglSurface/triangle.py glNewList(self.bondlist, GL_COMPILE);
  OpenGL/Demo GLUT/examples/molehill.py glNewList(1, GL_COMPILE)
  OpenGL/Demo redbook/teapots.py glNewList (teapotList, GL_COMPILE)
  OpenGL/Demo tom/demo.py glNewList(ogl.grob, GL_COMPILE_AND_EXECUTE);
  OpenGL/Demo tom/lorentz.py glNewList(o.grob, GL_COMPILE);
  OpenGL/Demo tom/text.py glNewList(o.grob, GL_COMPILE_AND_EXECUTE);
  OpenGL/Demo twburton/knot.py glNewList(self.list, GL_COMPILE_AND_EXECUTE)
  (LGPL) PyUI pyui/renderers/openglGlut.py glNewList(w.displayList, GL_COMPILE_AND_EXECUTE)
  (LGPL) PyUI pyui/renderers/openglPygame.py glNewList(w.displayList, GL_COMPILE_AND_EXECUTE)
  (LGPL) PyUI pyui/renderers/openglPygame.py glNewList(newList, GL_COMPILE)
  (LGPL) VisionEgg src/SphereMap.py gl.glNewList(self.cached_display_list,gl.GL_COMPILE)
  (LGPL) VisionEgg src/SphereMap.py gl.glNewList(self.cached_display_list_id,gl.GL_COMPILE)
  (LGPL) VisionEgg src/SphereMap.py gl.glNewList(self.windowed_display_list_id,gl.GL_COMPILE)
  (LGPL) VisionEgg src/SphereMap.py gl.glNewList(self.opaque_display_list_id,gl.GL_COMPILE)
  (LGPL) VisionEgg src/Textures.py gl.glNewList(self.cached_display_list_normal,gl.GL_COMPILE)
  (LGPL) VisionEgg src/Textures.py gl.glNewList(self.cached_display_list_mirror,gl.GL_COMPILE)
glNormal
  OpenGLContext tests/redbook_surface_cb.py glNormal( normal )
glNormal3f
  OpenGLContext drawcube.py glNormal3f( 0.0, 0.0, 1.0)
  OpenGLContext drawcube.py glNormal3f( 0.0, 0.0,-1.0);
  OpenGLContext drawcube.py glNormal3f( 0.0, 1.0, 0.0)
  OpenGLContext drawcube.py glNormal3f( 0.0,-1.0, 0.0)
  OpenGLContext drawcube.py glNormal3f( 1.0, 0.0, 0.0)
  OpenGLContext drawcube.py glNormal3f(-1.0, 0.0, 0.0)
  OpenGLContext tests/multitexture_1.py glNormal3f( 0,0,1 )
  OpenGLContext tests/nehe7.py glNormal3f( 0.0, 0.0, 1.0)
  OpenGLContext tests/nehe7.py glNormal3f( 0.0, 0.0,-1.0);
  OpenGLContext tests/nehe7.py glNormal3f( 0.0, 1.0, 0.0)
  OpenGLContext tests/nehe7.py glNormal3f( 0.0,-1.0, 0.0)
  OpenGLContext tests/nehe7.py glNormal3f( 1.0, 0.0, 0.0)
  OpenGLContext tests/nehe7.py glNormal3f(-1.0, 0.0, 0.0)
  OpenGLContext tests/nehe8.py glNormal3f( 0.0, 0.0, 1.0)
  OpenGLContext tests/nehe8.py glNormal3f( 0.0, 0.0,-1.0);
  OpenGLContext tests/nehe8.py glNormal3f( 0.0, 1.0, 0.0)
  OpenGLContext tests/nehe8.py glNormal3f( 0.0,-1.0, 0.0)
  OpenGLContext tests/nehe8.py glNormal3f( 1.0, 0.0, 0.0)
  OpenGLContext tests/nehe8.py glNormal3f(-1.0, 0.0, 0.0)
  OpenGLContext scenegraph/box.py glNormal3f( 0.0, 0.0, 1.0)
  OpenGLContext scenegraph/box.py glNormal3f( 0.0, 0.0,-1.0);
  OpenGLContext scenegraph/box.py glNormal3f( 0.0, 1.0, 0.0)
  OpenGLContext scenegraph/box.py glNormal3f( 0.0,-1.0, 0.0)
  OpenGLContext scenegraph/box.py glNormal3f( 1.0, 0.0, 0.0)
  OpenGLContext scenegraph/box.py glNormal3f(-1.0, 0.0, 0.0)
  OpenGL/Demo tom/logo.py n = glNormal3f
glNormal3fv
  OpenGL/Demo dek/OglSurface/triangle.py glNormal3fv(norm1)
  OpenGL/Demo dek/OglSurface/triangle.py glNormal3fv(norm2)
  OpenGL/Demo dek/OglSurface/triangle.py glNormal3fv(norm3)
glNormalPointer
  OpenGLContext tests/gldrawarrays_string.py glNormalPointer(GL_DOUBLE, 0, flower_geometry.normals_expanded.tostring() )
glNormalPointerd
  OpenGLContext scenegraph/arraygeometry.py glNormalPointerd (self.normals )
  OpenGLContext scenegraph/indexedpolygons.py glNormalPointerd ( normal )
glNormalPointerf
  OpenGLContext tests/glarrayelement.py glNormalPointerf( flower_geometry.normals_expanded )
  OpenGLContext tests/gldrawarrays.py glNormalPointerf(flower_geometry.normals_expanded )
glOrtho
  OpenGLContext tests/gldrawpixels.py glOrtho(0.0, height or 32, 0.0, width or 32, -1.0, 1.0)
  OpenGLContext tests/glutbitmapcharacter.py glOrtho(0.0, windowHeight or 32, 0.0, windowWidth or 32, -1.0, 1.0)
  OpenGL/Demo da/dots.py glOrtho(0.0, 1.0, 0.0, 1.0, 0.0, 1.0)
  OpenGL/Demo redbook/double.py glOrtho(-50.0, 50.0, -50.0, 50.0, -1.0, 1.0)
  OpenGL/Demo redbook/drawf.py glOrtho(0, w, 0, h, -1.0, 1.0)
  OpenGL/Demo redbook/fog.py glOrtho(-2.5, 2.5, -2.5*h/w, 2.5*h/w, -10.0, 10.0)
  OpenGL/Demo redbook/fog.py glOrtho(-2.5*w/h, 2.5*w/h, -2.5, 2.5, -10.0, 10.0)
  OpenGL/Demo redbook/hello.py glOrtho(0.0, 1.0, 0.0, 1.0, -1.0, 1.0)
  OpenGL/Demo redbook/scene.py glOrtho(-2.5, 2.5, -2.5*h/w,
  OpenGL/Demo redbook/scene.py glOrtho(-2.5*w/h,
  OpenGL/Demo redbook/teapots.py glOrtho(0.0, 16.0, 0.0, 16.0*h/w, -10.0, 10.0)
  OpenGL/Demo redbook/teapots.py glOrtho(0.0, 16.0*w/h, 0.0, 16.0, -10.0, 10.0)
  OpenGL/Demo suite/items/da/dots.py glOrtho(0.0, 1.0, 0.0, 1.0, 0.0, 1.0)
  OpenGL/Demo tom/arraytest.py glOrtho(-1, 1, -1, 1, -1, 1)
  OpenGL/Demo tom/Line.py glOrtho(0,1,0,1,0,1)
  OpenGL/Demo tom/poly.py glOrtho(-1,1,-1,1,-1,1)
  SciPy/kiva tests/test_glcore2d.py glOrtho( 0.0, 1.0, 0.0, 1.0, 0.0, 1.0 )
  (LGPL) PyUI pyui/renderers/openglBase.py glOrtho( 0, getDesktop().width, getDesktop().height, 0, -1, 1 )
glPixelStorei
  OpenGLContext texture.py glPixelStorei(GL_UNPACK_ALIGNMENT,1)
  OpenGLContext texture.py glPixelStorei(GL_PACK_ALIGNMENT, 1)
  OpenGLContext texture.py glPixelStorei(GL_UNPACK_ALIGNMENT,1)
  OpenGLContext texture.py glPixelStorei(GL_PACK_ALIGNMENT, 1)
  OpenGLContext debug/bufferimage.py glPixelStorei(GL_PACK_ALIGNMENT, 1)
  OpenGLContext debug/bufferimage.py glPixelStorei(GL_PACK_ALIGNMENT, 1)
  OpenGLContext tests/dek_texturesurf.py glPixelStorei(GL_UNPACK_ALIGNMENT,1)
  OpenGLContext tests/gldrawpixels.py glPixelStorei(GL_PACK_ALIGNMENT, 1)
  OpenGLContext tests/gldrawpixels.py glPixelStorei(GL_UNPACK_ALIGNMENT, 1)
  OpenGLContext tests/nehe6.py glPixelStorei(GL_UNPACK_ALIGNMENT,1)
  OpenGLContext tests/nehe7.py glPixelStorei(GL_UNPACK_ALIGNMENT,1)
  OpenGLContext tests/nehe7.py glPixelStorei(GL_UNPACK_ALIGNMENT,1)
  OpenGLContext tests/nehe7.py glPixelStorei(GL_UNPACK_ALIGNMENT,1)
  OpenGLContext tests/nehe8.py glPixelStorei(GL_UNPACK_ALIGNMENT,1)
  OpenGLContext tests/nehe8.py glPixelStorei(GL_UNPACK_ALIGNMENT,1)
  OpenGLContext tests/nehe8.py glPixelStorei(GL_UNPACK_ALIGNMENT,1)
  OpenGLContext tests/saveimage.py glPixelStorei(GL_PACK_ALIGNMENT, 1)
  OpenGL/Demo dek/tile.py glPixelStorei(GL_UNPACK_ALIGNMENT, 1)
  OpenGL/Demo dek/OglSurface/OglFrame.py glPixelStorei(GL_UNPACK_ALIGNMENT, 1)
  OpenGL/Demo NeHe/lesson18.py glPixelStorei(GL_UNPACK_ALIGNMENT,1)
  OpenGL/Demo NeHe/lesson6-multi.py glPixelStorei(GL_UNPACK_ALIGNMENT,1)
  OpenGL/Demo NeHe/lesson6.py glPixelStorei(GL_UNPACK_ALIGNMENT,1)
  OpenGL/Demo redbook/drawf.py glPixelStorei(GL_UNPACK_ALIGNMENT, 1)
  OpenGL/Demo tom/conesave.py glPixelStorei(GL_PACK_ALIGNMENT, 1)
  (LGPL) PyUI pyui/renderers/openglGlut.py glPixelStorei(GL_UNPACK_ALIGNMENT,1)
  (LGPL) PyUI pyui/renderers/openglPygame.py glPixelStorei(GL_UNPACK_ALIGNMENT,1)
  (LGPL) PyUI pyui/renderers/openglPygame.py glPixelStorei(GL_UNPACK_ALIGNMENT,1)
  (LGPL) VisionEgg src/Core.py gl.glPixelStorei(gl.GL_PACK_ALIGNMENT, 1)
  (LGPL) VisionEgg src/Core.py gl.glPixelStorei(gl.GL_PACK_ALIGNMENT, 1)
glPointSize
  OpenGLContext tests/particles_simple.py glPointSize( pointSize )
  (LGPL) VisionEgg src/Dots.py gl.glPointSize(p.dot_size)
glPolygonMode
  SciPy/kiva glcore2d.py glPolygonMode( GL_FRONT_AND_BACK, fill_mode )
  SciPy/kiva glcore2d.py glPolygonMode( GL_FRONT_AND_BACK, GL_FILL )
  SciPy/kiva glcore2d.py glPolygonMode( GL_FRONT_AND_BACK, GL_LINE )
  SciPy/kiva glcore2d.py glPolygonMode( GL_FRONT_AND_BACK, GL_FILL )
  (LGPL) VisionEgg src/MoreStimuli.py gl.glPolygonMode(gl.GL_FRONT_AND_BACK,gl.GL_LINE)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glPolygonMode(gl.GL_FRONT_AND_BACK,gl.GL_FILL)
glPopMatrix
  OpenGLContext rendervisitor.py glPopMatrix( )
  OpenGLContext rendervisitor.py glPopMatrix()
  OpenGLContext shadow/volume.py glPopMatrix()
  OpenGLContext tests/gldrawpixels.py glPopMatrix();
  OpenGLContext tests/glutbitmapcharacter.py glPopMatrix();
  OpenGLContext tests/redbook_alpha3D.py glPopMatrix ();
  OpenGLContext tests/redbook_alpha3D.py glPopMatrix ();
  OpenGLContext tests/redbook_surface.py glPopMatrix();
  OpenGLContext tests/redbook_trim.py glPopMatrix();
  OpenGLContext tests/redbook_surface_cb.py glPopMatrix();
  OpenGLContext scenegraph/quadrics.py glPopMatrix()
  OpenGLContext scenegraph/quadrics.py glPopMatrix()
  OpenGLContext scenegraph/texturetransform.py glPopMatrix()
  OpenGLContext scenegraph/text/wglfont.py glPopMatrix()
  OpenGLContext scenegraph/text/wglfont.py glPopMatrix()
  OpenGLContext scenegraph/text/wglfont.py glPopMatrix()
  OpenGL/Demo GLE/cone.py glPopMatrix ()
  OpenGL/Demo GLE/helix.py glPopMatrix ()
  OpenGL/Demo GLE/texas.py glPopMatrix ()
  OpenGL/Demo redbook/double.py glPopMatrix()
  OpenGL/Demo redbook/fog.py glPopMatrix()
  OpenGL/Demo redbook/movelight.py glPopMatrix ()
  OpenGL/Demo redbook/movelight.py glPopMatrix ()
  OpenGL/Demo redbook/scene.py glPopMatrix()
  OpenGL/Demo redbook/scene.py glPopMatrix()
  OpenGL/Demo redbook/scene.py glPopMatrix()
  OpenGL/Demo redbook/scene.py glPopMatrix()
  OpenGL/Demo redbook/teapots.py glPopMatrix()
  OpenGL/Demo tom/checker.py glPopMatrix()
  OpenGL/Demo tom/cone.py glPopMatrix()
  OpenGL/Demo tom/conechecker.py glPopMatrix()
  OpenGL/Demo tom/conechecker.py glPopMatrix()
  OpenGL/Demo tom/conesave.py glPopMatrix()
  OpenGL/Demo tom/fog.py glPopMatrix()
  OpenGL/Demo tom/pick.py glPopMatrix()
  (LGPL) PyUI pyui/renderers/openglBase.py glPopMatrix()
  (LGPL) PyUI pyui/renderers/openglBase.py glPopMatrix()
  (LGPL) PyUI pyui/renderers/openglBase.py glPopMatrix()
  (LGPL) PyUI pyui/renderers/openglPygame.py glPopMatrix()
  (LGPL) PyUI tests/testcube.py glPopMatrix()
  (LGPL) VisionEgg src/Core.py gl.glPopMatrix()
  (LGPL) VisionEgg src/Core.py gl.glPopMatrix()
  (LGPL) VisionEgg src/Core.py gl.glPopMatrix()
  (LGPL) VisionEgg src/Core.py gl.glPopMatrix()
glPopName
  OpenGLContext rendervisitor.py glPopName( )
  OpenGLContext scenegraph/grouping.py glPopName( )
glPushMatrix
  OpenGLContext rendervisitor.py glPushMatrix() # should do checks here to make sure we're not going over limit
  OpenGLContext rendervisitor.py glPushMatrix()
  OpenGLContext shadow/volume.py glPushMatrix()
  OpenGLContext tests/gldrawpixels.py glPushMatrix();
  OpenGLContext tests/glutbitmapcharacter.py glPushMatrix();
  OpenGLContext tests/redbook_alpha3D.py glPushMatrix ();
  OpenGLContext tests/redbook_alpha3D.py glPushMatrix ();
  OpenGLContext tests/redbook_surface.py glPushMatrix();
  OpenGLContext tests/redbook_trim.py glPushMatrix();
  OpenGLContext tests/redbook_surface_cb.py glPushMatrix();
  OpenGLContext scenegraph/quadrics.py glPushMatrix()
  OpenGLContext scenegraph/quadrics.py glPushMatrix()
  OpenGLContext scenegraph/texturetransform.py glPushMatrix()
  OpenGLContext scenegraph/text/wglfont.py glPushMatrix()
  OpenGLContext scenegraph/text/wglfont.py glPushMatrix()
  OpenGLContext scenegraph/text/wglfont.py glPushMatrix()
  OpenGL/Demo GLE/cone.py glPushMatrix ()
  OpenGL/Demo GLE/helix.py glPushMatrix ()
  OpenGL/Demo GLE/texas.py glPushMatrix ()
  OpenGL/Demo redbook/double.py glPushMatrix()
  OpenGL/Demo redbook/fog.py glPushMatrix()
  OpenGL/Demo redbook/movelight.py glPushMatrix ()
  OpenGL/Demo redbook/movelight.py glPushMatrix ()
  OpenGL/Demo redbook/scene.py glPushMatrix()
  OpenGL/Demo redbook/scene.py glPushMatrix()
  OpenGL/Demo redbook/scene.py glPushMatrix()
  OpenGL/Demo redbook/scene.py glPushMatrix()
  OpenGL/Demo redbook/teapots.py glPushMatrix()
  OpenGL/Demo tom/checker.py glPushMatrix()
  OpenGL/Demo tom/cone.py glPushMatrix()
  OpenGL/Demo tom/conechecker.py glPushMatrix()
  OpenGL/Demo tom/conechecker.py glPushMatrix()
  OpenGL/Demo tom/conesave.py glPushMatrix()
  OpenGL/Demo tom/fog.py glPushMatrix();
  OpenGL/Demo tom/pick.py glPushMatrix()
  (LGPL) PyUI pyui/renderers/openglBase.py glPushMatrix()
  (LGPL) PyUI pyui/renderers/openglBase.py glPushMatrix()
  (LGPL) PyUI pyui/renderers/openglBase.py glPushMatrix()
  (LGPL) PyUI pyui/renderers/openglPygame.py glPushMatrix()
  (LGPL) PyUI tests/testcube.py glPushMatrix()
  (LGPL) VisionEgg src/Core.py gl.glPushMatrix()
  (LGPL) VisionEgg src/Core.py gl.glPushMatrix()
  (LGPL) VisionEgg src/Core.py gl.glPushMatrix()
  (LGPL) VisionEgg src/Core.py gl.glPushMatrix()
glPushName
  OpenGLContext scenegraph/grouping.py glPushName( name )
glRasterPos
  SciPy/kiva glcore2d.py glRasterPos( tx, ty )
  SciPy/kiva glcore2d.py glRasterPos( tx + glyphs.bbox[0], ty + glyphs.bbox[1] )
glRasterPos2f
  OpenGLContext tests/glprint.py glRasterPos2f(5*cos(self.cnt1), 5*sin(self.cnt2))
  OpenGLContext scenegraph/text/wglfont.py glRasterPos2f( 0,0)
  (LGPL) PyUI pyui/renderers/openglGlut.py glRasterPos2f(position[0], position[1]+13)
glRasterPos2i
  OpenGLContext tests/gldrawpixels.py glRasterPos2i(40,40);
  OpenGLContext tests/glutbitmapcharacter.py glRasterPos2i(x, y);
  OpenGLContext tests/glutbitmapcharacter.py glRasterPos2i(x, y-(lines*18))
  OpenGLContext scenegraph/text/glutfont.py glRasterPos2i(x, y)
  OpenGL/Demo redbook/drawf.py glRasterPos2i(20, 20)
glRasterPos3f
  OpenGLContext scenegraph/text/wglfont.py glRasterPos3f( 0,0,0)
  OpenGLContext scenegraph/text/wglfont.py glRasterPos3f( 0, yPos, 0.0)
  OpenGLContext scenegraph/text/wglfont.py glRasterPos3f( 0,0,0)
  OpenGLContext scenegraph/text/wglfont.py glRasterPos3f( -half, yPos, 0.0)
  OpenGLContext scenegraph/text/wglfont.py glRasterPos3f( 0, yPos, 0.0)
  OpenGLContext scenegraph/text/wglfont.py glRasterPos3f( 0,0,0)
  OpenGLContext scenegraph/text/wglfont.py glRasterPos3f( -line.width, yPos, 0.0)
  OpenGLContext scenegraph/text/wglfont.py glRasterPos3f( 0, yPos, 0.0)
  (LGPL) VisionEgg src/Text.py gl.glRasterPos3f(0.0,0.0,0.0)
glReadBuffer
  (LGPL) VisionEgg src/Core.py gl.glReadBuffer( gl.GL_FRONT )
  (LGPL) VisionEgg src/Core.py gl.glReadBuffer( gl.GL_BACK )
  (LGPL) VisionEgg src/Core.py gl.glReadBuffer( gl.GL_FRONT )
  (LGPL) VisionEgg src/Core.py gl.glReadBuffer( gl.GL_BACK )
  (LGPL) VisionEgg src/Textures.py gl.glReadBuffer( gl.GL_FRONT )
  (LGPL) VisionEgg src/Textures.py gl.glReadBuffer( gl.GL_BACK )
glReadPixels
  OpenGLContext debug/bufferimage.py data = glReadPixels(0, 0, width, height, GL_STENCIL_INDEX, GL_UNSIGNED_BYTE)
  OpenGLContext tests/saveimage.py data = glReadPixels(0, 0, width, height, GL_RGB, GL_UNSIGNED_BYTE)
  OpenGL/Demo dek/OglSurface/OglFrame.py pixels = glReadPixels(0, 0,
  OpenGL/Demo tom/conesave.py data = glReadPixels(0, 0, width, height, GL_RGB, GL_UNSIGNED_BYTE)
  (LGPL) VisionEgg src/Core.py framebuffer_pixels = gl.glReadPixels(0,0,self.size[0],self.size[1],format,gl.GL_UNSIGNED_BYTE)
  (LGPL) VisionEgg src/Core.py framebuffer_pixels = gl.glReadPixels(0,0,self.size[0],self.size[1],format,gl.GL_UNSIGNED_BYTE)
glReadPixelsf
  OpenGLContext debug/bufferimage.py data = glReadPixelsf(x, y, width, height, GL_DEPTH_COMPONENT)
glRectf
  OpenGL/Demo redbook/double.py glRectf(-25.0, -25.0, 25.0, 25.0)
  OpenGL/Demo tom/checker.py glRectf(x, y, x + 1, y + 1)
  OpenGL/Demo tom/conechecker.py glRectf(x, y, x + 1, y + 1)
glRenderMode
  OpenGLContext renderpass.py glRenderMode( GL_RENDER )
  OpenGLContext renderpass.py nameStack = list(glRenderMode(GL_RENDER))
  OpenGLContext renderpass.py glRenderMode(GL_SELECT)
  OpenGLContext rendervisitor.py glRenderMode( GL_RENDER )
glRotate
  OpenGLContext viewplatform.py glRotate( r*RADTODEG, x,y,z )
  OpenGLContext rendervisitor.py glRotate( r*RADTODEG, x,y,z )
  OpenGLContext shadow/shadowcontext.py glRotate( r*RADTODEG, x,y,z )
  SciPy/kiva glcore2d.py glRotate( args[0] * 180 / pi, 0, 0, 1 )
  (LGPL) PyUI pyui/renderers/openglBase.py glRotate(rotationDegrees, 0.0, 0.0, 1.0)      # Rotate
  (LGPL) PyUI tests/testcube.py glRotate(25, 1, 0.5, 0)                       #orbit higher
  (LGPL) PyUI tests/testcube.py glRotate(dirX, 1, 0, 0)
  (LGPL) PyUI tests/testcube.py glRotate(dirY, 0, 1, 0)
  (LGPL) PyUI tests/testcube.py glRotate(dirZ, 0, 0, 1)
  (LGPL) VisionEgg src/Gratings.py gl.glRotate(p.orientation,0.0,0.0,1.0)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glRotate(self.parameters.orientation,0.0,0.0,1.0)
  (LGPL) VisionEgg src/Text.py gl.glRotate(self.parameters.orientation,0.0,0.0,1.0)
glRotated
  OpenGLContext pygamecontext.py glRotated(30, 1, 0, 0)
  OpenGLContext pygamecontext.py glRotated(40, 0, 1, 0)
  OpenGLContext pygameinteractivecontext.py glRotated(30, 1, 0, 0)
  OpenGLContext pygameinteractivecontext.py glRotated(30, 0, 1, 0)
  OpenGLContext tests/glut_fullscreen.py glRotated( time.time()%(8.0)/8 * -360, 1,0,0)
  OpenGLContext tests/nehe6_timer.py glRotated( self.rotation, 1,0,0)
  OpenGLContext tests/nehe6_timer.py glRotated( self.rotation, 0,1,0)
  OpenGLContext tests/nehe6_timer.py glRotated( self.rotation, 0,0,1)
  OpenGLContext tests/materialobject.py glRotated( time.time()%(8.0)/8 * -360, 1,0,0)
  OpenGLContext tests/lightobject.py glRotated( time.time()%(8.0)/8 * -360, 1,0,0)
  OpenGLContext tests/nehe4.py glRotated( time.time()%(3.0)/3 * 360, 0,1,0)
  OpenGLContext tests/nehe4.py glRotated( time.time()%(1.0)/1 * -360, 1,0,0)
  OpenGLContext tests/nehe5.py glRotated( time.time()%(3.0)/3 * 360, 0,1,0)
  OpenGLContext tests/nehe5.py glRotated( time.time()%(1.0)/1 * -360, 1,0,0)
  OpenGLContext tests/nehe6.py glRotated( time.time()%(8.0)/8 * -360, 1,0,0)
  OpenGLContext tests/nehe6_multi.py glRotated( self.rotation, 1,0,0)
  OpenGLContext tests/nehe6_multi.py glRotated( self.rotation, 0,1,0)
  OpenGLContext tests/nehe6_multi.py glRotated( self.rotation, 0,0,1)
  OpenGLContext tests/nehe7.py glRotated( time.time()%(self.rotationCycle)/self.rotationCycle * -360, 1,0,0)
  OpenGLContext tests/nehe8.py glRotated( time.time()%(self.rotationCycle)/self.rotationCycle * -360, 1,0,0)
  OpenGLContext tests/spincube.py glRotated( (time.time()%4.0/4) * 360, 0,1,0)
  OpenGLContext tests/saveimage.py glRotated( time.time()%(8.0)/8 * -360, 1,0,0)
  OpenGLContext tests/textureobject.py glRotated( time.time()%(8.0)/8 * -360, 1,0,0)
  OpenGLContext scenegraph/quadrics.py glRotated( -90, 1,0,0)
  OpenGLContext scenegraph/quadrics.py glRotated( 180, 1,0,0)
  OpenGLContext scenegraph/quadrics.py glRotated( -90, 1,0,0)
  OpenGLContext scenegraph/quadrics.py glRotated( 180, 1,0,0)
  OpenGLContext scenegraph/spherebackground.py glRotated( 360.0/SEGMENTS, 0,1,0)
  OpenGL/Demo redbook/movelight.py glRotated (spin, 1.0, 0.0, 0.0)
glRotatef
  OpenGLContext tests/redbook_alpha3D.py glRotatef (15.0, 1.0, 1.0, 0.0);
  OpenGLContext tests/redbook_alpha3D.py glRotatef (30.0, 0.0, 1.0, 0.0);
  OpenGLContext tests/redbook_surface.py glRotatef(330.0, 1.,0.,0.);
  OpenGLContext tests/redbook_trim.py glRotatef(330.0, 1.,0.,0.);
  OpenGLContext tests/redbook_surface_cb.py glRotatef(330.0, 1.,0.,0.);
  OpenGLContext scenegraph/transform.py glRotatef( ra * RADTODEG, rx,ry,rz)
  OpenGLContext scenegraph/transform.py glRotatef( sa * RADTODEG, sx,sy,sz)
  OpenGLContext scenegraph/transform.py glRotatef( -sa * RADTODEG, sx,sy,sz)
  OpenGLContext scenegraph/texturetransform.py glRotatef( self.rotation * RADTODEG, 0,0,1)
  OpenGL/Demo GLE/cone.py glRotatef (maintest.lastx, 0.0, 1.0, 0.0)
  OpenGL/Demo GLE/cone.py glRotatef (maintest.lasty, 1.0, 0.0, 0.0)
  OpenGL/Demo GLE/helix.py glRotatef (maintest.lastx, 0.0, 1.0, 0.0)
  OpenGL/Demo GLE/helix.py glRotatef (maintest.lasty, 1.0, 0.0, 0.0)
  OpenGL/Demo GLE/texas.py glRotatef (maintest.lastx, 0.0, 1.0, 0.0)
  OpenGL/Demo GLE/texas.py glRotatef (maintest.lasty, 1.0, 0.0, 0.0)
  OpenGL/Demo GLUT/examples/molehill.py glRotatef(330.0, 1.0, 0.0, 0.0)
  OpenGL/Demo NeHe/lesson18.py glRotatef(xrot,1.0,0.0,0.0)			# Rotate The Cube On It's X Axis
  OpenGL/Demo NeHe/lesson18.py glRotatef(yrot,0.0,1.0,0.0)			# Rotate The Cube On It's Y Axis
  OpenGL/Demo NeHe/lesson18.py glRotatef(zrot,0.0,0.0,1.0)			# Rotate The Cube On It's Z Axis
  OpenGL/Demo NeHe/lesson4.py glRotatef(rtri, 0.0, 1.0, 0.0)      # Rotate
  OpenGL/Demo NeHe/lesson4.py glRotatef(rquad, 1.0, 0.0, 0.0)		# Rotate
  OpenGL/Demo NeHe/lesson5.py glRotatef(rtri,0.0,1.0,0.0);				# Rotate The Pyramid On It's Y Axis
  OpenGL/Demo NeHe/lesson5.py glRotatef(rquad,1.0,1.0,1.0);		# Rotate The Cube On X, Y & Z
  OpenGL/Demo NeHe/lesson6-multi.py glRotatef(rot,1.0,0.0,0.0)			# Rotate The Cube On It's X Axis
  OpenGL/Demo NeHe/lesson6-multi.py glRotatef(rot,0.0,1.0,0.0)			# Rotate The Cube On It's Y Axis
  OpenGL/Demo NeHe/lesson6-multi.py glRotatef(rot,0.0,0.0,1.0)			# Rotate The Cube On It's Z Axis
  OpenGL/Demo NeHe/lesson6.py glRotatef(xrot,1.0,0.0,0.0)			# Rotate The Cube On It's X Axis
  OpenGL/Demo NeHe/lesson6.py glRotatef(yrot,0.0,1.0,0.0)			# Rotate The Cube On It's Y Axis
  OpenGL/Demo NeHe/lesson6.py glRotatef(zrot,0.0,0.0,1.0)			# Rotate The Cube On It's Z Axis
  OpenGL/Demo redbook/double.py glRotatef(spin, 0.0, 0.0, 1.0)
  OpenGL/Demo redbook/scene.py glRotatef(20.0, 1.0, 0.0, 0.0)
  OpenGL/Demo redbook/scene.py glRotatef(90.0, 1.0, 0.0, 0.0)
  OpenGL/Demo redbook/scene.py glRotatef (270.0, 1.0, 0.0, 0.0)
  OpenGL/Demo simple/GLE.py glRotatef(self.lastx, 0.0, 1.0, 0.0)
  OpenGL/Demo simple/GLE.py glRotatef(self.lasty, 1.0, 0.0, 0.0)
  OpenGL/Demo suite/items/__init__.py glRotatef(self.phi, 0.0, 1.0, 0.0)
  OpenGL/Demo suite/items/__init__.py glRotatef(self.theta, 1.0, 0.0, 0.0)
  OpenGL/Demo tom/cone.py glRotatef(250, 1, 0, 0)
  OpenGL/Demo tom/conechecker.py glRotatef(250, 1, 0, 0)
  OpenGL/Demo tom/conesave.py glRotatef(250, 1, 0, 0)
  OpenGL/Demo twburton/knot.py glRotatef(self.theta, -1, 0, 0)
  OpenGL/Demo twburton/knot.py glRotatef(self.phi, 0, 0, 1)
  (LGPL) VisionEgg src/Core.py gl.glRotatef(angle_degrees,x,y,z)
  (LGPL) VisionEgg src/Core.py gl.glRotatef(angle_degrees,x,y,z)
  (LGPL) VisionEgg src/SphereMap.py gl.glRotatef(p.center_azimuth,0.0,-1.0,0.0)
  (LGPL) VisionEgg src/SphereMap.py gl.glRotatef(p.center_elevation,1.0,0.0,0.0)
  (LGPL) VisionEgg src/SphereMap.py gl.glRotatef(p.grating_center_azimuth,0.0,-1.0,0.0)
  (LGPL) VisionEgg src/SphereMap.py gl.glRotatef(p.grating_center_elevation,1.0,0.0,0.0)
  (LGPL) VisionEgg src/SphereMap.py gl.glRotatef(p.orientation,0.0,0.0,1.0)
  (LGPL) VisionEgg src/SphereMap.py gl.glRotatef(p.window_center_azimuth,0.0,-1.0,0.0)
  (LGPL) VisionEgg src/SphereMap.py gl.glRotatef(p.window_center_elevation,1.0,0.0,0.0)
  (LGPL) VisionEgg src/Textures.py gl.glRotatef(p.orientation,0.0,0.0,1.0)
  (LGPL) VisionEgg src/Textures.py gl.glRotatef(p.drum_center_azimuth,0.0,-1.0,0.0)
  (LGPL) VisionEgg src/Textures.py gl.glRotatef(p.drum_center_elevation,1.0,0.0,0.0)
  (LGPL) VisionEgg src/Textures.py gl.glRotatef(p.orientation,0.0,0.0,1.0)
  (LGPL) VisionEgg src/Textures.py gl.glRotatef(p.angular_position,0.0,-1.0,0.0)
glScale
  SciPy/kiva glcore2d.py glScale( args[0], args[1], 1 )
glScalef
  OpenGLContext tests/redbook_surface.py glScalef (0.5, 0.5, 0.5);
  OpenGLContext tests/redbook_trim.py glScalef (0.5, 0.5, 0.5);
  OpenGLContext tests/redbook_surface_cb.py glScalef (0.5, 0.5, 0.5);
  OpenGLContext scenegraph/transform.py glScalef( *self.scale )
  OpenGLContext scenegraph/texturetransform.py glScalef( sx,sy,1.0 )
  OpenGL/Demo redbook/cube.py glScalef (1.0, 2.0, 1.0)      # modeling transformation
  (LGPL) VisionEgg src/Core.py gl.glScalef(x,y,z)
  (LGPL) VisionEgg src/Core.py gl.glScalef(x,y,z)
glScissor
  SciPy/kiva glcore2d.py glScissor( x, y, width, height )
  (LGPL) PyUI pyui/renderers/openglBase.py apply( glScissor, self.clip_stack[-1] )
glSelectBuffer
  OpenGLContext renderpass.py glSelectBuffer(self.bufferSize)
glShadeModel
  OpenGLContext tests/dek_texturesurf.py glShadeModel(GL_FLAT)
  OpenGLContext tests/redbook_alpha.py glShadeModel (GL_FLAT);
  OpenGL/Demo dek/texturesurf.py glShadeModel(GL_FLAT)
  OpenGL/Demo dek/texturesurf2.py glShadeModel(GL_FLAT)
  OpenGL/Demo dek/tile.py glShadeModel(GL_FLAT)
  OpenGL/Demo GLE/maintest.py glShadeModel (GL_SMOOTH)
  OpenGL/Demo NeHe/lesson1.py glShadeModel(GL_SMOOTH)				# Enables Smooth Color Shading
  OpenGL/Demo NeHe/lesson18.py glShadeModel(GL_SMOOTH)				# Enables Smooth Color Shading
  OpenGL/Demo NeHe/lesson2.py glShadeModel(GL_SMOOTH)				# Enables Smooth Color Shading
  OpenGL/Demo NeHe/lesson3.py glShadeModel(GL_SMOOTH)				# Enables Smooth Color Shading
  OpenGL/Demo NeHe/lesson4.py glShadeModel(GL_SMOOTH)				# Enables Smooth Color Shading
  OpenGL/Demo NeHe/lesson5.py glShadeModel(GL_SMOOTH)				# Enables Smooth Color Shading
  OpenGL/Demo NeHe/lesson6-multi.py glShadeModel(GL_SMOOTH)				# Enables Smooth Color Shading
  OpenGL/Demo NeHe/lesson6.py glShadeModel(GL_SMOOTH)				# Enables Smooth Color Shading
  OpenGL/Demo redbook/cube.py glShadeModel (GL_FLAT)
  OpenGL/Demo redbook/double.py glShadeModel(GL_FLAT)
  OpenGL/Demo redbook/lines.py glShadeModel(GL_FLAT)
  OpenGL/Demo redbook/movelight.py glShadeModel (GL_SMOOTH)
  OpenGL/Demo redbook/smooth.py glShadeModel(GL_SMOOTH)
  OpenGL/Demo simple/GLE.py glShadeModel(GL_SMOOTH)
  OpenGL/Demo twburton/knot.py glShadeModel(GL_SMOOTH)
  OpenGL/Demo twburton/knot.py glShadeModel(GL_SMOOTH)
  (LGPL) PyUI tests/testcube.py glShadeModel(GL_SMOOTH)
glStencilFunc
  OpenGLContext shadow/passes.py glStencilFunc(GL_ALWAYS, 0, ~0);
  OpenGLContext shadow/passes.py glStencilFunc(GL_ALWAYS,0,~0);
  OpenGLContext shadow/passes.py glStencilFunc(GL_EQUAL, 0, ~0);
  OpenGLContext shadow/passes.py glStencilFunc(GL_EQUAL, 0, ~0);
glStencilMask
  OpenGLContext shadow/passes.py glStencilMask(~0)
  OpenGLContext shadow/passes.py glStencilMask(~0);
  OpenGLContext shadow/volume.py glStencilMask( 0 )
  OpenGLContext shadow/volume.py glStencilMask( ~0 )
glStencilOp
  OpenGLContext shadow/passes.py glStencilOp(GL_KEEP,GL_KEEP,GL_KEEP);
  OpenGLContext shadow/passes.py glStencilOp(GL_KEEP,GL_KEEP,GL_INCR);
  OpenGLContext shadow/passes.py glStencilOp(GL_KEEP,GL_KEEP,GL_INCR);
  OpenGLContext shadow/volume.py glStencilOp(GL_KEEP, GL_KEEP, GL_INCR);
  OpenGLContext shadow/volume.py glStencilOp(GL_KEEP,GL_KEEP,GL_DECR);
glTexCoord
  OpenGLContext tests/redbook_surface_cb.py glTexCoord( texcoord )
glTexCoord2dv
  OpenGLContext scenegraph/cubebackground.py glTexCoord2dv( coord )
glTexCoord2f
  OpenGLContext drawcube.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext drawcube.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext drawcube.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext drawcube.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext drawcube.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext drawcube.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext drawcube.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext drawcube.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext drawcube.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext drawcube.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext drawcube.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext drawcube.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext drawcube.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext drawcube.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext drawcube.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext drawcube.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext drawcube.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext drawcube.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext drawcube.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext drawcube.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext drawcube.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext drawcube.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext drawcube.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext drawcube.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext scenegraph/box.py glTexCoord2f(0.0, 0.0); glVertex3f(-x, -y, z)
  OpenGLContext scenegraph/box.py glTexCoord2f(1.0, 0.0); glVertex3f( x, -y, z)
  OpenGLContext scenegraph/box.py glTexCoord2f(1.0, 1.0); glVertex3f( x, y, z)
  OpenGLContext scenegraph/box.py glTexCoord2f(0.0, 1.0); glVertex3f(-x, y, z)
  OpenGLContext scenegraph/box.py glTexCoord2f(1.0, 0.0); glVertex3f(-x, -y, -z)
  OpenGLContext scenegraph/box.py glTexCoord2f(1.0, 1.0); glVertex3f(-x, y, -z)
  OpenGLContext scenegraph/box.py glTexCoord2f(0.0, 1.0); glVertex3f( x, y, -z)
  OpenGLContext scenegraph/box.py glTexCoord2f(0.0, 0.0); glVertex3f( x, -y, -z)
  OpenGLContext scenegraph/box.py glTexCoord2f(0.0, 1.0); glVertex3f(-x, y, -z)
  OpenGLContext scenegraph/box.py glTexCoord2f(0.0, 0.0); glVertex3f(-x, y, z)
  OpenGLContext scenegraph/box.py glTexCoord2f(1.0, 0.0); glVertex3f( x, y, z)
  OpenGLContext scenegraph/box.py glTexCoord2f(1.0, 1.0); glVertex3f( x, y, -z)
  OpenGLContext scenegraph/box.py glTexCoord2f(1.0, 1.0); glVertex3f(-x, -y, -z)
  OpenGLContext scenegraph/box.py glTexCoord2f(0.0, 1.0); glVertex3f( x, -y, -z)
  OpenGLContext scenegraph/box.py glTexCoord2f(0.0, 0.0); glVertex3f( x, -y, z)
  OpenGLContext scenegraph/box.py glTexCoord2f(1.0, 0.0); glVertex3f(-x, -y, z)
  OpenGLContext scenegraph/box.py glTexCoord2f(1.0, 0.0); glVertex3f( x, -y, -z)
  OpenGLContext scenegraph/box.py glTexCoord2f(1.0, 1.0); glVertex3f( x, y, -z)
  OpenGLContext scenegraph/box.py glTexCoord2f(0.0, 1.0); glVertex3f( x, y, z)
  OpenGLContext scenegraph/box.py glTexCoord2f(0.0, 0.0); glVertex3f( x, -y, z)
  OpenGLContext scenegraph/box.py glTexCoord2f(0.0, 0.0); glVertex3f(-x, -y, -z)
  OpenGLContext scenegraph/box.py glTexCoord2f(1.0, 0.0); glVertex3f(-x, -y, z)
  OpenGLContext scenegraph/box.py glTexCoord2f(1.0, 1.0); glVertex3f(-x, y, z)
  OpenGLContext scenegraph/box.py glTexCoord2f(0.0, 1.0); glVertex3f(-x, y, -z)
  OpenGL/Demo dek/tile.py glTexCoord2f(0.0, 0.0);		glVertex3f(0.0, 0.0, 0.0)
  OpenGL/Demo dek/tile.py glTexCoord2f(0.0, 2.0);		glVertex3f(0.0, 10., 0.0)
  OpenGL/Demo dek/tile.py glTexCoord2f(2.0, 2.0);		glVertex3f(10. , 10., 0.0)
  OpenGL/Demo dek/tile.py glTexCoord2f(2.0, 0.0);		glVertex3f(10., 0.0, 0.0)
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0, -1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0, -1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0,  1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0,  1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0, -1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0,  1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0,  1.0, -1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0, -1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0,  1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0,  1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0, -1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0, -1.0, -1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0, -1.0, -1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0,  1.0,  1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0, -1.0, -1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0,  1.0,  1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0, -1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0, -1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0,  1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0,  1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0, -1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0,  1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0,  1.0, -1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0, -1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0,  1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0,  1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0, -1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0, -1.0, -1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0, -1.0, -1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0,  1.0,  1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0, -1.0, -1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0,  1.0,  1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0)	# Top Left Of The Texture and Quad
  (LGPL) PyUI pyui/renderers/openglBase.py glTexCoord2f(textureCoords[0][0], textureCoords[0][1])
  (LGPL) PyUI pyui/renderers/openglBase.py glTexCoord2f(textureCoords[1][0], textureCoords[1][1])
  (LGPL) PyUI pyui/renderers/openglBase.py glTexCoord2f(textureCoords[2][0], textureCoords[2][1])
  (LGPL) PyUI pyui/renderers/openglBase.py glTexCoord2f(textureCoords[3][0], textureCoords[3][1])
  (LGPL) PyUI pyui/renderers/openglBase.py glTexCoord2f(textureCoords[0][0], textureCoords[0][1])
  (LGPL) PyUI pyui/renderers/openglBase.py glTexCoord2f(textureCoords[1][0], textureCoords[1][1])
  (LGPL) PyUI pyui/renderers/openglBase.py glTexCoord2f(textureCoords[2][0], textureCoords[2][1])
  (LGPL) PyUI pyui/renderers/openglBase.py glTexCoord2f(textureCoords[3][0], textureCoords[3][1])
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexCoord2f(coords[0], coords[1])
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexCoord2f(coords[2], coords[1])
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexCoord2f(coords[2], coords[3])
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexCoord2f(coords[0], coords[3])
  (LGPL) VisionEgg src/Gratings.py gl.glTexCoord2f(0.0,0.0)
  (LGPL) VisionEgg src/Gratings.py gl.glTexCoord2f(1.0,0.0)
  (LGPL) VisionEgg src/Gratings.py gl.glTexCoord2f(1.0,1.0)
  (LGPL) VisionEgg src/Gratings.py gl.glTexCoord2f(0.0,1.0)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexCoord2f(tex_l,tex_t)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexCoord2f(tex_r,tex_t)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexCoord2f(tex_r,tex_b)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexCoord2f(tex_l,tex_b)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexCoord2f(tex_l,tex_t)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexCoord2f(tex_r,tex_t)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexCoord2f(tex_r,tex_b)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexCoord2f(tex_l,tex_b)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexCoord2f(x_start_upper*g+o,y_upper*g+o)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexCoord2f(x_stop_upper*g+o,y_upper*g+o)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexCoord2f(x_stop_lower*g+o,y_lower*g+o)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexCoord2f(x_start_lower*g+o,y_lower*g+o)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(tex.buf_lf,tex.buf_bf)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(tex.buf_rf,tex.buf_bf)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(tex.buf_rf,tex.buf_tf)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(tex.buf_lf,tex.buf_tf)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(tex.buf_lf,tex.buf_bf)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(tex.buf_rf,tex.buf_bf)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(tex.buf_rf,tex.buf_tf)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(tex.buf_lf,tex.buf_tf)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(tex.buf_lf,tex.buf_bf)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(tex.buf_rf,tex.buf_bf)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(tex.buf_rf,tex.buf_tf)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(tex.buf_lf,tex.buf_tf)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(buf_break_f,tex.buf_bf)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(tex.buf_rf,tex.buf_bf)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(tex.buf_rf,tex.buf_tf)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(buf_break_f,tex.buf_tf)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(tex.buf_lf,tex.buf_bf)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(buf_break_f,tex.buf_bf)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(buf_break_f,tex.buf_tf)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(tex.buf_lf,tex.buf_tf)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(frac1, tex.buf_bf)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(frac2, tex.buf_bf)
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(frac2, tex.buf_tf);
  (LGPL) VisionEgg src/Textures.py gl.glTexCoord2f(frac1, tex.buf_tf)
glTexCoordPointerd
  OpenGLContext scenegraph/arraygeometry.py glTexCoordPointerd(self.textures )
  OpenGLContext scenegraph/indexedpolygons.py glTexCoordPointerd( tex )
glTexEnvf
  OpenGLContext tests/dek_texturesurf.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGLContext tests/nehe6_timer.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGLContext tests/multitexture_1.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE)
  OpenGLContext tests/multitexture_1.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGLContext tests/nehe6.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGLContext tests/nehe6_multi.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGLContext tests/nehe6_multi.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE)
  OpenGL/Demo dek/texturesurf.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGL/Demo dek/texturesurf2.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGL/Demo dek/tile.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGL/Demo NeHe/lesson18.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGL/Demo NeHe/lesson6-multi.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  OpenGL/Demo NeHe/lesson6.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
  (LGPL) PyUI pyui/renderers/openglGlut.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE)
  (LGPL) PyUI tests/testcube.py glTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_DECAL)
glTexEnvfv
  OpenGL/Demo NeHe/lesson6-multi.py glTexEnvfv(GL_TEXTURE_ENV, GL_TEXTURE_ENV_COLOR, (p, p, p, 1))
  (LGPL) VisionEgg src/Gratings.py gl.glTexEnvfv(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_COLOR, p.color2)
glTexEnvi
  OpenGL/Demo NeHe/lesson6-multi.py glTexEnvi(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_BLEND)
  (LGPL) VisionEgg src/Gratings.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_BLEND)
  (LGPL) VisionEgg src/Gratings.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_MODULATE)
  (LGPL) VisionEgg src/Lib3DS.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_REPLACE)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_DECAL)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_REPLACE)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_REPLACE)
  (LGPL) VisionEgg src/Textures.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_MODULATE)
  (LGPL) VisionEgg src/Textures.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_MODULATE)
  (LGPL) VisionEgg src/Textures.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_REPLACE)
  (LGPL) VisionEgg src/Textures.py gl.glTexEnvi(gl.GL_TEXTURE_ENV, gl.GL_TEXTURE_ENV_MODE, gl.GL_DECAL)
glTexImage1D
  (LGPL) VisionEgg src/Gratings.py gl.glTexImage1D(gl.GL_PROXY_TEXTURE_1D,            # target
  (LGPL) VisionEgg src/Gratings.py gl.glTexImage1D(gl.GL_TEXTURE_1D,                  # target
  (LGPL) VisionEgg src/SphereMap.py gl.glTexImage1D(gl.GL_PROXY_TEXTURE_1D,  # target
  (LGPL) VisionEgg src/SphereMap.py gl.glTexImage1D(gl.GL_TEXTURE_1D,        # target
glTexImage1Dub
  (LGPL) VisionEgg src/Textures.py gl.glTexImage1Dub(gl.GL_PROXY_TEXTURE_1D,
  (LGPL) VisionEgg src/Textures.py gl.glTexImage1Dub(gl.GL_TEXTURE_1D,
glTexImage2D
  OpenGLContext texture.py glTexImage2D(
  OpenGLContext tests/dek_texturesurf.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGLContext tests/nehe6.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGLContext tests/nehe7.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGLContext tests/nehe7.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGLContext tests/nehe8.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGLContext tests/nehe8.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGL/Demo dek/texturesurf.py glTexImage2D(GL_TEXTURE_2D, 0, 3, self.imageWidth, self.imageHeight, 0,
  OpenGL/Demo dek/tile.py glTexImage2D(GL_TEXTURE_2D, 0, 3, self.imageWidth, self.imageHeight, 0, GL_RGBA, GL_UNSIGNED_BYTE,  self.image)
  OpenGL/Demo NeHe/lesson18.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGL/Demo NeHe/lesson18.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGL/Demo NeHe/lesson6-multi.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGL/Demo NeHe/lesson6.py glTexImage2D(GL_TEXTURE_2D, 0, 3, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  (LGPL) PyUI pyui/renderers/openglGlut.py glTexImage2D(GL_TEXTURE_2D, 0, seq, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, image)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexImage2D(GL_TEXTURE_2D, 0, 4, ix, iy, 0, GL_RGBA, GL_UNSIGNED_BYTE, data)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, totalWidth, totalHeight, 0, GL_RGBA, GL_UNSIGNED_BYTE, data)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexImage2D(gl.GL_PROXY_TEXTURE_2D,      # target
  (LGPL) VisionEgg src/SphereMap.py gl.glTexImage2D(gl.GL_TEXTURE_2D,      # target
  (LGPL) VisionEgg src/Textures.py gl.glTexImage2D(target,
  (LGPL) VisionEgg src/Textures.py gl.glTexImage2D(target,
  (LGPL) VisionEgg test/opengl_info.py glTexImage2D(GL_PROXY_TEXTURE_2D,0,GL_RGB,w,h,0,GL_RGB,GL_UNSIGNED_BYTE,data)
glTexImage2Dub
  OpenGL/Demo dek/texturesurf2.py glTexImage2Dub(GL_TEXTURE_2D, 0, 3, 0, GL_RGBA, self.image)
glTexImage3Dub
  (LGPL) VisionEgg src/Textures.py gl.glTexImage3Dub(gl.GL_PROXY_TEXTURE_3D,
  (LGPL) VisionEgg src/Textures.py gl.glTexImage3Dub(gl.GL_TEXTURE_3D,
glTexParameter
  OpenGLContext scenegraph/imagetexture.py glTexParameter(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  OpenGLContext scenegraph/imagetexture.py glTexParameter(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP)
  OpenGLContext scenegraph/imagetexture.py glTexParameter(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  OpenGLContext scenegraph/imagetexture.py glTexParameter(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP)
  OpenGLContext scenegraph/imagetexture.py glTexParameter( GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, self.magFilter )
  OpenGLContext scenegraph/imagetexture.py glTexParameter( GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, self.minFilter )
glTexParameterf
  OpenGLContext tests/dek_texturesurf.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  OpenGLContext tests/dek_texturesurf.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  OpenGLContext tests/dek_texturesurf.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/dek_texturesurf.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe6_timer.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe6_timer.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext tests/multitexture_1.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/multitexture_1.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext tests/multitexture_1.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/multitexture_1.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe6.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe6.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe6_multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe6_multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe6_multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe6_multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGL/Demo dek/texturesurf.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  OpenGL/Demo dek/texturesurf.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  OpenGL/Demo dek/texturesurf.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGL/Demo dek/texturesurf.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGL/Demo dek/texturesurf2.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  OpenGL/Demo dek/texturesurf2.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  OpenGL/Demo dek/texturesurf2.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGL/Demo dek/texturesurf2.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGL/Demo dek/tile.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  OpenGL/Demo dek/tile.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  OpenGL/Demo dek/tile.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGL/Demo dek/tile.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGL/Demo NeHe/lesson18.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP)
  OpenGL/Demo NeHe/lesson18.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP)
  OpenGL/Demo NeHe/lesson18.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  OpenGL/Demo NeHe/lesson18.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  OpenGL/Demo NeHe/lesson18.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGL/Demo NeHe/lesson18.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGL/Demo NeHe/lesson6-multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP)
  OpenGL/Demo NeHe/lesson6-multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP)
  OpenGL/Demo NeHe/lesson6-multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  OpenGL/Demo NeHe/lesson6-multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  OpenGL/Demo NeHe/lesson6-multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGL/Demo NeHe/lesson6-multi.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGL/Demo NeHe/lesson6.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP)
  OpenGL/Demo NeHe/lesson6.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP)
  OpenGL/Demo NeHe/lesson6.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  OpenGL/Demo NeHe/lesson6.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  OpenGL/Demo NeHe/lesson6.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGL/Demo NeHe/lesson6.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  (LGPL) PyUI pyui/renderers/openglGlut.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  (LGPL) PyUI pyui/renderers/openglGlut.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  (LGPL) PyUI pyui/renderers/openglGlut.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  (LGPL) PyUI pyui/renderers/openglGlut.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  (LGPL) PyUI tests/testcube.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT)
  (LGPL) PyUI tests/testcube.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT)
  (LGPL) PyUI tests/testcube.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  (LGPL) PyUI tests/testcube.py glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
glTexParameteri
  OpenGLContext tests/nehe7.py glTexParameteri( GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe7.py glTexParameteri( GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe7.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR)
  OpenGLContext tests/nehe7.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR)
  OpenGLContext tests/nehe7.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR)
  OpenGLContext tests/nehe7.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_NEAREST)
  OpenGLContext tests/nehe8.py glTexParameteri( GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe8.py glTexParameteri( GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
  OpenGLContext tests/nehe8.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR)
  OpenGLContext tests/nehe8.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR)
  OpenGLContext tests/nehe8.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR)
  OpenGLContext tests/nehe8.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_NEAREST)
  OpenGL/Demo NeHe/lesson18.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR)
  OpenGL/Demo NeHe/lesson18.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR)
  OpenGL/Demo NeHe/lesson18.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR)
  OpenGL/Demo NeHe/lesson18.py glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_NEAREST)
  (LGPL) VisionEgg src/Gratings.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_WRAP_S,gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/Gratings.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_WRAP_T,gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/Gratings.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MAG_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/Gratings.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MIN_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_WRAP_S,gl.GL_REPEAT)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_WRAP_T,gl.GL_REPEAT)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MAG_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MIN_FILTER,p.min_filter)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_1D,gl.GL_TEXTURE_MIN_FILTER,p.min_filter)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_2D,gl.GL_TEXTURE_WRAP_S,gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_2D,gl.GL_TEXTURE_WRAP_T,gl.GL_CLAMP_TO_EDGE)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_2D,gl.GL_TEXTURE_MAG_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/SphereMap.py gl.glTexParameteri(gl.GL_TEXTURE_2D,gl.GL_TEXTURE_MIN_FILTER,gl.GL_LINEAR)
  (LGPL) VisionEgg src/Textures.py gl.glTexParameteri( self.target, gl.GL_TEXTURE_MIN_FILTER,filter)
  (LGPL) VisionEgg src/Textures.py gl.glTexParameteri( self.target, gl.GL_TEXTURE_MAG_FILTER, filter)
  (LGPL) VisionEgg src/Textures.py gl.glTexParameteri( self.target, gl.GL_TEXTURE_WRAP_S, wrap_mode)
  (LGPL) VisionEgg src/Textures.py gl.glTexParameteri( self.target, gl.GL_TEXTURE_WRAP_T, wrap_mode)
  (LGPL) VisionEgg src/Textures.py gl.glTexParameteri( self.target, gl.GL_TEXTURE_WRAP_R, wrap_mode)
glTexParameteriv
  (LGPL) VisionEgg src/Textures.py gl.glTexParameteriv( self.target, gl.GL_TEXTURE_BORDER_COLOR, border_color)
glTexSubImage1D
  (LGPL) VisionEgg src/Gratings.py gl.glTexSubImage1D(gl.GL_TEXTURE_1D, # target
  (LGPL) VisionEgg src/SphereMap.py gl.glTexSubImage1D(gl.GL_TEXTURE_1D,           # target
  (LGPL) VisionEgg src/Textures.py gl.glTexSubImage1D(gl.GL_TEXTURE_1D,
glTexSubImage2D
  (LGPL) VisionEgg src/Textures.py gl.glTexSubImage2D(target,
glTranslate
  OpenGLContext fxcontext.py glTranslate ( 2,0,-4)
  OpenGLContext viewplatform.py apply( glTranslate, ( negative (self.position))[:3])
  OpenGLContext shadow/volume.py glTranslate( *self.sourceVector[:3])
  OpenGLContext shadow/shadowcontext.py apply( glTranslate, ( negative (self.position))[:3])
  OpenGLContext tests/transparentsorted.py glTranslate( -3,0,-4 )
  OpenGLContext scenegraph/text/wglfont.py glTranslate( -line.width, -height, 0.0)
  OpenGLContext scenegraph/text/wglfont.py glTranslate( 0.0, -height, 0.0)
  OpenGLContext scenegraph/text/wglfont.py glTranslate( -half, 0.0, 0.0)
  OpenGLContext scenegraph/text/wglfont.py glTranslate( -half, -height, 0.0)
  OpenGLContext scenegraph/text/wglfont.py glTranslate( -line.width, 0.0, 0.0)
  OpenGLContext scenegraph/text/wglfont.py glTranslate( 0, -height, 0.0)
  SciPy/kiva glcore2d.py glTranslate( args[0], args[1], 0 )
  (LGPL) PyUI pyui/renderers/openglBase.py glTranslate(rect[0] + (halfwidth), rect[1] + (halfheight), 0.0)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTranslate(xPos,yPos,0)
  (LGPL) PyUI pyui/renderers/openglPygame.py glTranslate(width,0,0)
  (LGPL) PyUI tests/testcube.py glTranslate(0.0, -0.3, -3.0)                 #move back
  (LGPL) VisionEgg src/Gratings.py gl.glTranslate(p.center[0],
  (LGPL) VisionEgg src/MoreStimuli.py gl.glTranslate(self.parameters.center[0],self.parameters.center[1],0.0)
  (LGPL) VisionEgg src/Text.py gl.glTranslate(self.parameters.lowerleft[0],self.parameters.lowerleft[1],0.0)
  (LGPL) VisionEgg src/Text.py gl.glTranslate(self.parameters.lowerleft[0],self.parameters.lowerleft[1],0.0)
  (LGPL) VisionEgg src/Textures.py gl.glTranslate(lowerleft[0],lowerleft[1],lowerleft[2])
glTranslated
  OpenGLContext glutinteractivecontext.py from OpenGL.GL import glTranslated
  OpenGLContext glutinteractivecontext.py glTranslated ( 2,0,-4)
  OpenGLContext pygamecontext.py glTranslated(0, 0, -3)
  OpenGLContext pygameinteractivecontext.py glTranslated(0, 0, -3)
  OpenGLContext tkcontext.py glTranslated ( 2,0,-4)
  OpenGLContext wxcontext.py glTranslated ( 2,0,-4)
  OpenGLContext wxinteractivecontext.py from OpenGL.GL import glTranslated
  OpenGLContext wxinteractivecontext.py glTranslated ( 2,0,-4)
  OpenGLContext glutcontext.py glTranslated ( 2,0,-4)
  OpenGLContext scenegraph/quadrics.py glTranslated( 0,-self.height/2.0, 0)
  OpenGLContext scenegraph/quadrics.py glTranslated( 0,-self.height/2.0, 0)
  OpenGLContext scenegraph/quadrics.py glTranslated( 0, 0, self.height)
  OpenGLContext scenegraph/quadrics.py glTranslated( 0, 0, -self.height)
  OpenGL/Demo redbook/movelight.py glTranslated (0.0, 0.0, 1.5)
glTranslatef
  OpenGLContext tests/backgroundobject.py glTranslatef(-1.5,0.0,-6.0);
  OpenGLContext tests/glarrayelement.py glTranslatef( 0,0,-1)
  OpenGLContext tests/glinterleavedarrays.py glTranslatef( 1,0,0)
  OpenGLContext tests/glinterleavedarrays.py glTranslatef( 0,-2,0)
  OpenGLContext tests/glut_fullscreen.py glTranslatef(1.5,0.0,-6.0);
  OpenGLContext tests/nehe6_timer.py glTranslatef(1.5,0.0,-6.0);
  OpenGLContext tests/materialobject.py glTranslatef(1.5,0.0,-6.0);
  OpenGLContext tests/lightobject.py glTranslatef(1.5,0.0,-6.0);
  OpenGLContext tests/nehe2.py glTranslatef(-1.5,0.0,-6.0);
  OpenGLContext tests/nehe2.py glTranslatef(3.0,0.0,0.0);
  OpenGLContext tests/nehe3.py glTranslatef(-1.5,0.0,-6.0);
  OpenGLContext tests/nehe3.py glTranslatef(3.0,0.0,0.0);
  OpenGLContext tests/nehe4.py glTranslatef(-1.5,0.0,-6.0);
  OpenGLContext tests/nehe4.py glTranslatef(1.5,0.0,-6.0);
  OpenGLContext tests/nehe5.py glTranslatef(-1.5,0.0,-6.0);
  OpenGLContext tests/nehe5.py glTranslatef(1.5,0.0,-6.0);
  OpenGLContext tests/nehe6.py glTranslatef(1.5,0.0,-6.0);
  OpenGLContext tests/nehe6_multi.py glTranslatef(1.5,0.0,-6.0);
  OpenGLContext tests/nehe7.py glTranslatef(1.5,0.0,self.currentZOffset);
  OpenGLContext tests/nehe8.py glTranslatef(1.5,0.0,self.currentZOffset);
  OpenGLContext tests/redbook_alpha3D.py glTranslatef (-0.15, -0.15, self.solidZ);
  OpenGLContext tests/redbook_alpha3D.py glTranslatef (0.15, 0.15, self.transparentZ);
  OpenGLContext tests/spincube.py glTranslatef( 0,0,-1)
  OpenGLContext tests/saveimage.py glTranslatef(1.5,0.0,-6.0);
  OpenGLContext tests/textureobject.py glTranslatef(1.5,0.0,-6.0);
  OpenGLContext tests/test.py glTranslatef(-1.5,0.0,-6.0);
  OpenGLContext scenegraph/transform.py glTranslatef(*self.translation)
  OpenGLContext scenegraph/transform.py glTranslatef(*self.center)
  OpenGLContext scenegraph/transform.py glTranslatef( *(-self.center))
  OpenGLContext scenegraph/texturetransform.py glTranslatef(x,y,0)
  OpenGLContext scenegraph/texturetransform.py glTranslatef(cx,cy,0)
  OpenGLContext scenegraph/texturetransform.py glTranslatef( -cx,-cy,0)
  OpenGL/Demo GLE/cone.py glTranslatef (0.0, 0.0, -80.0)
  OpenGL/Demo GLE/helix.py glTranslatef (0.0, 0.0, -80.0)
  OpenGL/Demo GLE/texas.py glTranslatef (0.0, 0.0, -80.0)
  OpenGL/Demo GLUT/examples/molehill.py glTranslatef(0.0, 0.0, -15.0)
  OpenGL/Demo NeHe/lesson18.py glTranslatef(0.0,0.0,-5.0)			# Move Into The Screen
  OpenGL/Demo NeHe/lesson18.py glTranslatef(0.0,0.0,-1.5)			# Center The Cylinder
  OpenGL/Demo NeHe/lesson18.py glTranslatef(0.0,0.0,-1.5)			# Center The Cone
  OpenGL/Demo NeHe/lesson2.py glTranslatef(-1.5, 0.0, -6.0)
  OpenGL/Demo NeHe/lesson2.py glTranslatef(3.0, 0.0, 0.0)
  OpenGL/Demo NeHe/lesson3.py glTranslatef(-1.5, 0.0, -6.0)
  OpenGL/Demo NeHe/lesson3.py glTranslatef(3.0, 0.0, 0.0)
  OpenGL/Demo NeHe/lesson4.py glTranslatef(-1.5, 0.0, -6.0)
  OpenGL/Demo NeHe/lesson4.py glTranslatef(1.5, 0.0, -6.0)
  OpenGL/Demo NeHe/lesson5.py glTranslatef(-1.5,0.0,-6.0);				# Move Left And Into The Screen
  OpenGL/Demo NeHe/lesson5.py glTranslatef(1.5,0.0,-7.0);		# Move Right And Into The Screen
  OpenGL/Demo NeHe/lesson6-multi.py glTranslatef(0.0,0.0,-5.0)			# Move Into The Screen
  OpenGL/Demo NeHe/lesson6.py glTranslatef(0.0,0.0,-5.0)			# Move Into The Screen
  OpenGL/Demo redbook/fog.py glTranslatef (x, y, z)
  OpenGL/Demo redbook/scene.py glTranslatef(-0.75, 0.5, 0.0);
  OpenGL/Demo redbook/scene.py glTranslatef(-0.75, -0.5, 0.0);
  OpenGL/Demo redbook/scene.py glTranslatef(0.75, 0.0, -1.0)
  OpenGL/Demo redbook/teapots.py glTranslatef(x, y, 0.0)
  OpenGL/Demo simple/GLE.py glTranslatef(0.0, 0.0, -80.0)
  OpenGL/Demo suite/items/GLE/cone.py glTranslatef(0.0, 0.0, -40.0)
  OpenGL/Demo suite/items/GLE/helix.py glTranslatef (0.0, 0.0, -40.0)
  OpenGL/Demo suite/items/GLUT/geometry/solid_dodecahedron.py glTranslatef(0.0, 0.0, -6.0)
  OpenGL/Demo suite/items/GLUT/geometry/wire_dodecahedron.py glTranslatef(0.0, 0.0, -6.0)
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glTranslatef(0.0, 0.0, -3.0)
  OpenGL/Demo suite/items/GLUT/geometry/__init__.py glTranslatef(0.0, 0.0, -3.0)
  OpenGL/Demo tom/checker.py glTranslatef(0., 0., 1.)
  OpenGL/Demo tom/cone.py glTranslatef(0, -1, 0)
  OpenGL/Demo tom/conechecker.py glTranslatef(0., 0., 1.)
  OpenGL/Demo tom/conechecker.py glTranslatef(0, -1, 0)
  OpenGL/Demo tom/conesave.py glTranslatef(0, -1, 0)
  OpenGL/Demo tom/fog.py glTranslatef(x, y, z);
  OpenGL/Demo tom/pick.py glTranslatef(s[0], s[1], s[2])
  OpenGL/Demo twburton/knot.py glTranslatef(0, 0.0, -30.0)
  OpenGL/Demo twburton/knot.py glTranslatef(0, 0.0, -30.0)
  (LGPL) PyUI pyui/renderers/openglBase.py glTranslatef(winX, winY, 0)
  (LGPL) VisionEgg src/Core.py gl.glTranslatef(x,y,z)
  (LGPL) VisionEgg src/Core.py gl.glTranslatef(x,y,z)
  (LGPL) VisionEgg src/Core.py gl.glTranslatef(-eye[0],-eye[1],-eye[2])
  (LGPL) VisionEgg src/Textures.py gl.glTranslatef(p.position[0],p.position[1],p.position[2])
glVertex
  OpenGLContext tests/redbook_surface_cb.py glVertex( vertex )
  SciPy/kiva glcore2d.py glVertex( x[0], x[1] )
  (LGPL) PyUI tests/testcube.py glVertex(pos)
  (LGPL) PyUI tests/testcube.py glVertex(pos)
glVertex2f
  OpenGL/Demo redbook/lines.py glVertex2f(x1, y1)
  OpenGL/Demo redbook/lines.py glVertex2f(x2, y2)
  OpenGL/Demo redbook/lines.py glVertex2f(50.0 + (i * 50.0), 75.0)
  OpenGL/Demo redbook/smooth.py glVertex2f(5.0, 5.0)
  OpenGL/Demo redbook/smooth.py glVertex2f(25.0, 5.0)
  OpenGL/Demo redbook/smooth.py glVertex2f(5.0, 25.0)
  OpenGL/Demo tom/demo.py glVertex2f(0,-30)
  OpenGL/Demo tom/demo.py glVertex2f(60,30)
  OpenGL/Demo tom/demo.py glVertex2f(60,-30)
  OpenGL/Demo tom/demo.py glVertex2f(0,30)
  OpenGL/Demo tom/Line.py glVertex2f(0,0)
  OpenGL/Demo tom/Line.py glVertex2f(1,1)
  OpenGL/Demo tom/Line.py glVertex2f(1,0)
  OpenGL/Demo tom/Line.py glVertex2f(0,1)
  (LGPL) VisionEgg src/Core.py gl.glVertex2f(x1,y1)
  (LGPL) VisionEgg src/Core.py gl.glVertex2f(x2,y1)
  (LGPL) VisionEgg src/Core.py gl.glVertex2f(x2,y2)
  (LGPL) VisionEgg src/Core.py gl.glVertex2f(x1,y2)
  (LGPL) VisionEgg src/Textures.py gl.glVertex2f(l,b)
  (LGPL) VisionEgg src/Textures.py gl.glVertex2f(r,b)
  (LGPL) VisionEgg src/Textures.py gl.glVertex2f(r,t)
  (LGPL) VisionEgg src/Textures.py gl.glVertex2f(l,t)
  (LGPL) VisionEgg src/Textures.py gl.glVertex2f(0.0,0.0)
  (LGPL) VisionEgg src/Textures.py gl.glVertex2f(w,0.0)
  (LGPL) VisionEgg src/Textures.py gl.glVertex2f(w,h)
  (LGPL) VisionEgg src/Textures.py gl.glVertex2f(0.0,h)
  (LGPL) VisionEgg src/Textures.py gl.glVertex2f(0.0,0.0)
  (LGPL) VisionEgg src/Textures.py gl.glVertex2f(quad_x_break,0.0)
  (LGPL) VisionEgg src/Textures.py gl.glVertex2f(quad_x_break,h)
  (LGPL) VisionEgg src/Textures.py gl.glVertex2f(0.0,h)
  (LGPL) VisionEgg src/Textures.py gl.glVertex2f(quad_x_break,0.0)
  (LGPL) VisionEgg src/Textures.py gl.glVertex2f(w,0.0)
  (LGPL) VisionEgg src/Textures.py gl.glVertex2f(w,h)
  (LGPL) VisionEgg src/Textures.py gl.glVertex2f(quad_x_break,h)
glVertex2i
  (LGPL) PyUI pyui/renderers/openglBase.py glVertex2i(rect[0], rect[1])
  (LGPL) PyUI pyui/renderers/openglBase.py glVertex2i(rect[0] + rect[2], rect[1])
  (LGPL) PyUI pyui/renderers/openglBase.py glVertex2i(rect[0] + rect[2], rect[1] + rect[3])
  (LGPL) PyUI pyui/renderers/openglBase.py glVertex2i(rect[0], rect[1] + rect[3])
  (LGPL) PyUI pyui/renderers/openglBase.py glVertex2i(rect[0], rect[1])                        # top left
  (LGPL) PyUI pyui/renderers/openglBase.py glVertex2i(rect[0] + rect[2], rect[1])              # top right
  (LGPL) PyUI pyui/renderers/openglBase.py glVertex2i(rect[0] + rect[2], rect[1] + rect[3])    # bottom right
  (LGPL) PyUI pyui/renderers/openglBase.py glVertex2i(rect[0], rect[1] + rect[3])              # bottom left
  (LGPL) PyUI pyui/renderers/openglBase.py glVertex2i(x1, y1)
  (LGPL) PyUI pyui/renderers/openglBase.py glVertex2i(x2, y2)
  (LGPL) PyUI pyui/renderers/openglBase.py glVertex2i( rect[0], rect[1])
  (LGPL) PyUI pyui/renderers/openglBase.py glVertex2i( rect[0] + rect[2], rect[1])
  (LGPL) PyUI pyui/renderers/openglBase.py glVertex2i( rect[0] + rect[2], rect[1] + rect[3])
  (LGPL) PyUI pyui/renderers/openglBase.py glVertex2i( rect[0], rect[1] + rect[3])
  (LGPL) PyUI pyui/renderers/openglBase.py glVertex2i( -halfwidth, -halfheight)
  (LGPL) PyUI pyui/renderers/openglBase.py glVertex2i( halfwidth, -halfheight)
  (LGPL) PyUI pyui/renderers/openglBase.py glVertex2i( halfwidth, halfheight)
  (LGPL) PyUI pyui/renderers/openglBase.py glVertex2i( -halfwidth, halfheight)
  (LGPL) PyUI pyui/renderers/openglPygame.py glVertex2i(0, 0)
  (LGPL) PyUI pyui/renderers/openglPygame.py glVertex2i(width, 0)
  (LGPL) PyUI pyui/renderers/openglPygame.py glVertex2i(width, height)
  (LGPL) PyUI pyui/renderers/openglPygame.py glVertex2i(0, height)
glVertex3dv
  OpenGLContext tests/glvertex.py glVertex3dv( flower_geometry.points[index] )
  OpenGLContext scenegraph/cubebackground.py glVertex3dv( point )
glVertex3f
  OpenGLContext drawcube.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext drawcube.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext drawcube.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext drawcube.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext drawcube.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext drawcube.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext drawcube.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext drawcube.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext drawcube.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext drawcube.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext drawcube.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext drawcube.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext drawcube.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext drawcube.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext drawcube.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext drawcube.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext drawcube.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext drawcube.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext drawcube.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext drawcube.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext drawcube.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext drawcube.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext drawcube.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext drawcube.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext tests/backgroundobject.py glVertex3f( 0.0,  1.0, 0.0)
  OpenGLContext tests/backgroundobject.py glVertex3f(-1.0, -1.0, 0.0)
  OpenGLContext tests/backgroundobject.py glVertex3f( 1.0, -1.0, 0.0)
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext tests/nehe6_timer.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext tests/nehe2.py glVertex3f( 0.0,  1.0, 0.0)
  OpenGLContext tests/nehe2.py glVertex3f(-1.0, -1.0, 0.0)
  OpenGLContext tests/nehe2.py glVertex3f( 1.0, -1.0, 0.0)
  OpenGLContext tests/nehe2.py glVertex3f(-1.0,-1.0, 0.0)
  OpenGLContext tests/nehe2.py glVertex3f( 1.0,-1.0, 0.0)
  OpenGLContext tests/nehe2.py glVertex3f( 1.0, 1.0, 0.0)
  OpenGLContext tests/nehe2.py glVertex3f(-1.0, 1.0, 0.0)
  OpenGLContext tests/nehe3.py glVertex3f( 0.0,  1.0, 0.0)
  OpenGLContext tests/nehe3.py glVertex3f(-1.0, -1.0, 0.0)
  OpenGLContext tests/nehe3.py glVertex3f( 1.0, -1.0, 0.0)
  OpenGLContext tests/nehe3.py glVertex3f(-1.0,-1.0, 0.0)
  OpenGLContext tests/nehe3.py glVertex3f( 1.0,-1.0, 0.0)
  OpenGLContext tests/nehe3.py glVertex3f( 1.0, 1.0, 0.0)
  OpenGLContext tests/nehe3.py glVertex3f(-1.0, 1.0, 0.0)
  OpenGLContext tests/multitexture_1.py mTexture(0.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext tests/multitexture_1.py mTexture(1.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext tests/multitexture_1.py mTexture(1.0, 1.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext tests/multitexture_1.py mTexture(0.0, 1.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext tests/nehe4.py glVertex3f( 0.0,  1.0, 0.0)
  OpenGLContext tests/nehe4.py glVertex3f(-1.0, -1.0, 0.0)
  OpenGLContext tests/nehe4.py glVertex3f( 1.0, -1.0, 0.0)
  OpenGLContext tests/nehe4.py glVertex3f(-1.0, 1.0, 0.0)
  OpenGLContext tests/nehe4.py glVertex3f( 1.0, 1.0, 0.0)
  OpenGLContext tests/nehe4.py glVertex3f( 1.0,-1.0, 0.0)
  OpenGLContext tests/nehe4.py glVertex3f(-1.0,-1.0, 0.0)
  OpenGLContext tests/nehe5.py glVertex3f( 0.0, 1.0, 0.0)
  OpenGLContext tests/nehe5.py glVertex3f(-1.0,-1.0, 1.0)
  OpenGLContext tests/nehe5.py glVertex3f( 1.0,-1.0, 1.0)
  OpenGLContext tests/nehe5.py glVertex3f( 0.0, 1.0, 0.0)
  OpenGLContext tests/nehe5.py glVertex3f( 1.0,-1.0, 1.0);
  OpenGLContext tests/nehe5.py glVertex3f( 1.0,-1.0, -1.0);
  OpenGLContext tests/nehe5.py glVertex3f( 0.0, 1.0, 0.0);
  OpenGLContext tests/nehe5.py glVertex3f( 1.0,-1.0, -1.0);
  OpenGLContext tests/nehe5.py glVertex3f(-1.0,-1.0, -1.0);
  OpenGLContext tests/nehe5.py glVertex3f( 0.0, 1.0, 0.0);
  OpenGLContext tests/nehe5.py glVertex3f(-1.0,-1.0,-1.0);
  OpenGLContext tests/nehe5.py glVertex3f(-1.0,-1.0, 1.0);
  OpenGLContext tests/nehe5.py glVertex3f( 1.0, 1.0,-1.0)
  OpenGLContext tests/nehe5.py glVertex3f(-1.0, 1.0,-1.0)
  OpenGLContext tests/nehe5.py glVertex3f(-1.0, 1.0, 1.0)
  OpenGLContext tests/nehe5.py glVertex3f( 1.0, 1.0, 1.0)
  OpenGLContext tests/nehe5.py glVertex3f( 1.0,-1.0, 1.0)
  OpenGLContext tests/nehe5.py glVertex3f(-1.0,-1.0, 1.0)
  OpenGLContext tests/nehe5.py glVertex3f(-1.0,-1.0,-1.0)
  OpenGLContext tests/nehe5.py glVertex3f( 1.0,-1.0,-1.0)
  OpenGLContext tests/nehe5.py glVertex3f( 1.0, 1.0, 1.0)
  OpenGLContext tests/nehe5.py glVertex3f(-1.0, 1.0, 1.0)
  OpenGLContext tests/nehe5.py glVertex3f(-1.0,-1.0, 1.0)
  OpenGLContext tests/nehe5.py glVertex3f( 1.0,-1.0, 1.0)
  OpenGLContext tests/nehe5.py glVertex3f( 1.0,-1.0,-1.0)
  OpenGLContext tests/nehe5.py glVertex3f(-1.0,-1.0,-1.0)
  OpenGLContext tests/nehe5.py glVertex3f(-1.0, 1.0,-1.0)
  OpenGLContext tests/nehe5.py glVertex3f( 1.0, 1.0,-1.0)
  OpenGLContext tests/nehe5.py glVertex3f(-1.0, 1.0, 1.0)
  OpenGLContext tests/nehe5.py glVertex3f(-1.0, 1.0,-1.0)
  OpenGLContext tests/nehe5.py glVertex3f(-1.0,-1.0,-1.0)
  OpenGLContext tests/nehe5.py glVertex3f(-1.0,-1.0, 1.0)
  OpenGLContext tests/nehe5.py glVertex3f( 1.0, 1.0,-1.0)
  OpenGLContext tests/nehe5.py glVertex3f( 1.0, 1.0, 1.0)
  OpenGLContext tests/nehe5.py glVertex3f( 1.0,-1.0, 1.0)
  OpenGLContext tests/nehe5.py glVertex3f( 1.0,-1.0,-1.0)
  OpenGLContext tests/nehe6.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext tests/nehe6.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext tests/nehe6_multi.py mTexture(0.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext tests/nehe6_multi.py mTexture(1.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext tests/nehe6_multi.py mTexture(1.0, 1.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext tests/nehe6_multi.py mTexture(0.0, 1.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext tests/nehe6_multi.py mTexture(1.0, 0.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext tests/nehe6_multi.py mTexture(1.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext tests/nehe6_multi.py mTexture(0.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext tests/nehe6_multi.py mTexture(0.0, 0.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext tests/nehe6_multi.py mTexture(0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext tests/nehe6_multi.py mTexture(0.0, 0.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext tests/nehe6_multi.py mTexture(1.0, 0.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext tests/nehe6_multi.py mTexture(1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext tests/nehe6_multi.py mTexture(1.0, 1.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext tests/nehe6_multi.py mTexture(0.0, 1.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext tests/nehe6_multi.py mTexture(0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext tests/nehe6_multi.py mTexture(1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext tests/nehe6_multi.py mTexture(1.0, 0.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext tests/nehe6_multi.py mTexture(1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext tests/nehe6_multi.py mTexture(0.0, 1.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext tests/nehe6_multi.py mTexture(0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext tests/nehe6_multi.py mTexture(0.0, 0.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext tests/nehe6_multi.py mTexture(1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext tests/nehe6_multi.py mTexture(1.0, 1.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext tests/nehe6_multi.py mTexture(0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext tests/nehe7.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext tests/nehe8.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext tests/redbook_alpha.py glVertex3f(0.1, 0.9, 0.0);
  OpenGLContext tests/redbook_alpha.py glVertex3f(0.1, 0.1, 0.0);
  OpenGLContext tests/redbook_alpha.py glVertex3f(0.7, 0.5, 0.0);
  OpenGLContext tests/redbook_alpha.py glVertex3f(0.9, 0.9, 0.0);
  OpenGLContext tests/redbook_alpha.py glVertex3f(0.3, 0.5, 0.0);
  OpenGLContext tests/redbook_alpha.py glVertex3f(0.9, 0.1, 0.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0, -1.0, -1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0,  1.0,  1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0, -1.0, -1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0,  1.0,  1.0);
  OpenGLContext tests/textureobject.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0);
  OpenGLContext tests/test.py glVertex3f( 0.0,  1.0, 0.0)
  OpenGLContext tests/test.py glVertex3f(-1.0, -1.0, 0.0)
  OpenGLContext tests/test.py glVertex3f( 1.0, -1.0, 0.0)
  OpenGLContext scenegraph/box.py glTexCoord2f(0.0, 0.0); glVertex3f(-x, -y, z)
  OpenGLContext scenegraph/box.py glTexCoord2f(1.0, 0.0); glVertex3f( x, -y, z)
  OpenGLContext scenegraph/box.py glTexCoord2f(1.0, 1.0); glVertex3f( x, y, z)
  OpenGLContext scenegraph/box.py glTexCoord2f(0.0, 1.0); glVertex3f(-x, y, z)
  OpenGLContext scenegraph/box.py glTexCoord2f(1.0, 0.0); glVertex3f(-x, -y, -z)
  OpenGLContext scenegraph/box.py glTexCoord2f(1.0, 1.0); glVertex3f(-x, y, -z)
  OpenGLContext scenegraph/box.py glTexCoord2f(0.0, 1.0); glVertex3f( x, y, -z)
  OpenGLContext scenegraph/box.py glTexCoord2f(0.0, 0.0); glVertex3f( x, -y, -z)
  OpenGLContext scenegraph/box.py glTexCoord2f(0.0, 1.0); glVertex3f(-x, y, -z)
  OpenGLContext scenegraph/box.py glTexCoord2f(0.0, 0.0); glVertex3f(-x, y, z)
  OpenGLContext scenegraph/box.py glTexCoord2f(1.0, 0.0); glVertex3f( x, y, z)
  OpenGLContext scenegraph/box.py glTexCoord2f(1.0, 1.0); glVertex3f( x, y, -z)
  OpenGLContext scenegraph/box.py glTexCoord2f(1.0, 1.0); glVertex3f(-x, -y, -z)
  OpenGLContext scenegraph/box.py glTexCoord2f(0.0, 1.0); glVertex3f( x, -y, -z)
  OpenGLContext scenegraph/box.py glTexCoord2f(0.0, 0.0); glVertex3f( x, -y, z)
  OpenGLContext scenegraph/box.py glTexCoord2f(1.0, 0.0); glVertex3f(-x, -y, z)
  OpenGLContext scenegraph/box.py glTexCoord2f(1.0, 0.0); glVertex3f( x, -y, -z)
  OpenGLContext scenegraph/box.py glTexCoord2f(1.0, 1.0); glVertex3f( x, y, -z)
  OpenGLContext scenegraph/box.py glTexCoord2f(0.0, 1.0); glVertex3f( x, y, z)
  OpenGLContext scenegraph/box.py glTexCoord2f(0.0, 0.0); glVertex3f( x, -y, z)
  OpenGLContext scenegraph/box.py glTexCoord2f(0.0, 0.0); glVertex3f(-x, -y, -z)
  OpenGLContext scenegraph/box.py glTexCoord2f(1.0, 0.0); glVertex3f(-x, -y, z)
  OpenGLContext scenegraph/box.py glTexCoord2f(1.0, 1.0); glVertex3f(-x, y, z)
  OpenGLContext scenegraph/box.py glTexCoord2f(0.0, 1.0); glVertex3f(-x, y, -z)
  OpenGLContext scenegraph/indexedlineset.py glVertex3f(*points[i])
  OpenGLContext scenegraph/indexedlineset.py glVertex3f(*points[i])
  OpenGLContext scenegraph/indexedlineset.py glVertex3f(*points[i])
  OpenGL/Demo dek/tile.py glTexCoord2f(0.0, 0.0);		glVertex3f(0.0, 0.0, 0.0)
  OpenGL/Demo dek/tile.py glTexCoord2f(0.0, 2.0);		glVertex3f(0.0, 10., 0.0)
  OpenGL/Demo dek/tile.py glTexCoord2f(2.0, 2.0);		glVertex3f(10. , 10., 0.0)
  OpenGL/Demo dek/tile.py glTexCoord2f(2.0, 0.0);		glVertex3f(10., 0.0, 0.0)
  OpenGL/Demo dek/OglSurface/OglFrame.py glVertex3f([0,0,0])
  OpenGL/Demo dek/OglSurface/OglFrame.py glVertex3f(self.axispoints[0].tolist())
  OpenGL/Demo dek/OglSurface/OglFrame.py glVertex3f([0,0,0])
  OpenGL/Demo dek/OglSurface/OglFrame.py glVertex3f(self.axispoints[1].tolist())
  OpenGL/Demo dek/OglSurface/OglFrame.py glVertex3f([0,0,0])
  OpenGL/Demo dek/OglSurface/OglFrame.py glVertex3f(self.axispoints[2].tolist())
  OpenGL/Demo dek/OglSurface/triangle.py glVertex3f(self.crd[at1][0], \
  OpenGL/Demo dek/OglSurface/triangle.py glVertex3f(self.crd[at2][0], \
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0, -1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0, -1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0,  1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0,  1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0, -1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0,  1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0,  1.0, -1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0, -1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0,  1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0,  1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0, -1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0, -1.0, -1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0, -1.0, -1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0,  1.0,  1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0, -1.0, -1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0,  1.0,  1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson18.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson2.py glVertex3f(0.0, 1.0, 0.0)           # Top
  OpenGL/Demo NeHe/lesson2.py glVertex3f(1.0, -1.0, 0.0)          # Bottom Right
  OpenGL/Demo NeHe/lesson2.py glVertex3f(-1.0, -1.0, 0.0)         # Bottom Left
  OpenGL/Demo NeHe/lesson2.py glVertex3f(-1.0, 1.0, 0.0)          # Top Left
  OpenGL/Demo NeHe/lesson2.py glVertex3f(1.0, 1.0, 0.0)           # Top Right
  OpenGL/Demo NeHe/lesson2.py glVertex3f(1.0, -1.0, 0.0)          # Bottom Right
  OpenGL/Demo NeHe/lesson2.py glVertex3f(-1.0, -1.0, 0.0)         # Bottom Left
  OpenGL/Demo NeHe/lesson3.py glVertex3f(0.0, 1.0, 0.0)           # Top
  OpenGL/Demo NeHe/lesson3.py glVertex3f(1.0, -1.0, 0.0)          # Bottom Right
  OpenGL/Demo NeHe/lesson3.py glVertex3f(-1.0, -1.0, 0.0)         # Bottom Left
  OpenGL/Demo NeHe/lesson3.py glVertex3f(-1.0, 1.0, 0.0)          # Top Left
  OpenGL/Demo NeHe/lesson3.py glVertex3f(1.0, 1.0, 0.0)           # Top Right
  OpenGL/Demo NeHe/lesson3.py glVertex3f(1.0, -1.0, 0.0)          # Bottom Right
  OpenGL/Demo NeHe/lesson3.py glVertex3f(-1.0, -1.0, 0.0)         # Bottom Left
  OpenGL/Demo NeHe/lesson4.py glVertex3f(0.0, 1.0, 0.0)           # Top
  OpenGL/Demo NeHe/lesson4.py glVertex3f(1.0, -1.0, 0.0)          # Bottom Right
  OpenGL/Demo NeHe/lesson4.py glVertex3f(-1.0, -1.0, 0.0)         # Bottom Left
  OpenGL/Demo NeHe/lesson4.py glVertex3f(-1.0, 1.0, 0.0)          # Top Left
  OpenGL/Demo NeHe/lesson4.py glVertex3f(1.0, 1.0, 0.0)           # Top Right
  OpenGL/Demo NeHe/lesson4.py glVertex3f(1.0, -1.0, 0.0)          # Bottom Right
  OpenGL/Demo NeHe/lesson4.py glVertex3f(-1.0, -1.0, 0.0)         # Bottom Left
  OpenGL/Demo NeHe/lesson5.py glVertex3f( 0.0, 1.0, 0.0);		# Top Of Triangle (Front)
  OpenGL/Demo NeHe/lesson5.py glVertex3f(-1.0,-1.0, 1.0);		# Left Of Triangle (Front)
  OpenGL/Demo NeHe/lesson5.py glVertex3f( 1.0,-1.0, 1.0);
  OpenGL/Demo NeHe/lesson5.py glVertex3f( 0.0, 1.0, 0.0);		# Top Of Triangle (Right)
  OpenGL/Demo NeHe/lesson5.py glVertex3f( 1.0,-1.0, 1.0);		# Left Of Triangle (Right)
  OpenGL/Demo NeHe/lesson5.py glVertex3f( 1.0,-1.0, -1.0);		# Right
  OpenGL/Demo NeHe/lesson5.py glVertex3f( 0.0, 1.0, 0.0);		# Top Of Triangle (Back)
  OpenGL/Demo NeHe/lesson5.py glVertex3f( 1.0,-1.0, -1.0);		# Left Of Triangle (Back)
  OpenGL/Demo NeHe/lesson5.py glVertex3f(-1.0,-1.0, -1.0);		# Right Of
  OpenGL/Demo NeHe/lesson5.py glVertex3f( 0.0, 1.0, 0.0);		# Top Of Triangle (Left)
  OpenGL/Demo NeHe/lesson5.py glVertex3f(-1.0,-1.0,-1.0);		# Left Of Triangle (Left)
  OpenGL/Demo NeHe/lesson5.py glVertex3f(-1.0,-1.0, 1.0);		# Right Of Triangle (Left)
  OpenGL/Demo NeHe/lesson5.py glVertex3f( 1.0, 1.0,-1.0);		# Top Right Of The Quad (Top)
  OpenGL/Demo NeHe/lesson5.py glVertex3f(-1.0, 1.0,-1.0);		# Top Left Of The Quad (Top)
  OpenGL/Demo NeHe/lesson5.py glVertex3f(-1.0, 1.0, 1.0);		# Bottom Left Of The Quad (Top)
  OpenGL/Demo NeHe/lesson5.py glVertex3f( 1.0, 1.0, 1.0);		# Bottom Right Of The Quad (Top)
  OpenGL/Demo NeHe/lesson5.py glVertex3f( 1.0,-1.0, 1.0);		# Top Right Of The Quad (Bottom)
  OpenGL/Demo NeHe/lesson5.py glVertex3f(-1.0,-1.0, 1.0);		# Top Left Of The Quad (Bottom)
  OpenGL/Demo NeHe/lesson5.py glVertex3f(-1.0,-1.0,-1.0);		# Bottom Left Of The Quad (Bottom)
  OpenGL/Demo NeHe/lesson5.py glVertex3f( 1.0,-1.0,-1.0);		# Bottom Right Of The Quad (Bottom)
  OpenGL/Demo NeHe/lesson5.py glVertex3f( 1.0, 1.0, 1.0);		# Top Right Of The Quad (Front)
  OpenGL/Demo NeHe/lesson5.py glVertex3f(-1.0, 1.0, 1.0);		# Top Left Of The Quad (Front)
  OpenGL/Demo NeHe/lesson5.py glVertex3f(-1.0,-1.0, 1.0);		# Bottom Left Of The Quad (Front)
  OpenGL/Demo NeHe/lesson5.py glVertex3f( 1.0,-1.0, 1.0);		# Bottom Right Of The Quad (Front)
  OpenGL/Demo NeHe/lesson5.py glVertex3f( 1.0,-1.0,-1.0);		# Bottom Left Of The Quad (Back)
  OpenGL/Demo NeHe/lesson5.py glVertex3f(-1.0,-1.0,-1.0);		# Bottom Right Of The Quad (Back)
  OpenGL/Demo NeHe/lesson5.py glVertex3f(-1.0, 1.0,-1.0);		# Top Right Of The Quad (Back)
  OpenGL/Demo NeHe/lesson5.py glVertex3f( 1.0, 1.0,-1.0);		# Top Left Of The Quad (Back)
  OpenGL/Demo NeHe/lesson5.py glVertex3f(-1.0, 1.0, 1.0);		# Top Right Of The Quad (Left)
  OpenGL/Demo NeHe/lesson5.py glVertex3f(-1.0, 1.0,-1.0);		# Top Left Of The Quad (Left)
  OpenGL/Demo NeHe/lesson5.py glVertex3f(-1.0,-1.0,-1.0);		# Bottom Left Of The Quad (Left)
  OpenGL/Demo NeHe/lesson5.py glVertex3f(-1.0,-1.0, 1.0);		# Bottom Right Of The Quad (Left)
  OpenGL/Demo NeHe/lesson5.py glVertex3f( 1.0, 1.0,-1.0);		# Top Right Of The Quad (Right)
  OpenGL/Demo NeHe/lesson5.py glVertex3f( 1.0, 1.0, 1.0);		# Top Left Of The Quad (Right)
  OpenGL/Demo NeHe/lesson5.py glVertex3f( 1.0,-1.0, 1.0);		# Bottom Left Of The Quad (Right)
  OpenGL/Demo NeHe/lesson5.py glVertex3f( 1.0,-1.0,-1.0);		# Bottom Right Of The Quad (Right)
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 0.0); glVertex3f(-1.0, -1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 0.0); glVertex3f( 1.0, -1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 1.0); glVertex3f( 1.0,  1.0,  1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 1.0); glVertex3f(-1.0,  1.0,  1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 0.0); glVertex3f(-1.0, -1.0, -1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 1.0); glVertex3f(-1.0,  1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 1.0); glVertex3f( 1.0,  1.0, -1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 0.0); glVertex3f( 1.0, -1.0, -1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 0.0); glVertex3f(-1.0,  1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 0.0); glVertex3f( 1.0,  1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 1.0); glVertex3f(-1.0, -1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 1.0); glVertex3f( 1.0, -1.0, -1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 0.0); glVertex3f( 1.0, -1.0, -1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 1.0); glVertex3f( 1.0,  1.0,  1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 0.0); glVertex3f(-1.0, -1.0, -1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 0.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 1.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 1.0, 1.0); glVertex3f(-1.0,  1.0,  1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6-multi.py glMultiTexCoord2fARB(GL_TEXTURE0_ARB, 0.0, 1.0); glMultiTexCoord2fARB(GL_TEXTURE1_ARB, 0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0, -1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0, -1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0,  1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0,  1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0, -1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0,  1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0,  1.0, -1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0, -1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0,  1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0,  1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0, -1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0, -1.0, -1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(1.0, 0.0); glVertex3f( 1.0, -1.0, -1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(1.0, 1.0); glVertex3f( 1.0,  1.0, -1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(0.0, 1.0); glVertex3f( 1.0,  1.0,  1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(0.0, 0.0); glVertex3f( 1.0, -1.0,  1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(0.0, 0.0); glVertex3f(-1.0, -1.0, -1.0)	# Bottom Left Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(1.0, 0.0); glVertex3f(-1.0, -1.0,  1.0)	# Bottom Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(1.0, 1.0); glVertex3f(-1.0,  1.0,  1.0)	# Top Right Of The Texture and Quad
  OpenGL/Demo NeHe/lesson6.py glTexCoord2f(0.0, 1.0); glVertex3f(-1.0,  1.0, -1.0)	# Top Left Of The Texture and Quad
  OpenGL/Demo redbook/hello.py glVertex3f (0.25, 0.25, 0.0)
  OpenGL/Demo redbook/hello.py glVertex3f (0.75, 0.25, 0.0)
  OpenGL/Demo redbook/hello.py glVertex3f (0.75, 0.75, 0.0)
  OpenGL/Demo redbook/hello.py glVertex3f (0.25, 0.75, 0.0)
  OpenGL/Demo tom/logo.py v = glVertex3f
  OpenGL/Demo tom/lorentz.py glVertex3f(x, y, z)
  OpenGL/Demo tom/lorentz.py glVertex3f(x, y, z)
  (LGPL) VisionEgg src/Dots.py gl.glVertex3f(xs[i],ys[i],zs[i])
  (LGPL) VisionEgg src/Gratings.py gl.glVertex3f(l,b,depth)
  (LGPL) VisionEgg src/Gratings.py gl.glVertex3f(r,b,depth)
  (LGPL) VisionEgg src/Gratings.py gl.glVertex3f(r,t,depth)
  (LGPL) VisionEgg src/Gratings.py gl.glVertex3f(l,t,depth)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glVertex3f(-w,-h, 0.0);
  (LGPL) VisionEgg src/MoreStimuli.py gl.glVertex3f( w,-h, 0.0);
  (LGPL) VisionEgg src/MoreStimuli.py gl.glVertex3f( w, h, 0.0);
  (LGPL) VisionEgg src/MoreStimuli.py gl.glVertex3f(-w, h, 0.0);
  (LGPL) VisionEgg src/MoreStimuli.py gl.glVertex3f(-w,-h, 0.0);
  (LGPL) VisionEgg src/MoreStimuli.py gl.glVertex3f( w,-h, 0.0);
  (LGPL) VisionEgg src/MoreStimuli.py gl.glVertex3f( w, h, 0.0);
  (LGPL) VisionEgg src/MoreStimuli.py gl.glVertex3f(-w, h, 0.0);
  (LGPL) VisionEgg src/SphereMap.py gl.glVertex3f(x_start_upper, y_upper, z_start_upper)
  (LGPL) VisionEgg src/SphereMap.py gl.glVertex3f(x_stop_upper, y_upper, z_stop_upper)
  (LGPL) VisionEgg src/SphereMap.py gl.glVertex3f(x_stop_lower, y_lower, z_stop_lower)
  (LGPL) VisionEgg src/SphereMap.py gl.glVertex3f(x_start_lower, y_lower, z_start_lower)
  (LGPL) VisionEgg src/SphereMap.py gl.glVertex3f(x_start_upper, y_upper, z_start_upper)
  (LGPL) VisionEgg src/SphereMap.py gl.glVertex3f(x_stop_upper, y_upper, z_stop_upper)
  (LGPL) VisionEgg src/SphereMap.py gl.glVertex3f(x_stop_lower, y_lower, z_stop_lower)
  (LGPL) VisionEgg src/SphereMap.py gl.glVertex3f(x_start_lower, y_lower, z_start_lower)
  (LGPL) VisionEgg src/SphereMap.py gl.glVertex3f(x_start_upper, y_upper, z_start_upper)
  (LGPL) VisionEgg src/SphereMap.py gl.glVertex3f(x_stop_upper, y_upper, z_stop_upper)
  (LGPL) VisionEgg src/SphereMap.py gl.glVertex3f(x_stop_lower, y_lower, z_stop_lower)
  (LGPL) VisionEgg src/SphereMap.py gl.glVertex3f(x_start_lower, y_lower, z_start_lower)
  (LGPL) VisionEgg src/SphereMap.py gl.glVertex3f(x_start_upper, y_upper, z_start_upper)
  (LGPL) VisionEgg src/SphereMap.py gl.glVertex3f(x_stop_upper, y_upper, z_stop_upper)
  (LGPL) VisionEgg src/SphereMap.py gl.glVertex3f(x_stop_lower, y_lower, z_stop_lower)
  (LGPL) VisionEgg src/SphereMap.py gl.glVertex3f(x_start_lower, y_lower, z_start_lower)
  (LGPL) VisionEgg src/Textures.py gl.glVertex3f(le,be,depth)
  (LGPL) VisionEgg src/Textures.py gl.glVertex3f(re,be,depth)
  (LGPL) VisionEgg src/Textures.py gl.glVertex3f(re,te,depth)
  (LGPL) VisionEgg src/Textures.py gl.glVertex3f(le,te,depth)
glVertex3fv
  OpenGL/Demo dek/OglSurface/triangle.py glVertex3fv(vert1)
  OpenGL/Demo dek/OglSurface/triangle.py glVertex3fv(vert2)
  OpenGL/Demo dek/OglSurface/triangle.py glVertex3fv(vert3)
  (LGPL) VisionEgg src/MoreStimuli.py gl.glVertex3fv(p.vertex1);
  (LGPL) VisionEgg src/MoreStimuli.py gl.glVertex3fv(p.vertex2);
  (LGPL) VisionEgg src/MoreStimuli.py gl.glVertex3fv(p.vertex3);
  (LGPL) VisionEgg src/MoreStimuli.py gl.glVertex3fv(p.vertex4);
  (LGPL) VisionEgg src/Textures.py gl.glVertex3fv(p.lowerleft)
  (LGPL) VisionEgg src/Textures.py gl.glVertex3fv(p.lowerright)
  (LGPL) VisionEgg src/Textures.py gl.glVertex3fv(p.upperright)
  (LGPL) VisionEgg src/Textures.py gl.glVertex3fv(p.upperleft)
glVertex4dv
  OpenGLContext shadow/volume.py glVertex4dv( A )
  OpenGLContext shadow/volume.py glVertex4dv( B )
glVertex4f
  (LGPL) VisionEgg src/Textures.py gl.glVertex4f( x1, -h, z1, 1.0 )
  (LGPL) VisionEgg src/Textures.py gl.glVertex4f( x2, -h, z2, 1.0 )
  (LGPL) VisionEgg src/Textures.py gl.glVertex4f( x2,  h, z2, 1.0 )
  (LGPL) VisionEgg src/Textures.py gl.glVertex4f( x1,  h, z1, 1.0 )
glVertexPointer
  OpenGLContext tests/gldrawarrays_string.py glVertexPointer(3, GL_DOUBLE, 0, flower_geometry.points_expanded.tostring() );
  OpenGLContext tests/gldrawelements_base.py glVertexPointer( len(points)+3,GL_FLOAT, 0, points)
glVertexPointerd
  OpenGLContext shadow/volume.py glVertexPointerd( self.edgeSet.points )
  OpenGLContext shadow/volume.py glVertexPointerd(self.backwardPoints )
  OpenGLContext shadow/volume.py glVertexPointerd(self.edges )
  OpenGLContext tests/glarrayelement.py glVertexPointerd( flower_geometry.points_expanded )
  OpenGLContext tests/gldrawarrays.py glVertexPointerd(flower_geometry.points_expanded )
  OpenGLContext tests/gldrawelements.py glVertexPointerd( flower_geometry.points )
  OpenGLContext scenegraph/arraygeometry.py glVertexPointerd(self.vertices)
  OpenGLContext scenegraph/indexedpolygons.py glVertexPointerd( coord )
  OpenGLContext scenegraph/spherebackground.py glVertexPointerd(vertices)
  OpenGLContext scenegraph/pointset.py glVertexPointerd(points)
  OpenGL/Demo da/dots.py glVertexPointerd(v)
  OpenGL/Demo suite/items/da/dots.py glVertexPointerd(v)
  OpenGL/Demo tom/arraytest.py glVertexPointerd(vertex)
  OpenGL/Demo tom/poly.py glVertexPointerd(vertices)
  SciPy/kiva glcore2d.py glVertexPointerd( pts )
  SciPy/kiva glcore2d.py glVertexPointerd( pts )
glViewport
  OpenGLContext context.py glViewport( 0,0, width, height )
  OpenGL/Demo da/dots.py glViewport(0, 0, w, h)
  OpenGL/Demo NeHe/lesson1.py glViewport(0, 0, Width, Height)		# Reset The Current Viewport And Perspective Transformation
  OpenGL/Demo NeHe/lesson18.py glViewport(0, 0, Width, Height)		# Reset The Current Viewport And Perspective Transformation
  OpenGL/Demo NeHe/lesson2.py glViewport(0, 0, Width, Height)		# Reset The Current Viewport And Perspective Transformation
  OpenGL/Demo NeHe/lesson3.py glViewport(0, 0, Width, Height)		# Reset The Current Viewport And Perspective Transformation
  OpenGL/Demo NeHe/lesson4.py glViewport(0, 0, Width, Height)		# Reset The Current Viewport And Perspective Transformation
  OpenGL/Demo NeHe/lesson5.py glViewport(0, 0, Width, Height)		# Reset The Current Viewport And Perspective Transformation
  OpenGL/Demo NeHe/lesson6-multi.py glViewport(0, 0, Width, Height)		# Reset The Current Viewport And Perspective Transformation
  OpenGL/Demo NeHe/lesson6.py glViewport(0, 0, Width, Height)		# Reset The Current Viewport And Perspective Transformation
  OpenGL/Demo redbook/cube.py glViewport (0, 0, w, h)
  OpenGL/Demo redbook/double.py glViewport(0, 0, w, h)
  OpenGL/Demo redbook/drawf.py glViewport(0, 0, w, h)
  OpenGL/Demo redbook/fog.py glViewport(0, 0, w, h)
  OpenGL/Demo redbook/lines.py glViewport(0, 0, w, h)
  OpenGL/Demo redbook/movelight.py glViewport (0, 0, w, h)
  OpenGL/Demo redbook/scene.py glViewport(0, 0, w, h)
  OpenGL/Demo redbook/smooth.py glViewport(0, 0, w, h)
  OpenGL/Demo redbook/teapots.py glViewport(0, 0, w, h)
  OpenGL/Demo simple/GLE.py glViewport(0, 0, width, height)
  OpenGL/Demo suite/GLUT.py glViewport(0, 0, width, height)
  OpenGL/Demo twburton/knot.py glViewport(0, 0, width, height)
  SciPy/kiva tests/test_glcore2d.py glViewport( 0, 0, w, h )
  (LGPL) PyUI pyui/renderers/openglGlut.py glViewport(0, 0, Width, Height)
  (LGPL) VisionEgg src/Core.py gl.glViewport(self.parameters.lowerleft[0],
gl_ary
  SciPy/kiva agg/graphics_context.py gl_ary = glyphs[gly:ghy,glx:ghx]
  SciPy/kiva agg/graphics_context.py alpha_ary = gl_ary * color_alpha * draw_alpha
gl_assumptions
  (LGPL) VisionEgg src/Core.py gl_assumptions = []
  (LGPL) VisionEgg src/Core.py gl_assumptions.append((gl_variable,required_value,failure_callback))
  (LGPL) VisionEgg src/Core.py for gl_variable,required_value,failure_callback in gl_assumptions:
gl_bits
  SciPy/kiva glcore2d.py gl_bits = bigbits[:: int( n ) ]  # TBD: HACK take every nth sample.
  SciPy/kiva glcore2d.py assert(len(gl_bits)==16)
  SciPy/kiva glcore2d.py gl_pattern  += gl_bits[k]
gl_constants
  (LGPL) VisionEgg src/GLTrace.py gl_constants = {}
  (LGPL) VisionEgg src/GLTrace.py if arg in gl_constants.keys():
  (LGPL) VisionEgg src/GLTrace.py return gl_constants[arg]
  (LGPL) VisionEgg src/GLTrace.py gl_constants[getattr(gl,attr)] = attr
gl_ctm
  SciPy/kiva glcore2d.py if  DEBUG: print "ctm prepared", self.gl_ctm();
  SciPy/kiva glcore2d.py if DEBUG: print 'after translate', self.gl_ctm(),'\n'
  SciPy/kiva glcore2d.py if DEBUG: print 'after load', self.gl_ctm(),'\n'
  SciPy/kiva glcore2d.py def gl_ctm ( self ):
gl_extra_link_args
  (LGPL) VisionEgg setup.py gl_extra_link_args = ['-framework','OpenGL']
  (LGPL) VisionEgg setup.py gl_extra_link_args = []
  (LGPL) VisionEgg setup.py extra_link_args=gl_extra_link_args
  (LGPL) VisionEgg setup.py extra_link_args=gl_extra_link_args
gl_get_attribute
  (LGPL) VisionEgg src/Core.py self.red_bits = pygame.display.gl_get_attribute(pygame.locals.GL_RED_SIZE)
  (LGPL) VisionEgg src/Core.py self.green_bits = pygame.display.gl_get_attribute(pygame.locals.GL_GREEN_SIZE)
  (LGPL) VisionEgg src/Core.py self.blue_bits = pygame.display.gl_get_attribute(pygame.locals.GL_BLUE_SIZE)
  (LGPL) VisionEgg src/Core.py self.alpha_bits = pygame.display.gl_get_attribute(pygame.locals.GL_ALPHA_SIZE)
gl_id
  (LGPL) VisionEgg src/Lib3DS.py tex_dict[filename] = texture.texture_object.gl_id # keep the GL texture object id
  (LGPL) VisionEgg src/Textures.py self.gl_id = gl.glGenTextures(1)
  (LGPL) VisionEgg src/Textures.py self.gl_module.glDeleteTextures(self.gl_id)
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture(self.target, self.gl_id)
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture( self.target, self.gl_id)
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture( self.target, self.gl_id)
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture( self.target, self.gl_id)
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture( self.target, self.gl_id)
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture( self.target, self.gl_id)
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture(self.target, self.gl_id)
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture(self.target, self.gl_id)
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture(self.target, self.gl_id)
  (LGPL) VisionEgg src/Textures.py gl.glBindTexture(gl.GL_TEXTURE_2D, self.texture_object.gl_id)
gl_internal_format
  (LGPL) VisionEgg src/Gratings.py self.gl_internal_format = gl.GL_LUMINANCE
  (LGPL) VisionEgg src/Gratings.py self.gl_internal_format = gl.GL_LUMINANCE
  (LGPL) VisionEgg src/Gratings.py self.gl_internal_format = gl.GL_LUMINANCE
  (LGPL) VisionEgg src/Gratings.py self.gl_internal_format = gl.GL_ALPHA
  (LGPL) VisionEgg src/Gratings.py self.gl_internal_format = gl.GL_ALPHA
  (LGPL) VisionEgg src/Gratings.py self.gl_internal_format = gl.GL_ALPHA
  (LGPL) VisionEgg src/Gratings.py self.gl_internal_format,           # video RAM internal format: RGB
  (LGPL) VisionEgg src/Gratings.py self.gl_internal_format,           # video RAM internal format: RGB
  (LGPL) VisionEgg src/SphereMap.py self.gl_internal_format, # video RAM internal format: RGB
  (LGPL) VisionEgg src/SphereMap.py self.gl_internal_format, # video RAM internal format: RGB
  (LGPL) VisionEgg src/SphereMap.py self.gl_internal_format = gl.GL_ALPHA # change from luminance to alpha
  (LGPL) VisionEgg src/SphereMap.py self.gl_internal_format,        # video RAM internal format
  (LGPL) VisionEgg src/SphereMap.py self.gl_internal_format,        # video RAM internal format
  (LGPL) VisionEgg src/SphereMap.py self.gl_internal_format = gl.GL_ALPHA # change from luminance to alpha
gl_libraries
  (LGPL) VisionEgg setup.py gl_libraries = ['opengl32']
  (LGPL) VisionEgg setup.py gl_libraries = ['GL']
  (LGPL) VisionEgg setup.py gl_libraries = []
  (LGPL) VisionEgg setup.py libraries=gl_libraries,
  (LGPL) VisionEgg setup.py libraries=gl_libraries,
gl_module
  (LGPL) VisionEgg src/Textures.py self.gl_module = gl # keep so we there's no error in __del__
  (LGPL) VisionEgg src/Textures.py self.gl_module.glDeleteTextures(self.gl_id)
gl_pattern
  SciPy/kiva glcore2d.py gl_pattern = 0
  SciPy/kiva glcore2d.py gl_pattern <<= 1
  SciPy/kiva glcore2d.py gl_pattern  += gl_bits[k]
  SciPy/kiva glcore2d.py return ( factor, gl_pattern )
gl_render_points
  SciPy/kiva glcore2d.py self.gl_render_points( pts, self.state.fill_color,
  SciPy/kiva glcore2d.py self.gl_render_points( pts, self.state.line_color,
  SciPy/kiva glcore2d.py self.gl_render_points( pts, self.state.line_color,
  SciPy/kiva glcore2d.py self.gl_render_points( pts, self.state.fill_color, # Fill
  SciPy/kiva glcore2d.py self.gl_render_points( pts, self.state. line_color, # Outline
  SciPy/kiva glcore2d.py def gl_render_points ( self, pts, color, polygon = 0, fill = 0, mode = FILL,
gl_render_points_set
  SciPy/kiva glcore2d.py def gl_render_points_set( self, pts_set, fill_color, stroke_color,
  SciPy/kiva tests/test_glcore2d.py gc.gl_render_points_set( all_pts, [ 0, 1, 0, 1 ], [ 0, 0, 0, 1 ],
gl_set_attribute
  (LGPL) VisionEgg src/Core.py pygame.display.gl_set_attribute(pygame.locals.GL_RED_SIZE,r)
  (LGPL) VisionEgg src/Core.py pygame.display.gl_set_attribute(pygame.locals.GL_GREEN_SIZE,g)
  (LGPL) VisionEgg src/Core.py pygame.display.gl_set_attribute(pygame.locals.GL_BLUE_SIZE,b)
  (LGPL) VisionEgg src/Core.py pygame.display.gl_set_attribute(pygame.locals.GL_ALPHA_SIZE,a)
gl_tesselate_polygon
  SciPy/kiva glcore2d.py self.gl_tesselate_polygon( pts, mode )
  SciPy/kiva glcore2d.py def gl_tesselate_polygon ( self, pts, mode ):
gl_type
  (LGPL) VisionEgg src/Gratings.py self.gl_type = gl.GL_UNSIGNED_BYTE
  (LGPL) VisionEgg src/Gratings.py self.gl_type = gl.GL_SHORT
  (LGPL) VisionEgg src/Gratings.py self.gl_type = gl.GL_INT
  (LGPL) VisionEgg src/Gratings.py self.gl_type = gl.GL_UNSIGNED_BYTE
  (LGPL) VisionEgg src/Gratings.py self.gl_type = gl.GL_SHORT
  (LGPL) VisionEgg src/Gratings.py self.gl_type = gl.GL_INT
  (LGPL) VisionEgg src/Gratings.py self.gl_type,                      # type of texel data
  (LGPL) VisionEgg src/Gratings.py self.gl_type,                      # type of texel data
  (LGPL) VisionEgg src/Gratings.py self.gl_type,     # type of new texel data
  (LGPL) VisionEgg src/SphereMap.py self.gl_type,            # type of image data
  (LGPL) VisionEgg src/SphereMap.py self.gl_type,            # type of image data
  (LGPL) VisionEgg src/SphereMap.py self.gl_type,                  # data type
  (LGPL) VisionEgg src/SphereMap.py self.gl_type,                   # type of image data
  (LGPL) VisionEgg src/SphereMap.py self.gl_type,                   # type of image data
gl_variable
  (LGPL) VisionEgg src/Core.py def add_gl_assumption(gl_variable,required_value,failure_callback):
  (LGPL) VisionEgg src/Core.py gl_assumptions.append((gl_variable,required_value,failure_callback))
  (LGPL) VisionEgg src/Core.py for gl_variable,required_value,failure_callback in gl_assumptions:
  (LGPL) VisionEgg src/Core.py if gl_variable == "__SPECIAL__":
  (LGPL) VisionEgg src/Core.py raise RuntimeError("Unknown gl_assumption: %s == %s"%(gl_variable,required_value))
  (LGPL) VisionEgg src/Core.py elif string.upper(gl_variable) == "GL_VERSION":
glcanvas
  OpenGLContext fxcontext.py self.glcanvas = FXGLCanvas(self,self.glvisual,self,self.ID_CANVAS,LAYOUT_FILL_X|LAYOUT_FILL_Y|LAYOUT_TOP|LAYOUT_LEFT)
  OpenGLContext fxcontext.py self.glcanvas.makeCurrent()
  OpenGLContext fxcontext.py self.glcanvas.makeNonCurrent()
  OpenGLContext fxcontext.py if self.glvisual.isDoubleBuffer(): self.glcanvas.swapBuffers()
  OpenGLContext fxcontext.py self.ViewPort( self.glcanvas.getWidth(),self.glcanvas.getHeight() )
  OpenGLContext fxcontext.py self.ViewPort( self.glcanvas.getWidth(),self.glcanvas.getHeight() )
  OpenGLContext wxcontext.py from wxPython.glcanvas import *
glcore2d
  SciPy/kiva tests/test_glcore2d.py from glcore2d    import GraphicsContext
gldoc
  OpenGLContext pydoc/builddocs.py import gldoc, pydoc2
  OpenGLContext pydoc/builddocs.py formatter = gldoc.GLFormatter(),
gleExtrusion
  OpenGL/Demo GLE/texas.py gleExtrusion(texas_xsection, texas_normal, None, tspine, tcolors)
  OpenGL/Demo GLE/texas.py gleExtrusion(texas_xsection, texas_normal, None, brand_points, brand_colors)
gleHelicoid
  OpenGL/Demo GLE/helix.py gleHelicoid (1.0, 6.0, 2.0, -3.0, 4.0, None, None, 0.0, 1080.0)
  OpenGL/Demo simple/GLE.py gleHelicoid(1.0, 6.0, 2.0, -3.0, 4.0, None, None, 0.0, 1080.0)
  OpenGL/Demo suite/items/GLE/helix.py gleHelicoid(1.0, 6.0, 2.0, -3.0, 4.0, None, None, 0.0, 1080.0)
gleLathe
  OpenGLContext scenegraph/extrusions.py gleLathe(
glePolyCone
  OpenGL/Demo GLE/cone.py glePolyCone(((-6.0, 6.0, 0.0), (6.0, 6.0, 0.0), (6.0, -6.0, 0.0), (-6.0, -6.0, 0.0), (-6.0, 6.0, 0.0), (6.0, 6.0, 0.0)),
  OpenGL/Demo suite/items/GLE/cone.py glePolyCone(((-6.0, 6.0, 0.0),
glePolyCylinder
  OpenGL/Demo twburton/knot.py glePolyCylinder(loop, None, self.radius/15.0)
gleScrew
  OpenGLContext scenegraph/extrusions.py gleScrew(
gleSetJoinStyle
  OpenGL/Demo GLE/cone.py gleSetJoinStyle (TUBE_NORM_EDGE | TUBE_JN_ANGLE | TUBE_JN_CAP)
  OpenGL/Demo GLE/helix.py gleSetJoinStyle (TUBE_NORM_EDGE | TUBE_JN_ANGLE | TUBE_JN_CAP)
  OpenGL/Demo GLE/texas.py gleSetJoinStyle(TUBE_NORM_FACET | TUBE_JN_ANGLE | TUBE_CONTOUR_CLOSED | TUBE_JN_CAP)
  OpenGL/Demo simple/GLE.py gleSetJoinStyle(TUBE_NORM_EDGE | TUBE_JN_ANGLE | TUBE_JN_CAP)
  OpenGL/Demo suite/items/GLE/cone.py gleSetJoinStyle(TUBE_NORM_EDGE | TUBE_JN_ANGLE | TUBE_JN_CAP)
  OpenGL/Demo suite/items/GLE/helix.py gleSetJoinStyle(TUBE_NORM_EDGE | TUBE_JN_ANGLE | TUBE_JN_CAP)
  OpenGL/Demo twburton/knot.py gleSetJoinStyle(TUBE_JN_ANGLE | TUBE_CONTOUR_CLOSED | TUBE_NORM_PATH_EDGE )# | TUBE_NORM_FACET)
gleSetNumSides
  OpenGLContext scenegraph/extrusions.py gleSetNumSides(self.sides)
  OpenGL/Demo twburton/knot.py gleSetNumSides(50)
gleSpiral
  OpenGLContext scenegraph/extrusions.py gleSpiral(
gleTextureMode
  OpenGLContext scenegraph/extrusions.py gleTextureMode( mode | table )
gleft
  SciPy/kiva agg/graphics_context.py gleft = tx
  SciPy/kiva agg/graphics_context.py gright = gleft + gw
  SciPy/kiva agg/graphics_context.py left = max(gleft,bleft)
  SciPy/kiva agg/graphics_context.py glx = int(left - gleft)
glm
  SciPy/kiva glcore2d.py glm = glGetDouble( GL_MODELVIEW_MATRIX )
  SciPy/kiva glcore2d.py a   = glm[0,0];  d = glm[1,1]      # x, y diagonal elements
  SciPy/kiva glcore2d.py a   = glm[0,0];  d = glm[1,1]      # x, y diagonal elements
  SciPy/kiva glcore2d.py b   = glm[1,0];  c = glm[0,1]      # x, y rotation
  SciPy/kiva glcore2d.py b   = glm[1,0];  c = glm[0,1]      # x, y rotation
  SciPy/kiva glcore2d.py tx  = glm[0,3]; ty = glm[1,3]      # x, y translation
  SciPy/kiva glcore2d.py tx  = glm[0,3]; ty = glm[1,3]      # x, y translation
  SciPy/kiva glcore2d.py glm = self.affine_to_gl( args[0] )
  SciPy/kiva glcore2d.py glMultMatrixf( glm )
  SciPy/kiva glcore2d.py glm = self.affine_to_gl( args[0] )
  SciPy/kiva glcore2d.py glLoadMatrixf( glm )
  SciPy/kiva glcore2d.py glm = zeros( (4,4), Float32 )
  SciPy/kiva glcore2d.py glm[0,0] = a;  glm[0,1] = b
  SciPy/kiva glcore2d.py glm[0,0] = a;  glm[0,1] = b
  SciPy/kiva glcore2d.py glm[1,0] = c;  glm[1,1] = d
  SciPy/kiva glcore2d.py glm[1,0] = c;  glm[1,1] = d
  SciPy/kiva glcore2d.py glm[3,0] = tx; glm[3,1] = ty      # x, y translation
  SciPy/kiva glcore2d.py glm[3,0] = tx; glm[3,1] = ty      # x, y translation
  SciPy/kiva glcore2d.py glm[2,2] = 1;  glm[3,3] = 1       # z, w diagonal elements
  SciPy/kiva glcore2d.py glm[2,2] = 1;  glm[3,3] = 1       # z, w diagonal elements
  SciPy/kiva glcore2d.py return glm
glob
  OpenGLContext pydoc/find_gldoc.py import os, string, sys, glob, operator
  SciPy/kiva pdfmetrics.py import glob
  SciPy/kiva pdfmetrics.py possibles = glob.glob(dirname + os.sep + '*.[aA][fF][mM]')
  SciPy/kiva pdfmetrics.py possibles = glob.glob(dirname + os.sep + '*.[aA][fF][mM]')
  SciPy/kiva agg/src/agg_info.py from glob import glob
  SciPy/kiva agg/src/agg_info.py from glob import glob
  SciPy/kiva agg/src/agg_info.py agg_build_info['sources'] = glob(os.path.join(agg_path,'src','*.cpp'))
  (LGPL) VisionEgg build-win-exe-demos.py import string, os, glob, shutil, sys, fnmatch, tempfile, re
  (LGPL) VisionEgg setup.py import sys, os.path, glob, traceback
  (LGPL) VisionEgg setup.py lib3ds_sources = glob.glob(os.path.join('lib3ds','*.c'))
  (LGPL) VisionEgg setup.py lib3ds_sources = glob.glob(os.path.join('lib3ds','*.c'))
  (GPL) VisionEgg make-dist.py import sys, os, glob
  (GPL) VisionEgg make-dist.py for demo_app in glob.glob('*.py'):
  (GPL) VisionEgg make-dist.py for demo_app in glob.glob('*.py'):
globals
  OpenGL/Demo suite/items/__init__.py items[name] = getattr(__import__(string.join(submodule + [name], '.'), globals(), locals(), ['item']), 'item')
  SciPy/kiva core2d.py mod = __import__(name, globals(), locals(), [])
  SciPy/kiva core2d.py globals()[key] = mod.__dict__[key]
  (LGPL) PyUI pyui/dialogs.py exec command in globals(), self.locals
  (LGPL) VisionEgg check-config.py if 'VisionEgg' in globals().keys():
  (LGPL) VisionEgg src/Configuration.py if extra_name in globals().keys():
  (LGPL) VisionEgg src/Configuration.py extra_defaults = globals()[extra_name]
  (LGPL) VisionEgg src/DaqLPT.py if not 'raw_lpt_module' in globals().keys():
  (LGPL) VisionEgg src/DaqLPT.py if not 'raw_lpt_module' in globals().keys():
  (LGPL) VisionEgg src/DaqLPT.py if not 'raw_lpt_module' in globals().keys():
  (LGPL) VisionEgg src/DaqLPT.py if not 'raw_lpt_module' in globals().keys():
  (LGPL) VisionEgg src/TCPController.py if not globals().has_key("Tkinter") or (VisionEgg.config.VISIONEGG_TKINTER_OK==0):
  (LGPL) VisionEgg swig_src/make.py if 'commands' in globals().keys():
  (LGPL) VisionEgg swig_src/make.py if 'commands' in globals().keys():
  (LGPL) VisionEgg test/opengl_info.py mod = __import__(module_name,globals(),locals(),[])
  (LGPL) VisionEgg test/opengl_info.py mod = __import__(module_name,globals(),locals(),[])
gluBeginSurface
  OpenGLContext tests/redbook_surface.py gluBeginSurface(self.theNurb);
  OpenGLContext tests/redbook_trim.py gluBeginSurface(self.theNurb);
  OpenGLContext tests/redbook_surface_cb.py gluBeginSurface(self.theNurb);
  OpenGLContext scenegraph/nurbs.py gluBeginSurface( nurbObject );
  OpenGLContext scenegraph/nurbs.py gluBeginSurface( nurbObject );
  OpenGL/Demo GLUT/examples/molehill.py gluBeginSurface(nurb)
  OpenGL/Demo GLUT/examples/molehill.py gluBeginSurface(nurb)
  OpenGL/Demo GLUT/examples/molehill.py gluBeginSurface(nurb)
  OpenGL/Demo GLUT/examples/molehill.py gluBeginSurface(nurb)
gluBeginTrim
  OpenGLContext tests/redbook_trim.py gluBeginTrim (self.theNurb);
  OpenGLContext tests/redbook_trim.py gluBeginTrim (self.theNurb);
  OpenGLContext scenegraph/nurbs.py gluBeginTrim( nurbObject )
gluBuild2DMipmaps
  OpenGLContext texture.py gluBuild2DMipmaps(
  OpenGLContext tests/nehe7.py gluBuild2DMipmaps(
  OpenGLContext tests/nehe8.py gluBuild2DMipmaps(GL_TEXTURE_2D, 3, ix, iy, GL_RGBA, GL_UNSIGNED_BYTE, image)
  OpenGL/Demo NeHe/lesson18.py gluBuild2DMipmaps(GL_TEXTURE_2D, 3, ix, iy, GL_RGBA, GL_UNSIGNED_BYTE, image)
gluCylinder
  OpenGLContext scenegraph/quadrics.py gluCylinder(
  OpenGLContext scenegraph/quadrics.py gluCylinder(
  OpenGL/Demo NeHe/lesson18.py gluCylinder(quadratic,1.0,1.0,3.0,32,32)	# A Cylinder With A Radius Of 0.5 And A Height Of 2
  OpenGL/Demo NeHe/lesson18.py gluCylinder(quadratic,1.0,0.0,3.0,32,32)
gluDeleteNurbsRenderer
  OpenGLContext scenegraph/nurbs.py gluDeleteNurbsRenderer( nurbObject )
  OpenGLContext scenegraph/nurbs.py gluDeleteNurbsRenderer( nurbObject )
gluDeleteQuadric
  OpenGLContext scenegraph/quadrics.py gluDeleteQuadric( quadratic )
gluDisk
  OpenGLContext scenegraph/quadrics.py gluDisk(
  OpenGLContext scenegraph/quadrics.py gluDisk(
  OpenGLContext scenegraph/quadrics.py gluDisk(
  OpenGL/Demo NeHe/lesson18.py gluDisk(quadratic,0.5,1.5,32,32)
gluEndSurface
  OpenGLContext tests/redbook_surface.py gluEndSurface(self.theNurb);
  OpenGLContext tests/redbook_trim.py gluEndSurface(self.theNurb);
  OpenGLContext tests/redbook_surface_cb.py gluEndSurface(self.theNurb);
  OpenGLContext scenegraph/nurbs.py gluEndSurface( nurbObject );
  OpenGLContext scenegraph/nurbs.py gluEndSurface( nurbObject );
  OpenGL/Demo GLUT/examples/molehill.py gluEndSurface(nurb)
  OpenGL/Demo GLUT/examples/molehill.py gluEndSurface(nurb)
  OpenGL/Demo GLUT/examples/molehill.py gluEndSurface(nurb)
  OpenGL/Demo GLUT/examples/molehill.py gluEndSurface(nurb)
gluEndTrim
  OpenGLContext tests/redbook_trim.py gluEndTrim (self.theNurb);
  OpenGLContext tests/redbook_trim.py gluEndTrim (self.theNurb);
  OpenGLContext scenegraph/nurbs.py gluEndTrim( nurbObject )
gluInitNurbsTessellatorEXT
  OpenGLContext tests/redbook_surface_cb.py result = nurbs_tessellator.gluInitNurbsTessellatorEXT()
gluInitObjectSpaceTessEXT
  OpenGLContext scenegraph/nurbs.py success = object_space_tess.gluInitObjectSpaceTessEXT()
gluLookAt
  OpenGL/Demo redbook/cube.py gluLookAt (0.0, 0.0, 5.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)
  OpenGL/Demo redbook/movelight.py gluLookAt (0.0, 0.0, 5.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)
gluNewNurbsRenderer
  OpenGLContext tests/redbook_surface.py self.theNurb = gluNewNurbsRenderer();
  OpenGLContext tests/redbook_trim.py self.theNurb = gluNewNurbsRenderer();
  OpenGLContext tests/redbook_surface_cb.py self.theNurb = gluNewNurbsRenderer();
  OpenGLContext scenegraph/nurbs.py nurbObject = gluNewNurbsRenderer()
  OpenGLContext scenegraph/nurbs.py nurbObject = gluNewNurbsRenderer()
  OpenGL/Demo GLUT/examples/molehill.py nurb = gluNewNurbsRenderer()
gluNewQuadric
  OpenGLContext scenegraph/quadrics.py quadratic = gluNewQuadric()
  OpenGL/Demo NeHe/lesson18.py quadratic = gluNewQuadric()
gluNewTess
  OpenGLContext scenegraph/polygontessellator.py self.controller = controller = gluNewTess()
  SciPy/kiva glcore2d.py self._glu_tess = gluNewTess()
gluNurbsCallback
  OpenGLContext tests/redbook_surface_cb.py gluNurbsCallback( self.theNurb, GLU_NURBS_BEGIN, self.OnBegin )
  OpenGLContext tests/redbook_surface_cb.py gluNurbsCallback( self.theNurb, GLU_NURBS_VERTEX, self.OnVertex )
  OpenGLContext tests/redbook_surface_cb.py gluNurbsCallback( self.theNurb, GLU_NURBS_COLOR, self.OnColor )
  OpenGLContext tests/redbook_surface_cb.py gluNurbsCallback( self.theNurb, GLU_NURBS_TEXTURE_COORD, self.OnTexCoord )
  OpenGLContext tests/redbook_surface_cb.py gluNurbsCallback( self.theNurb, GLU_NURBS_END, self.OnEnd )
gluNurbsCurve
  OpenGLContext tests/redbook_trim.py gluNurbsCurve (self.theNurb, curveKnots, curvePt, GLU_MAP1_TRIM_2);
  OpenGLContext scenegraph/nurbs.py gluNurbsCurve(
  OpenGLContext scenegraph/nurbs.py gluNurbsCurve(
  OpenGLContext scenegraph/nurbs.py gluNurbsCurve(
gluNurbsProperty
  OpenGLContext tests/redbook_surface.py gluNurbsProperty(self.theNurb, GLU_SAMPLING_TOLERANCE, 25.0);
  OpenGLContext tests/redbook_surface.py gluNurbsProperty(self.theNurb, GLU_DISPLAY_MODE, GLU_FILL);
  OpenGLContext tests/redbook_trim.py gluNurbsProperty(self.theNurb, GLU_SAMPLING_TOLERANCE, 100.0);
  OpenGLContext tests/redbook_trim.py gluNurbsProperty(self.theNurb, GLU_DISPLAY_MODE, GLU_FILL);
  OpenGLContext tests/redbook_surface_cb.py gluNurbsProperty(self.theNurb, GLU_SAMPLING_TOLERANCE, 25.0);
  OpenGLContext tests/redbook_surface_cb.py gluNurbsProperty(self.theNurb, GLU_DISPLAY_MODE, GLU_FILL);
  OpenGLContext tests/redbook_surface_cb.py gluNurbsProperty( self.theNurb, nurbs_tessellator.GLU_NURBS_MODE_EXT, nurbs_tessellator.GLU_NURBS_TESSELLATOR_EXT)
  OpenGLContext scenegraph/nurbs.py gluNurbsProperty( nurbObject, GLU_DISPLAY_MODE, mode )
  OpenGLContext scenegraph/nurbs.py gluNurbsProperty( nurbObject, GLU_SAMPLING_METHOD, method )
  OpenGLContext scenegraph/nurbs.py gluNurbsProperty( nurbObject, GLU_PARAMETRIC_TOLERANCE, self.tolerance )
  OpenGLContext scenegraph/nurbs.py gluNurbsProperty( nurbObject, GLU_SAMPLING_TOLERANCE, self.tolerance )
  OpenGLContext scenegraph/nurbs.py gluNurbsProperty( nurbObject, GLU_SAMPLING_METHOD, GLU_DOMAIN_DISTANCE )
  OpenGLContext scenegraph/nurbs.py gluNurbsProperty( nurbObject, GLU_U_STEP, self.uStep)
  OpenGLContext scenegraph/nurbs.py gluNurbsProperty( nurbObject, GLU_V_STEP, self.vStep)
  OpenGL/Demo GLUT/examples/molehill.py gluNurbsProperty(nurb, GLU_SAMPLING_TOLERANCE, 5.0)
  OpenGL/Demo GLUT/examples/molehill.py gluNurbsProperty(nurb, GLU_DISPLAY_MODE, GLU_FILL)
gluNurbsSurface
  OpenGLContext tests/redbook_surface.py gluNurbsSurface(
  OpenGLContext tests/redbook_trim.py gluNurbsSurface(
  OpenGLContext tests/redbook_surface_cb.py gluNurbsSurface(
  OpenGLContext scenegraph/nurbs.py gluNurbsSurface(
  OpenGLContext scenegraph/nurbs.py gluNurbsSurface(
  OpenGL/Demo GLUT/examples/molehill.py gluNurbsSurface(nurb, knots, knots, pts1, GL_MAP2_VERTEX_3)
  OpenGL/Demo GLUT/examples/molehill.py gluNurbsSurface(nurb, knots, knots, pts2, GL_MAP2_VERTEX_3)
  OpenGL/Demo GLUT/examples/molehill.py gluNurbsSurface(nurb, knots, knots, pts3, GL_MAP2_VERTEX_3)
  OpenGL/Demo GLUT/examples/molehill.py gluNurbsSurface(nurb, knots, knots, pts4, GL_MAP2_VERTEX_3)
gluOrtho2D
  OpenGL/Demo redbook/lines.py gluOrtho2D(0.0, w, 0.0, h)
  OpenGL/Demo redbook/smooth.py gluOrtho2D(0.0, 30.0, 0.0, 30.0 * h/w)
  OpenGL/Demo redbook/smooth.py gluOrtho2D(0.0, 30.0 * w/h, 0.0, 30.0)
  SciPy/kiva glcore2d.py gluOrtho2D( 0.0, sz[0], 0.0, sz[1] )
gluPartialDisk
  OpenGL/Demo NeHe/lesson18.py gluPartialDisk(quadratic,0.5,1.5,32,32,0,300)	# A Disk Like The One Before
gluPerspective
  OpenGLContext viewplatform.py apply ( gluPerspective, self.frustum)
  OpenGL/Demo GLUT/examples/molehill.py gluPerspective(55.0, 1.0, 2.0, 24.0)
  OpenGL/Demo NeHe/lesson1.py gluPerspective(45.0, float(Width)/float(Height), 0.1, 100.0)
  OpenGL/Demo NeHe/lesson1.py gluPerspective(45.0, float(Width)/float(Height), 0.1, 100.0)
  OpenGL/Demo NeHe/lesson18.py gluPerspective(45.0, float(Width)/float(Height), 0.1, 100.0)
  OpenGL/Demo NeHe/lesson18.py gluPerspective(45.0, float(Width)/float(Height), 0.1, 100.0)
  OpenGL/Demo NeHe/lesson2.py gluPerspective(45.0, float(Width)/float(Height), 0.1, 100.0)
  OpenGL/Demo NeHe/lesson2.py gluPerspective(45.0, float(Width)/float(Height), 0.1, 100.0)
  OpenGL/Demo NeHe/lesson3.py gluPerspective(45.0, float(Width)/float(Height), 0.1, 100.0)
  OpenGL/Demo NeHe/lesson3.py gluPerspective(45.0, float(Width)/float(Height), 0.1, 100.0)
  OpenGL/Demo NeHe/lesson4.py gluPerspective(45.0, float(Width)/float(Height), 0.1, 100.0)
  OpenGL/Demo NeHe/lesson4.py gluPerspective(45.0, float(Width)/float(Height), 0.1, 100.0)
  OpenGL/Demo NeHe/lesson5.py gluPerspective(45.0, float(Width)/float(Height), 0.1, 100.0)
  OpenGL/Demo NeHe/lesson5.py gluPerspective(45.0, float(Width)/float(Height), 0.1, 100.0)
  OpenGL/Demo NeHe/lesson6-multi.py gluPerspective(45.0, float(Width)/float(Height), 0.1, 100.0)
  OpenGL/Demo NeHe/lesson6-multi.py gluPerspective(45.0, float(Width)/float(Height), 0.1, 100.0)
  OpenGL/Demo NeHe/lesson6.py gluPerspective(45.0, float(Width)/float(Height), 0.1, 100.0)
  OpenGL/Demo NeHe/lesson6.py gluPerspective(45.0, float(Width)/float(Height), 0.1, 100.0)
  OpenGL/Demo redbook/movelight.py gluPerspective(40.0, w/h, 1.0, 20.0)
  OpenGL/Demo suite/items/__init__.py gluPerspective(45.0, float(width)/float(max(1, height)), 0.1, 100.0)
  OpenGL/Demo twburton/knot.py gluPerspective(45.0, float(width)/max(float(height), 1.0), 0.1, 100.0)
  OpenGL/Demo twburton/knot.py gluPerspective(45.0, float(width)/max(float(height), 1.0), 0.1, 100.0)
  (LGPL) PyUI pyui/renderers/openglGlut.py gluPerspective(45.0, float(Width)/float(Height), 0.1, 100.0)
  (LGPL) PyUI tests/testcube.py gluPerspective(45.0,640/480.0,0.1,100.0)    #setup lens
gluPickMatrix
  OpenGLContext renderpass.py gluPickMatrix(
gluProject
  OpenGLContext renderpass.py distance = gluProject( 0,0,0, matrix, projection, viewport )[2]
  OpenGLContext scenegraph/polygonsort.py gluProject,
  OpenGLContext events/mouseevents.py viewCoordinate = gluProject(
gluPwlCurve
  OpenGLContext tests/redbook_trim.py gluPwlCurve (self.theNurb, edgePt, GLU_MAP1_TRIM_2)
  OpenGLContext tests/redbook_trim.py gluPwlCurve (self.theNurb, pwlPt, GLU_MAP1_TRIM_2);
  OpenGLContext scenegraph/nurbs.py gluPwlCurve(
gluQuadricNormals
  OpenGLContext scenegraph/quadrics.py gluQuadricNormals(quadratic, GLU_SMOOTH)
  OpenGL/Demo NeHe/lesson18.py gluQuadricNormals(quadratic, GLU_SMOOTH)		# Create Smooth Normals (NEW)
gluQuadricTexture
  OpenGLContext scenegraph/quadrics.py gluQuadricTexture(quadratic, GL_TRUE)
  OpenGL/Demo NeHe/lesson18.py gluQuadricTexture(quadratic, GL_TRUE)			# Create Texture Coords (NEW)
gluSphere
  OpenGLContext scenegraph/quadrics.py gluSphere(
  OpenGL/Demo NeHe/lesson18.py gluSphere(quadratic,1.3,32,32) # Draw A Sphere With A Radius Of 1 And 16 Longitude And 16 Latitude Segments
gluTessBeginContour
  OpenGLContext scenegraph/polygontessellator.py gluTessBeginContour( controller )
  SciPy/kiva glcore2d.py gluTessBeginContour( self._glu_tess )
gluTessBeginPolygon
  OpenGLContext scenegraph/polygontessellator.py gluTessBeginPolygon( controller, self )
  SciPy/kiva glcore2d.py gluTessBeginPolygon( self._glu_tess, None )
gluTessCallback
  OpenGLContext scenegraph/polygontessellator.py gluTessCallback( controller, GLU_TESS_COMBINE, self.combine )
  OpenGLContext scenegraph/polygontessellator.py gluTessCallback( controller, GLU_TESS_VERTEX, self.vertex )
  OpenGLContext scenegraph/polygontessellator.py gluTessCallback( controller, GLU_TESS_BEGIN, self.begin )
  OpenGLContext scenegraph/polygontessellator.py gluTessCallback( controller, GLU_TESS_END, self.end )
  SciPy/kiva glcore2d.py gluTessCallback( self._glu_tess, GLU_TESS_BEGIN,  glBegin )
  SciPy/kiva glcore2d.py gluTessCallback( self._glu_tess, GLU_TESS_END,    glEnd )
  SciPy/kiva glcore2d.py gluTessCallback( self._glu_tess, GLU_TESS_VERTEX, myvertex )
  SciPy/kiva glcore2d.py gluTessCallback( self._glu_tess, GLU_TESS_COMBINE, mycombine )
gluTessEndContour
  OpenGLContext scenegraph/polygontessellator.py gluTessEndContour( controller )
  SciPy/kiva glcore2d.py gluTessEndContour( self._glu_tess )
gluTessEndPolygon
  OpenGLContext scenegraph/polygontessellator.py gluTessEndPolygon ( controller )
  SciPy/kiva glcore2d.py gluTessEndPolygon( self._glu_tess )
gluTessNormal
  SciPy/kiva glcore2d.py gluTessNormal( self._glu_tess, 0, 0, 1 )
gluTessProperty
  SciPy/kiva glcore2d.py gluTessProperty( self._glu_tess, GLU_TESS_WINDING_RULE,
  SciPy/kiva glcore2d.py gluTessProperty( self._glu_tess, GLU_TESS_WINDING_RULE,
  SciPy/kiva glcore2d.py gluTessProperty( self._glu_tess, GLU_TESS_BOUNDARY_ONLY, GL_FALSE )
gluTessVertex
  OpenGLContext scenegraph/polygontessellator.py gluTessVertex
  OpenGLContext scenegraph/polygontessellator.py gluTessVertex = GLU._gluTessVertex
  OpenGLContext scenegraph/polygontessellator.py gluTessVertex(
  SciPy/kiva glcore2d.py gluTessVertex( self._glu_tess, thispt, thispt )
gluUnProject
  OpenGLContext events/mouseevents.py worldCoordinate = gluUnProject(
glut
  (LGPL) VisionEgg src/Text.py glut = OpenGL.GLUT
  (LGPL) VisionEgg src/Text.py 'font':(glut.GLUT_BITMAP_TIMES_ROMAN_24,
  (LGPL) VisionEgg src/Text.py glut.glutBitmapCharacter(self.parameters.font,ord(char))
  (LGPL) VisionEgg src/Text.py 'font':(glut.GLUT_STROKE_ROMAN,
  (LGPL) VisionEgg src/Text.py glut.glutStrokeCharacter(self.parameters.font,ord(char))
glutAddMenuEntry
  OpenGL/Demo suite/GLUT.py glutAddMenuEntry(key, len(item_list))
glutAddSubMenu
  OpenGL/Demo suite/GLUT.py glutAddSubMenu(key, subid)
glutAttachMenu
  OpenGL/Demo suite/GLUT.py glutAttachMenu(GLUT_RIGHT_BUTTON)
glutBitmapCharacter
  OpenGLContext tests/glutbitmapcharacter.py glutBitmapCharacter(GLUT_BITMAP_HELVETICA_18, ord(character));
  OpenGLContext scenegraph/text/glutfont.py map(glutBitmapCharacter, (self.specifier,)*len(value), map(ord, value))
  SciPy/kiva glcore2d.py glutBitmapCharacter( self._glut_font, ord( char ) )
  (LGPL) PyUI pyui/renderers/openglGlut.py glutBitmapCharacter(font, ord(char))
  (LGPL) VisionEgg src/Text.py glut.glutBitmapCharacter(self.parameters.font,ord(char))
glutBitmapWidth
  OpenGLContext scenegraph/text/glutfont.py return reduce(add, map( glutBitmapWidth, [self.specifier]*len(text), map(ord,text) ))
  (LGPL) PyUI pyui/renderers/openglGlut.py w += glutBitmapWidth(GLUT_BITMAP_HELVETICA_12, ord(c))
glutCreateMenu
  OpenGL/Demo suite/GLUT.py id = glutCreateMenu(on_item)
glutCreateWindow
  OpenGLContext glutcontext.py self.windowID = glutCreateWindow( title )
  OpenGL/Demo da/dots.py glutCreateWindow('Dots')
  OpenGL/Demo GLE/maintest.py glutCreateWindow("basic demo")
  OpenGL/Demo GLUT/examples/molehill.py glutCreateWindow('molehill')
  OpenGL/Demo NeHe/lesson1.py window = glutCreateWindow("Jeff Molofee's GL Code Tutorial ... NeHe '99")
  OpenGL/Demo NeHe/lesson18.py window = glutCreateWindow("Jeff Molofee's GL Code Tutorial ... NeHe '99")
  OpenGL/Demo NeHe/lesson2.py window = glutCreateWindow("Jeff Molofee's GL Code Tutorial ... NeHe '99")
  OpenGL/Demo NeHe/lesson3.py window = glutCreateWindow("Jeff Molofee's GL Code Tutorial ... NeHe '99")
  OpenGL/Demo NeHe/lesson4.py window = glutCreateWindow("Jeff Molofee's GL Code Tutorial ... NeHe '99")
  OpenGL/Demo NeHe/lesson5.py window = glutCreateWindow("Jeff Molofee's GL Code Tutorial ... NeHe '99")
  OpenGL/Demo NeHe/lesson6-multi.py window = glutCreateWindow("Jeff Molofee's GL Code Tutorial ... NeHe '99")
  OpenGL/Demo NeHe/lesson6.py window = glutCreateWindow("Jeff Molofee's GL Code Tutorial ... NeHe '99")
  OpenGL/Demo redbook/cube.py glutCreateWindow ('cube')
  OpenGL/Demo redbook/double.py glutCreateWindow('Double')
  OpenGL/Demo redbook/drawf.py glutCreateWindow('drawf')
  OpenGL/Demo redbook/fog.py glutCreateWindow('fog')
  OpenGL/Demo redbook/hello.py glutCreateWindow("hello")
  OpenGL/Demo redbook/lines.py glutCreateWindow('Lines')
  OpenGL/Demo redbook/movelight.py glutCreateWindow("movelight")
  OpenGL/Demo redbook/scene.py glutCreateWindow('scene')
  OpenGL/Demo redbook/smooth.py glutCreateWindow('Smooth')
  OpenGL/Demo redbook/teapots.py glutCreateWindow(sys.argv[0]);
  OpenGL/Demo simple/GLE.py glutCreateWindow("GLE demo")
  OpenGL/Demo suite/GLUT.py window = glutCreateWindow('set')
  OpenGL/Demo twburton/knot.py self.win = glutCreateWindow(filename)
  SciPy/kiva tests/test_glcore2d.py glutCreateWindow( 'Dots' )
  (LGPL) PyUI pyui/renderers/openglGlut.py self.windowID = glutCreateWindow(title)
glutDisplayFunc
  OpenGLContext glutcontext.py glutDisplayFunc()
  OpenGLContext glutcontext.py glutDisplayFunc(self.OnRedisplay)
  OpenGL/Demo da/dots.py glutDisplayFunc(display)
  OpenGL/Demo GLE/maintest.py global glutDisplayFunc, glutMotionFunc
  OpenGL/Demo GLE/maintest.py glutDisplayFunc(DrawStuff)
  OpenGL/Demo GLUT/examples/molehill.py glutDisplayFunc(display)
  OpenGL/Demo NeHe/lesson1.py glutDisplayFunc(DrawGLScene)
  OpenGL/Demo NeHe/lesson18.py glutDisplayFunc(DrawGLScene)
  OpenGL/Demo NeHe/lesson2.py glutDisplayFunc(DrawGLScene)
  OpenGL/Demo NeHe/lesson3.py glutDisplayFunc(DrawGLScene)
  OpenGL/Demo NeHe/lesson4.py glutDisplayFunc(DrawGLScene)
  OpenGL/Demo NeHe/lesson5.py glutDisplayFunc(DrawGLScene)
  OpenGL/Demo NeHe/lesson6-multi.py glutDisplayFunc(DrawGLScene)
  OpenGL/Demo NeHe/lesson6.py glutDisplayFunc(DrawGLScene)
  OpenGL/Demo redbook/cube.py glutDisplayFunc(display)
  OpenGL/Demo redbook/double.py glutDisplayFunc(display)
  OpenGL/Demo redbook/drawf.py glutDisplayFunc(display)
  OpenGL/Demo redbook/fog.py glutDisplayFunc(display)
  OpenGL/Demo redbook/hello.py glutDisplayFunc(display)
  OpenGL/Demo redbook/lines.py glutDisplayFunc(display)
  OpenGL/Demo redbook/movelight.py glutDisplayFunc(display)
  OpenGL/Demo redbook/scene.py glutDisplayFunc(display)
  OpenGL/Demo redbook/smooth.py glutDisplayFunc(display)
  OpenGL/Demo redbook/teapots.py glutDisplayFunc(display)
  OpenGL/Demo simple/GLE.py glutDisplayFunc(self.on_display)
  OpenGL/Demo suite/GLUT.py glutDisplayFunc(on_display)
  OpenGL/Demo twburton/knot.py glutDisplayFunc(self.onDisplay)
  SciPy/kiva tests/test_glcore2d.py glutDisplayFunc( display )
  (LGPL) PyUI pyui/renderers/openglGlut.py glutDisplayFunc(callback)
  (LGPL) PyUI pyui/renderers/openglGlut.py glutDisplayFunc(self.runMe)
glutEnterGameMode
  (LGPL) PyUI pyui/renderers/openglGlut.py self.windowID = glutEnterGameMode()
glutFullScreen
  OpenGLContext tests/glut_fullscreen.py glutFullScreen( )
glutGameModeString
  (LGPL) PyUI pyui/renderers/openglGlut.py glutGameModeString("%dx%d:32@70" % (w,h) )
glutGet
  OpenGLContext tests/glut_fullscreen.py glutGet( GLUT_WINDOW_X ),
  OpenGLContext tests/glut_fullscreen.py glutGet( GLUT_WINDOW_Y ),
  OpenGLContext tests/glut_fullscreen.py glutGet( GLUT_WINDOW_WIDTH  ),
  OpenGLContext tests/glut_fullscreen.py glutGet( GLUT_WINDOW_HEIGHT ),
  OpenGL/Demo suite/GLUT.py on_reshape(glutGet(GLUT_WINDOW_WIDTH), glutGet(GLUT_WINDOW_HEIGHT))
  OpenGL/Demo suite/GLUT.py on_reshape(glutGet(GLUT_WINDOW_WIDTH), glutGet(GLUT_WINDOW_HEIGHT))
glutGetModifiers
  OpenGLContext events/glutevents.py self.ProcessEvent( GLUTKeyboardEvent( self, character, x, y, 1, glutGetModifiers()))
  OpenGLContext events/glutevents.py self.ProcessEvent( GLUTKeyboardEvent( self, character, x, y, 0, glutGetModifiers()))
  OpenGLContext events/glutevents.py self.ProcessEvent( GLUTKeyboardEvent( self, character, x,y, 1, glutGetModifiers()))
  OpenGLContext events/glutevents.py self.ProcessEvent( GLUTKeypressEvent( self, character, x,y, glutGetModifiers()))
  OpenGLContext events/glutevents.py self.addPickEvent( GLUTMouseButtonEvent( self,button, state, x, y, glutGetModifiers()))
  (LGPL) PyUI pyui/renderers/openglGlut.py mod = glutGetModifiers()
glutIdleFunc
  OpenGLContext glutcontext.py glutIdleFunc()
  OpenGLContext glutcontext.py glutIdleFunc(self.OnIdle)
  OpenGL/Demo da/dots.py glutIdleFunc(display)
  OpenGL/Demo da/dots.py glutIdleFunc(halt)
  OpenGL/Demo da/dots.py glutIdleFunc(display)
  OpenGL/Demo NeHe/lesson1.py glutIdleFunc(DrawGLScene)
  OpenGL/Demo NeHe/lesson18.py glutIdleFunc(DrawGLScene)
  OpenGL/Demo NeHe/lesson2.py glutIdleFunc(DrawGLScene)
  OpenGL/Demo NeHe/lesson3.py glutIdleFunc(DrawGLScene)
  OpenGL/Demo NeHe/lesson4.py glutIdleFunc(DrawGLScene)
  OpenGL/Demo NeHe/lesson5.py glutIdleFunc(DrawGLScene)
  OpenGL/Demo NeHe/lesson6-multi.py glutIdleFunc(DrawGLScene)
  OpenGL/Demo NeHe/lesson6.py glutIdleFunc(DrawGLScene)
  OpenGL/Demo redbook/double.py glutIdleFunc(spinDisplay)
  OpenGL/Demo redbook/double.py glutIdleFunc(None)
  OpenGL/Demo suite/GLUT.py glutIdleFunc(on_idle)
  SciPy/kiva tests/test_glcore2d.py glutIdleFunc( display )
  SciPy/kiva tests/test_glcore2d.py glutIdleFunc( halt )
  SciPy/kiva tests/test_glcore2d.py glutIdleFunc( None )
  (LGPL) PyUI pyui/renderers/openglGlut.py glutIdleFunc(callback)
  (LGPL) PyUI pyui/renderers/openglGlut.py glutIdleFunc(self.runMe)
glutInit
  OpenGLContext glutinteractivecontext.py glutInit(sys.argv)
  OpenGLContext gluttestingcontext.py from OpenGL.GLUT import glutInit, glutMainLoop
  OpenGLContext gluttestingcontext.py glutInit( sys.argv)
  OpenGLContext gluttestingcontext.py glutInit( string.join(sys.argv, ' '))
  OpenGLContext glutcontext.py glutInit(sys.argv)
  OpenGL/Demo da/dots.py glutInit(sys.argv)
  OpenGL/Demo GLE/maintest.py glutInit(sys.argv)
  OpenGL/Demo GLUT/examples/molehill.py glutInit(sys.argv)
  OpenGL/Demo NeHe/lesson1.py glutInit(sys.argv)
  OpenGL/Demo NeHe/lesson18.py glutInit(sys.argv)
  OpenGL/Demo NeHe/lesson2.py glutInit(sys.argv)
  OpenGL/Demo NeHe/lesson3.py glutInit(sys.argv)
  OpenGL/Demo NeHe/lesson4.py glutInit(sys.argv)
  OpenGL/Demo NeHe/lesson5.py glutInit(sys.argv)
  OpenGL/Demo NeHe/lesson6-multi.py glutInit(sys.argv)
  OpenGL/Demo NeHe/lesson6.py glutInit(sys.argv)
  OpenGL/Demo redbook/cube.py glutInit(sys.argv)
  OpenGL/Demo redbook/double.py glutInit(sys.argv)
  OpenGL/Demo redbook/drawf.py glutInit(sys.argv)
  OpenGL/Demo redbook/fog.py glutInit(sys.argv)
  OpenGL/Demo redbook/hello.py glutInit(sys.argv)
  OpenGL/Demo redbook/lines.py glutInit(sys.argv)
  OpenGL/Demo redbook/movelight.py glutInit(sys.argv)
  OpenGL/Demo redbook/scene.py glutInit(sys.argv)
  OpenGL/Demo redbook/smooth.py glutInit(sys.argv)
  OpenGL/Demo redbook/teapots.py glutInit(sys.argv);
  OpenGL/Demo simple/GLE.py glutInit(sys.argv)
  OpenGL/Demo suite/GLUT.py glutInit(sys.argv)
  OpenGL/Demo twburton/knot.py args = glutInit(sys.argv)
  SciPy/kiva tests/test_glcore2d.py glutInit( sys.argv )
  (LGPL) PyUI pyui/renderers/openglGlut.py glutInit(sys.argv)
glutInitDisplayMode
  OpenGLContext glutcontext.py glutInitDisplayMode( self.DISPLAYMODE )
  OpenGL/Demo da/dots.py glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB)
  OpenGL/Demo GLE/maintest.py glutInitDisplayMode (GLUT_DOUBLE | GLUT_RGB | GLUT_DEPTH)
  OpenGL/Demo GLUT/examples/molehill.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo NeHe/lesson1.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo NeHe/lesson18.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo NeHe/lesson2.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo NeHe/lesson3.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo NeHe/lesson4.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo NeHe/lesson5.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo NeHe/lesson6-multi.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo NeHe/lesson6.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo redbook/cube.py glutInitDisplayMode (GLUT_SINGLE | GLUT_RGB)
  OpenGL/Demo redbook/double.py glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB)
  OpenGL/Demo redbook/drawf.py glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB)
  OpenGL/Demo redbook/fog.py glutInitDisplayMode (GLUT_DOUBLE | GLUT_RGB );
  OpenGL/Demo redbook/hello.py glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB)
  OpenGL/Demo redbook/lines.py glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB)
  OpenGL/Demo redbook/movelight.py glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB)
  OpenGL/Demo redbook/scene.py glutInitDisplayMode (GLUT_SINGLE | GLUT_RGB | GLUT_DEPTH)
  OpenGL/Demo redbook/smooth.py glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB)
  OpenGL/Demo redbook/teapots.py glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB | GLUT_DEPTH);
  OpenGL/Demo simple/GLE.py glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB | GLUT_DEPTH)
  OpenGL/Demo suite/GLUT.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  OpenGL/Demo twburton/knot.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)
  SciPy/kiva tests/test_glcore2d.py glutInitDisplayMode( GLUT_DOUBLE | GLUT_RGBA | GLUT_ALPHA )
  (LGPL) PyUI pyui/renderers/openglGlut.py glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)   #GLUT_ALPHA |
glutInitWindowPosition
  OpenGL/Demo NeHe/lesson1.py glutInitWindowPosition(0, 0)
  OpenGL/Demo NeHe/lesson18.py glutInitWindowPosition(0, 0)
  OpenGL/Demo NeHe/lesson2.py glutInitWindowPosition(0, 0)
  OpenGL/Demo NeHe/lesson3.py glutInitWindowPosition(0, 0)
  OpenGL/Demo NeHe/lesson4.py glutInitWindowPosition(0, 0)
  OpenGL/Demo NeHe/lesson5.py glutInitWindowPosition(0, 0)
  OpenGL/Demo NeHe/lesson6-multi.py glutInitWindowPosition(0, 0)
  OpenGL/Demo NeHe/lesson6.py glutInitWindowPosition(0, 0)
  OpenGL/Demo redbook/cube.py glutInitWindowPosition (100, 100)
  OpenGL/Demo redbook/double.py glutInitWindowPosition(100, 100)
  OpenGL/Demo redbook/drawf.py glutInitWindowPosition(100, 100)
  OpenGL/Demo redbook/hello.py glutInitWindowPosition(100, 100)
  OpenGL/Demo redbook/lines.py glutInitWindowPosition(100, 100)
  OpenGL/Demo redbook/movelight.py glutInitWindowPosition(100, 100)
  OpenGL/Demo redbook/smooth.py glutInitWindowPosition(100, 100)
  OpenGL/Demo redbook/teapots.py glutInitWindowPosition(50,50);
  (LGPL) PyUI pyui/renderers/openglGlut.py glutInitWindowPosition(0,0)
glutInitWindowSize
  OpenGLContext glutcontext.py apply ( glutInitWindowSize, size)
  OpenGL/Demo da/dots.py glutInitWindowSize(300, 300)
  OpenGL/Demo NeHe/lesson1.py glutInitWindowSize(640, 480)
  OpenGL/Demo NeHe/lesson18.py glutInitWindowSize(640, 480)
  OpenGL/Demo NeHe/lesson2.py glutInitWindowSize(640, 480)
  OpenGL/Demo NeHe/lesson3.py glutInitWindowSize(640, 480)
  OpenGL/Demo NeHe/lesson4.py glutInitWindowSize(640, 480)
  OpenGL/Demo NeHe/lesson5.py glutInitWindowSize(640, 480)
  OpenGL/Demo NeHe/lesson6-multi.py glutInitWindowSize(640, 480)
  OpenGL/Demo NeHe/lesson6.py glutInitWindowSize(640, 480)
  OpenGL/Demo redbook/cube.py glutInitWindowSize (500, 500)
  OpenGL/Demo redbook/double.py glutInitWindowSize(250, 250)
  OpenGL/Demo redbook/drawf.py glutInitWindowSize(100, 100)
  OpenGL/Demo redbook/fog.py glutInitWindowSize(500, 500)
  OpenGL/Demo redbook/hello.py glutInitWindowSize(250, 250)
  OpenGL/Demo redbook/lines.py glutInitWindowSize(400, 150)
  OpenGL/Demo redbook/movelight.py glutInitWindowSize (500, 500);
  OpenGL/Demo redbook/scene.py glutInitWindowSize (500, 500)
  OpenGL/Demo redbook/smooth.py glutInitWindowSize(500, 500)
  OpenGL/Demo redbook/teapots.py glutInitWindowSize(500, 600);
  OpenGL/Demo twburton/knot.py glutInitWindowSize(width, height)
  SciPy/kiva tests/test_glcore2d.py glutInitWindowSize( 1000, 1000 )
  (LGPL) PyUI pyui/renderers/openglGlut.py glutInitWindowSize(w,h)
glutKeyboardFunc
  OpenGLContext glutcontext.py glutKeyboardFunc()
  OpenGLContext glutcontext.py glutKeyboardFunc(self.glutOnCharacter)
  OpenGL/Demo da/dots.py glutKeyboardFunc(keyboard)
  OpenGL/Demo NeHe/lesson1.py glutKeyboardFunc(keyPressed)
  OpenGL/Demo NeHe/lesson18.py glutKeyboardFunc(keyPressed)
  OpenGL/Demo NeHe/lesson2.py glutKeyboardFunc(keyPressed)
  OpenGL/Demo NeHe/lesson3.py glutKeyboardFunc(keyPressed)
  OpenGL/Demo NeHe/lesson4.py glutKeyboardFunc(keyPressed)
  OpenGL/Demo NeHe/lesson5.py glutKeyboardFunc(keyPressed)
  OpenGL/Demo NeHe/lesson6-multi.py glutKeyboardFunc(keyPressed)
  OpenGL/Demo NeHe/lesson6.py glutKeyboardFunc(keyPressed)
  OpenGL/Demo redbook/cube.py glutKeyboardFunc(keyboard)
  OpenGL/Demo redbook/drawf.py glutKeyboardFunc(keyboard)
  OpenGL/Demo redbook/fog.py glutKeyboardFunc(keyboard)
  OpenGL/Demo redbook/lines.py glutKeyboardFunc(keyboard)
  OpenGL/Demo redbook/movelight.py glutKeyboardFunc(keyboard)
  OpenGL/Demo redbook/scene.py glutKeyboardFunc(keyboard)
  OpenGL/Demo redbook/smooth.py glutKeyboardFunc(keyboard)
  OpenGL/Demo redbook/teapots.py glutKeyboardFunc(keyboard)
  SciPy/kiva tests/test_glcore2d.py glutKeyboardFunc( keyboard )
  (LGPL) PyUI pyui/renderers/openglGlut.py glutKeyboardFunc(self.onKeyDown)
glutKeyboardUpFunc
  OpenGLContext glutcontext.py glutKeyboardUpFunc()
  OpenGLContext glutcontext.py glutKeyboardUpFunc(self.glutOnKeyUp)
  (LGPL) PyUI pyui/renderers/openglGlut.py glutKeyboardUpFunc(self.onKeyUp)
glutLeaveGameMode
  (LGPL) PyUI pyui/renderers/openglGlut.py glutLeaveGameMode()
glutMainLoop
  OpenGLContext glutinteractivecontext.py glutMainLoop()
  OpenGLContext gluttestingcontext.py from OpenGL.GLUT import glutInit, glutMainLoop
  OpenGLContext gluttestingcontext.py glutMainLoop()
  OpenGLContext glutcontext.py glutMainLoop()
  OpenGL/Demo da/dots.py glutMainLoop()
  OpenGL/Demo GLE/maintest.py glutMainLoop ()
  OpenGL/Demo GLUT/examples/molehill.py glutMainLoop()
  OpenGL/Demo NeHe/lesson1.py glutMainLoop()
  OpenGL/Demo NeHe/lesson18.py glutMainLoop()
  OpenGL/Demo NeHe/lesson2.py glutMainLoop()
  OpenGL/Demo NeHe/lesson3.py glutMainLoop()
  OpenGL/Demo NeHe/lesson4.py glutMainLoop()
  OpenGL/Demo NeHe/lesson5.py glutMainLoop()
  OpenGL/Demo NeHe/lesson6-multi.py glutMainLoop()
  OpenGL/Demo NeHe/lesson6.py glutMainLoop()
  OpenGL/Demo redbook/cube.py glutMainLoop()
  OpenGL/Demo redbook/double.py glutMainLoop()
  OpenGL/Demo redbook/drawf.py glutMainLoop()
  OpenGL/Demo redbook/fog.py glutMainLoop()
  OpenGL/Demo redbook/hello.py glutMainLoop()
  OpenGL/Demo redbook/lines.py glutMainLoop()
  OpenGL/Demo redbook/movelight.py glutMainLoop()
  OpenGL/Demo redbook/scene.py glutMainLoop()
  OpenGL/Demo redbook/smooth.py glutMainLoop()
  OpenGL/Demo redbook/teapots.py glutMainLoop()
  OpenGL/Demo simple/GLE.py glutMainLoop ()
  OpenGL/Demo suite/GLUT.py glutMainLoop()
  OpenGL/Demo twburton/knot.py glutMainLoop()
  SciPy/kiva tests/test_glcore2d.py glutMainLoop()
  (LGPL) PyUI pyui/renderers/openglGlut.py glutMainLoop()
glutMotionFunc
  OpenGLContext glutcontext.py glutMotionFunc()
  OpenGLContext glutcontext.py glutMotionFunc(self.glutOnMouseMove)
  OpenGL/Demo GLE/maintest.py global glutDisplayFunc, glutMotionFunc
  OpenGL/Demo GLE/maintest.py glutMotionFunc(MouseMotion)
  OpenGL/Demo simple/GLE.py glutMotionFunc(self.on_motion)
  OpenGL/Demo suite/GLUT.py glutMotionFunc(on_motion)
  (LGPL) PyUI pyui/renderers/openglGlut.py glutMotionFunc(self.onMotion)
glutMouseFunc
  OpenGLContext glutcontext.py glutMouseFunc()
  OpenGLContext glutcontext.py glutMouseFunc(self.glutOnMouseButton)
  OpenGL/Demo da/dots.py glutMouseFunc(mouse)
  OpenGL/Demo redbook/double.py glutMouseFunc(mouse)
  OpenGL/Demo redbook/movelight.py glutMouseFunc(mouse)
  SciPy/kiva tests/test_glcore2d.py glutMouseFunc( mouse )
  (LGPL) PyUI pyui/renderers/openglGlut.py glutMouseFunc(self.onMouse)
glutOnCharacter
  OpenGLContext glutcontext.py glutSetKeyboardFuncCallback(self.glutOnCharacter)
  OpenGLContext glutcontext.py glutKeyboardFunc(self.glutOnCharacter)
  OpenGLContext events/glutevents.py def glutOnCharacter( self, character, x,y ):
glutOnKeyDown
  OpenGLContext glutcontext.py glutSetSpecialFuncCallback(self.glutOnKeyDown)
  OpenGLContext glutcontext.py glutSpecialFunc(self.glutOnKeyDown)
  OpenGLContext events/glutevents.py def glutOnKeyDown( self, character, x,y ):
glutOnKeyUp
  OpenGLContext glutcontext.py glutSetKeyboardUpFuncCallback(self.glutOnKeyUp)
  OpenGLContext glutcontext.py glutKeyboardUpFunc(self.glutOnKeyUp)
  OpenGLContext glutcontext.py glutSetSpecialUpFuncCallback(self.glutOnKeyUp)
  OpenGLContext glutcontext.py glutSpecialUpFunc(self.glutOnKeyUp)
  OpenGLContext events/glutevents.py def glutOnKeyUp( self, character, x,y ):
glutOnMouseButton
  OpenGLContext glutcontext.py glutSetMouseFuncCallback(self.glutOnMouseButton)
  OpenGLContext glutcontext.py glutMouseFunc(self.glutOnMouseButton)
  OpenGLContext events/glutevents.py def glutOnMouseButton(self, button, state, x, y):
glutOnMouseMove
  OpenGLContext glutcontext.py glutSetMotionFuncCallback(self.glutOnMouseMove)
  OpenGLContext glutcontext.py glutMotionFunc(self.glutOnMouseMove)
  OpenGLContext glutcontext.py glutSetPassiveMotionFuncCallback(self.glutOnMouseMove)
  OpenGLContext glutcontext.py glutPassiveMotionFunc(self.glutOnMouseMove)
  OpenGLContext events/glutevents.py def glutOnMouseMove(self, x, y):
glutPassiveMotionFunc
  OpenGLContext glutcontext.py glutPassiveMotionFunc()
  OpenGLContext glutcontext.py glutPassiveMotionFunc(self.glutOnMouseMove)
  (LGPL) PyUI pyui/renderers/openglGlut.py glutPassiveMotionFunc(self.onMotion)
glutPositionWindow
  OpenGLContext tests/glut_fullscreen.py glutPositionWindow( posx, posy )
glutPostRedisplay
  OpenGL/Demo GLE/maintest.py glutPostRedisplay ()
  OpenGL/Demo redbook/double.py glutPostRedisplay()
  OpenGL/Demo redbook/fog.py glutPostRedisplay()
  OpenGL/Demo redbook/movelight.py glutPostRedisplay()
  OpenGL/Demo simple/GLE.py glutPostRedisplay()
  OpenGL/Demo suite/GLUT.py glutPostRedisplay()
  OpenGL/Demo suite/GLUT.py glutPostRedisplay()
  OpenGL/Demo suite/items/__init__.py glutPostRedisplay()
  OpenGL/Demo twburton/knot.py glutPostRedisplay()
  OpenGL/Demo twburton/knot.py glutPostRedisplay()
  OpenGL/Demo twburton/knot.py glutPostRedisplay()
  OpenGL/Demo twburton/knot.py glutPostRedisplay()
glutReshapeFunc
  OpenGLContext glutcontext.py glutReshapeFunc()
  OpenGLContext glutcontext.py glutReshapeFunc(self.OnResize)
  OpenGL/Demo da/dots.py glutReshapeFunc(reshape)
  OpenGL/Demo NeHe/lesson1.py glutReshapeFunc(ReSizeGLScene)
  OpenGL/Demo NeHe/lesson18.py glutReshapeFunc(ReSizeGLScene)
  OpenGL/Demo NeHe/lesson2.py glutReshapeFunc(ReSizeGLScene)
  OpenGL/Demo NeHe/lesson3.py glutReshapeFunc(ReSizeGLScene)
  OpenGL/Demo NeHe/lesson4.py glutReshapeFunc(ReSizeGLScene)
  OpenGL/Demo NeHe/lesson5.py glutReshapeFunc(ReSizeGLScene)
  OpenGL/Demo NeHe/lesson6-multi.py glutReshapeFunc(ReSizeGLScene)
  OpenGL/Demo NeHe/lesson6.py glutReshapeFunc(ReSizeGLScene)
  OpenGL/Demo redbook/cube.py glutReshapeFunc(reshape)
  OpenGL/Demo redbook/double.py glutReshapeFunc(reshape)
  OpenGL/Demo redbook/drawf.py glutReshapeFunc(reshape)
  OpenGL/Demo redbook/fog.py glutReshapeFunc(reshape)
  OpenGL/Demo redbook/lines.py glutReshapeFunc(reshape)
  OpenGL/Demo redbook/movelight.py glutReshapeFunc(reshape)
  OpenGL/Demo redbook/scene.py glutReshapeFunc(reshape)
  OpenGL/Demo redbook/smooth.py glutReshapeFunc(reshape)
  OpenGL/Demo redbook/teapots.py glutReshapeFunc(reshape)
  OpenGL/Demo simple/GLE.py glutReshapeFunc(self.on_reshape)
  OpenGL/Demo suite/GLUT.py glutReshapeFunc(on_reshape)
  OpenGL/Demo twburton/knot.py glutReshapeFunc(self.onReshape)
  SciPy/kiva tests/test_glcore2d.py glutReshapeFunc( reshape )
  (LGPL) PyUI pyui/renderers/openglGlut.py glutReshapeFunc(self.ReSizeGLScene)
glutReshapeWindow
  OpenGLContext tests/glut_fullscreen.py glutReshapeWindow( sizex, sizey)
glutSetDisplayFuncCallback
  OpenGLContext glutcontext.py glutSetDisplayFuncCallback(self.OnRedisplay)
glutSetIdleFuncCallback
  OpenGLContext glutcontext.py glutSetIdleFuncCallback(self.OnIdle)
glutSetKeyboardFuncCallback
  OpenGLContext glutcontext.py glutSetKeyboardFuncCallback(self.glutOnCharacter)
glutSetKeyboardUpFuncCallback
  OpenGLContext glutcontext.py glutSetKeyboardUpFuncCallback(self.glutOnKeyUp)
glutSetMenu
  OpenGL/Demo suite/GLUT.py glutSetMenu(id)
glutSetMotionFuncCallback
  OpenGLContext glutcontext.py glutSetMotionFuncCallback(self.glutOnMouseMove)
glutSetMouseFuncCallback
  OpenGLContext glutcontext.py glutSetMouseFuncCallback(self.glutOnMouseButton)
glutSetPassiveMotionFuncCallback
  OpenGLContext glutcontext.py glutSetPassiveMotionFuncCallback(self.glutOnMouseMove)
glutSetReshapeFuncCallback
  OpenGLContext glutcontext.py glutSetReshapeFuncCallback(self.OnResize)
glutSetSpecialFuncCallback
  OpenGLContext glutcontext.py glutSetSpecialFuncCallback(self.glutOnKeyDown)
glutSetSpecialUpFuncCallback
  OpenGLContext glutcontext.py glutSetSpecialUpFuncCallback(self.glutOnKeyUp)
glutSetWindow
  OpenGLContext glutcontext.py glutSetWindow( self.windowID )
  OpenGLContext glutcontext.py glutSetWindow( self.windowID )
  (LGPL) PyUI pyui/renderers/openglGlut.py glutSetWindow(self.windowID)
glutSolidCone
  OpenGL/Demo redbook/scene.py glutSolidCone(1.0, 2.0, 15, 15)
  OpenGL/Demo suite/items/GLUT/geometry/solid_cone.py glutSolidCone(1, 1, 20, 20)
  OpenGL/Demo tom/cone.py glutSolidCone(1, 2, 50, 10)
  OpenGL/Demo tom/conechecker.py glutSolidCone(1, 2, 50, 10)
  OpenGL/Demo tom/conesave.py glutSolidCone(1, 2, 50, 10)
glutSolidCube
  OpenGLContext tests/redbook_alpha3D.py glutSolidCube (0.6);
  OpenGL/Demo suite/items/GLUT/geometry/solid_cube.py glutSolidCube(1)
glutSolidDodecahedron
  OpenGL/Demo suite/items/GLUT/geometry/solid_dodecahedron.py glutSolidDodecahedron()
glutSolidIcosahedron
  OpenGL/Demo suite/items/GLUT/geometry/solid_icosahedron.py glutSolidIcosahedron()
glutSolidOctahedron
  OpenGL/Demo suite/items/GLUT/geometry/solid_octahedron.py glutSolidOctahedron()
glutSolidSphere
  OpenGLContext tests/lightobject.py glutSolidSphere( 2, 16,16)
  OpenGLContext tests/redbook_alpha3D.py glutSolidSphere (0.4, 16, 16);
  OpenGL/Demo redbook/fog.py glutSolidSphere(0.4, 16, 16)
  OpenGL/Demo redbook/scene.py glutSolidSphere(1.0, 15, 15)
  OpenGL/Demo suite/items/GLUT/geometry/solid_sphere.py glutSolidSphere(1, 20, 20)
  OpenGL/Demo tom/checker.py glutSolidSphere(1.0,20,20)
  OpenGL/Demo tom/conechecker.py glutSolidSphere(1.0,20,20)
  OpenGL/Demo tom/pick.py glutSolidSphere(1.4,20,20)
glutSolidTeapot
  OpenGL/Demo NeHe/lesson18.py glutSolidTeapot(1.0)
  OpenGL/Demo redbook/teapots.py glutSolidTeapot(1.0)
  OpenGL/Demo suite/items/GLUT/geometry/solid_teapot.py glutSolidTeapot(0.5)
glutSolidTetrahedron
  OpenGL/Demo suite/items/GLUT/geometry/solid_tetrahedron.py glutSolidTetrahedron()
glutSolidTorus
  OpenGL/Demo redbook/movelight.py glutSolidTorus (0.275, 0.85, 8, 15)
  OpenGL/Demo redbook/scene.py glutSolidTorus(0.275, 0.85, 15, 15)
  OpenGL/Demo suite/items/GLUT/geometry/solid_torus.py glutSolidTorus(0.15, 0.75, 20, 20)
  OpenGL/Demo tom/fog.py glutSolidTorus(0.275, 0.85, 20, 20)
glutSpecialFunc
  OpenGLContext glutcontext.py glutSpecialFunc()
  OpenGLContext glutcontext.py glutSpecialFunc(self.glutOnKeyDown)
  OpenGL/Demo twburton/knot.py glutSpecialFunc(self.onSpecial)
  (LGPL) PyUI pyui/renderers/openglGlut.py glutSpecialFunc(self.onSpecialDown)
glutSpecialUpFunc
  OpenGLContext glutcontext.py glutSpecialUpFunc()
  OpenGLContext glutcontext.py glutSpecialUpFunc(self.glutOnKeyUp)
  (LGPL) PyUI pyui/renderers/openglGlut.py glutSpecialUpFunc(self.onSpecialUp)
glutStrokeCharacter
  (LGPL) VisionEgg src/Text.py glut.glutStrokeCharacter(self.parameters.font,ord(char))
glutSwapBuffers
  OpenGLContext glutcontext.py glutSwapBuffers() # should really check to be sure we are double buffered
  OpenGL/Demo da/dots.py glutSwapBuffers()
  OpenGL/Demo GLE/cone.py glutSwapBuffers ()
  OpenGL/Demo GLE/helix.py glutSwapBuffers ()
  OpenGL/Demo GLE/texas.py glutSwapBuffers ()
  OpenGL/Demo GLUT/examples/molehill.py glutSwapBuffers()
  OpenGL/Demo NeHe/lesson1.py glutSwapBuffers()
  OpenGL/Demo NeHe/lesson18.py glutSwapBuffers()
  OpenGL/Demo NeHe/lesson2.py glutSwapBuffers()
  OpenGL/Demo NeHe/lesson3.py glutSwapBuffers()
  OpenGL/Demo NeHe/lesson4.py glutSwapBuffers()
  OpenGL/Demo NeHe/lesson5.py glutSwapBuffers()
  OpenGL/Demo NeHe/lesson6-multi.py glutSwapBuffers()
  OpenGL/Demo NeHe/lesson6.py glutSwapBuffers()
  OpenGL/Demo redbook/double.py glutSwapBuffers()
  OpenGL/Demo redbook/fog.py glutSwapBuffers()
  OpenGL/Demo simple/GLE.py glutSwapBuffers()
  OpenGL/Demo suite/GLUT.py glutSwapBuffers()
  OpenGL/Demo twburton/knot.py glutSwapBuffers()
  (LGPL) PyUI pyui/renderers/openglGlut.py glutSwapBuffers()
glutWireCone
  OpenGL/Demo suite/items/GLUT/geometry/wire_cone.py glutWireCone(1, 1, 20, 20)
glutWireCube
  OpenGL/Demo redbook/cube.py glutWireCube (1.0)
  OpenGL/Demo redbook/movelight.py glutWireCube (0.1)
  OpenGL/Demo suite/items/GLUT/geometry/wire_cube.py glutWireCube(1)
glutWireDodecahedron
  OpenGL/Demo suite/items/GLUT/geometry/wire_dodecahedron.py glutWireDodecahedron()
glutWireIcosahedron
  OpenGL/Demo suite/items/GLUT/geometry/wire_icosahedron.py glutWireIcosahedron()
glutWireOctahedron
  OpenGL/Demo suite/items/GLUT/geometry/wire_octahedron.py glutWireOctahedron()
glutWireSphere
  OpenGLContext shadow/volume.py from OpenGL.GLUT import glutWireSphere
  OpenGLContext shadow/volume.py glutWireSphere( .2,8,8)
  OpenGL/Demo suite/items/GLUT/geometry/wire_sphere.py glutWireSphere(1, 20, 20)
glutWireTeapot
  OpenGL/Demo suite/items/GLUT/geometry/wire_teapot.py glutWireTeapot(0.5)
glutWireTetrahedron
  OpenGL/Demo suite/items/GLUT/geometry/wire_tetrahedron.py glutWireTetrahedron()
glutWireTorus
  OpenGL/Demo suite/items/GLUT/geometry/wire_torus.py glutWireTorus(0.15, 0.75, 20, 20)
glutcontext
  OpenGLContext glutinteractivecontext.py from OpenGLContext import interactivecontext, glutcontext, context, viewplatformmixin
  OpenGLContext glutinteractivecontext.py glutcontext.GLUTContext,
glutevents
  OpenGLContext glutcontext.py from OpenGLContext.events import glutevents
  OpenGLContext glutcontext.py glutevents.EventHandlerMixin,
glutinteractivecontext
  OpenGLContext gluttestingcontext.py from OpenGLContext import glutinteractivecontext
  OpenGLContext gluttestingcontext.py BaseContext = glutinteractivecontext.GLUTInteractiveContext
glvisual
  OpenGLContext fxcontext.py self.glvisual = FXGLVisual(self.getApp(),VISUAL_DOUBLEBUFFER)
  OpenGLContext fxcontext.py self.glcanvas = FXGLCanvas(self,self.glvisual,self,self.ID_CANVAS,LAYOUT_FILL_X|LAYOUT_FILL_Y|LAYOUT_TOP|LAYOUT_LEFT)
  OpenGLContext fxcontext.py if self.glvisual.isDoubleBuffer(): self.glcanvas.swapBuffers()
glx
  SciPy/kiva agg/graphics_context.py glx = int(left - gleft)
  SciPy/kiva agg/graphics_context.py ghx = int(glx+width)
  SciPy/kiva agg/graphics_context.py gl_ary = glyphs[gly:ghy,glx:ghx]
gly
  SciPy/kiva agg/graphics_context.py gly = int(gtop - top)
  SciPy/kiva agg/graphics_context.py ghy = int(gly+height)
  SciPy/kiva agg/graphics_context.py gl_ary = glyphs[gly:ghy,glx:ghx]
glyph
  SciPy/kiva pdfmetrics.py glyph = self.vector[i]
  SciPy/kiva pdfmetrics.py if glyph==otherEnc.vector[i]:
  SciPy/kiva pdfmetrics.py curRange.append(glyph)
  SciPy/kiva pdfmetrics.py elif glyph:
  SciPy/kiva pdfmetrics.py curRange = [i, glyph]
glyphData
  SciPy/kiva pdfmetrics.py (topLevel, glyphData) = parseAFMFile(afmFileName)
  SciPy/kiva pdfmetrics.py for (cid, width, name) in glyphData:
  SciPy/kiva pdfmetrics.py for (code, width, name) in glyphData:
glyphDict
  SciPy/kiva pdfmetrics.py (topDict, glyphDict) = parseAFMFile(possible)
glyphLevel
  SciPy/kiva pdfmetrics.py glyphLevel = []
  SciPy/kiva pdfmetrics.py glyphLevel.append((cid, width, name))
  SciPy/kiva pdfmetrics.py return (topLevel, glyphLevel)
glyphName
  SciPy/kiva pdfmetrics.py glyphName = vec[i]
  SciPy/kiva pdfmetrics.py if glyphName is not None:
  SciPy/kiva pdfmetrics.py width = gw[glyphName]
  SciPy/kiva pdfmetrics.py print 'typeface "%s" does not have a glyph "%s", bad font!' % (self.face.name, glyphName)
glyphNames
  SciPy/kiva pdfmetrics.py self.glyphNames = []
  SciPy/kiva pdfmetrics.py self.glyphNames = self.glyphWidths.keys()
  SciPy/kiva pdfmetrics.py self.glyphNames = glyphWidths.keys()
  SciPy/kiva pdfmetrics.py self.glyphNames.sort()
  SciPy/kiva pdfmetrics.py print helv.glyphNames[0:30]
  SciPy/kiva pdfmetrics.py print wombat.glyphNames
glyphWidths
  SciPy/kiva pdfmetrics.py self.glyphWidths = {}
  SciPy/kiva pdfmetrics.py self.glyphWidths = _fontdata.widthsByFontGlyph[name]
  SciPy/kiva pdfmetrics.py self.glyphNames = self.glyphWidths.keys()
  SciPy/kiva pdfmetrics.py gw = self.face.glyphWidths
  SciPy/kiva pdfmetrics.py glyphWidths = {}
  SciPy/kiva pdfmetrics.py glyphWidths[name] = width
  SciPy/kiva pdfmetrics.py self.glyphWidths = glyphWidths
  SciPy/kiva pdfmetrics.py self.glyphWidths = glyphWidths
  SciPy/kiva pdfmetrics.py self.glyphNames = glyphWidths.keys()
glyphs
  SciPy/kiva basecore2d.py glyphs = ft_engine.render( textstring )
  SciPy/kiva basecore2d.py dy, dx = shape( glyphs.img )
  SciPy/kiva basecore2d.py return ( dx, dy, -glyphs.bbox[1], 0 )
  SciPy/kiva glcore2d.py def device_draw_glyphs ( self, glyphs, tx, ty ):
  SciPy/kiva glcore2d.py dy, dx      = shape( glyphs.img )
  SciPy/kiva glcore2d.py img[:,:,3]  = glyphs.img.astype( Int8 )[::-1]
  SciPy/kiva glcore2d.py glRasterPos( tx + glyphs.bbox[0], ty + glyphs.bbox[1] )
  SciPy/kiva glcore2d.py glRasterPos( tx + glyphs.bbox[0], ty + glyphs.bbox[1] )
  SciPy/kiva wxcore2d.py def device_draw_glyphs ( self, glyphs, tx, ty ):
  SciPy/kiva wxcore2d.py img = take( cmap, glyphs.img )
  SciPy/kiva wxcore2d.py self.dc.DrawBitmap( bitmap, tx + glyphs.bbox[0],
  SciPy/kiva wxcore2d.py ty + glyphs.bbox[1], 1 )
  SciPy/kiva agg/graphics_context.py glyphs = _glyphs.image
  SciPy/kiva agg/graphics_context.py gh,gw = shape(glyphs)
  SciPy/kiva agg/graphics_context.py gl_ary = glyphs[gly:ghy,glx:ghx]
wglGetCurrentDC
  OpenGLContext tests/glprint.py wgldc = wglGetCurrentDC()
  OpenGLContext scenegraph/text/wglfont.py wgldc = wglGetCurrentDC() # the DC that's doing the work
  OpenGLContext scenegraph/text/wglfont.py wgldc = wglGetCurrentDC() # the DC that's doing the work
wglGetExtensionsStringEXT
  (LGPL) VisionEgg test/opengl_info.py for extension in string.split(wglGetExtensionsStringEXT()):
wglGetSwapIntervalEXT
  (LGPL) VisionEgg src/PlatformDependent.py if OpenGL.WGL.EXT.swap_control.wglGetSwapIntervalEXT() == 1:
wglInitExtensionsStringEXT
  (LGPL) VisionEgg test/opengl_info.py if wglInitExtensionsStringEXT(): # Returns 1 if it's working
wglInitSwapControlARB
  (LGPL) VisionEgg src/PlatformDependent.py if OpenGL.WGL.EXT.swap_control.wglInitSwapControlARB(): # Returns 1 if it's working
wglSwapIntervalEXT
  (LGPL) VisionEgg src/PlatformDependent.py OpenGL.WGL.EXT.swap_control.wglSwapIntervalEXT(1) # Swap only at frame syncs
wglUseFontBitmaps
  OpenGLContext tests/glprint.py wglUseFontBitmaps(wgldc, 32, 96, self.base)	# Builds 96 Characters Starting At Character 32
wglUseFontBitmapsW
  OpenGLContext scenegraph/text/wglfont.py wglUseFontBitmapsW(
wglUseFontOutlinesW
  OpenGLContext scenegraph/text/wglfont.py wglUseFontOutlinesW(
wgldc
  OpenGLContext tests/glprint.py wgldc = wglGetCurrentDC()
  OpenGLContext tests/glprint.py dc = win32ui.CreateDCFromHandle( wgldc )
  OpenGLContext tests/glprint.py wglUseFontBitmaps(wgldc, 32, 96, self.base)	# Builds 96 Characters Starting At Character 32
  OpenGLContext scenegraph/text/wglfont.py wgldc = None
  OpenGLContext scenegraph/text/wglfont.py if wgldc is None:
  OpenGLContext scenegraph/text/wglfont.py wgldc = wglGetCurrentDC() # the DC that's doing the work
  OpenGLContext scenegraph/text/wglfont.py text_log.debug( """  built wgldc, %s""", wgldc)
  OpenGLContext scenegraph/text/wglfont.py if wgldc == None:
  OpenGLContext scenegraph/text/wglfont.py dc = win32ui.CreateDCFromHandle( wgldc )
  OpenGLContext scenegraph/text/wglfont.py base, metrics = self._createSingleChar(wgldc, char)
  OpenGLContext scenegraph/text/wglfont.py wgldc = wglGetCurrentDC() # the DC that's doing the work
  OpenGLContext scenegraph/text/wglfont.py dc = win32ui.CreateDCFromHandle( wgldc )
  OpenGLContext scenegraph/text/wglfont.py base, metrics = self._createSingleChar(wgldc, char)
  OpenGLContext scenegraph/text/wglfont.py def _createSingleChar( self, wgldc, char, base=None ):
  OpenGLContext scenegraph/text/wglfont.py wgldc, # the win32-specific OpenGL Context handle
  OpenGLContext scenegraph/text/wglfont.py def _createSingleChar( self, wgldc, char, base=None ):
  OpenGLContext scenegraph/text/wglfont.py base,metrics = super( WGLBitmapFont, self)._createSingleChar( wgldc, char, base )
  OpenGLContext scenegraph/text/wglfont.py wgldc, # the win32-specific OpenGL Context handle
wglfont
  OpenGLContext scenegraph/text/wglfontprovider.py from OpenGLContext.scenegraph.text import fontprovider, wglfont
  OpenGLContext scenegraph/text/wglfontprovider.py return wglfont.WGLOutlineFont(
  OpenGLContext scenegraph/text/wglfontprovider.py return wglfont.WGLBitmapFont(
wglfontprovider
  OpenGLContext tests/wgl_font.py from OpenGLContext.scenegraph.text import wglfontprovider, fontprovider
  OpenGLContext scenegraph/text/text.py from OpenGLContext.scenegraph.text import wglfontprovider#, fontprovider
  OpenGLContext scenegraph/text/text.py providermodule = wglfontprovider
